pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/249/249.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/249/249.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.369ms
Contains 0.045ms
Restrict 0.055ms
MPrep 0.057ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [126] grounded tasks and [64] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [204] grounded tasks and [197] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 204 tasks, 197 methods.
Grounded PG:
Input was [126, 204], output was [126, 64].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 48 S 0 SC 0 SM 0 NSM 0 I 0 P 126 S 0 A 78 M 197
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/249/249.sas.
- State has 48 bits divided into 48 mutex groups.
- Domain contains 126 actions.
- Domain contains 204 tasks.
- Domain contains 197 methods.
- The initial state contains 11 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 192
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.006ms.

Computing invariants [Rintanen]
Initial candidates build (3384)
Round 1: 3384 invariants remaining
Round 2: 875 invariants remaining
Round 3: 370 invariants remaining
Round 4: 90 invariants remaining
Found 90 invariants in 0.607ms
Calculate SCCs...
- Number of SCCs: 192
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.051 ms
Computed PDT. Extracting leafs ... 7 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 8 of 8
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.08 ms
Computed PDT. Extracting leafs ... 21 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 50 of 50
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.254 ms
Computed PDT. Extracting leafs ... 35 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 204 of 204
Leaf Primitive Pruning: 70 of 70
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.488 ms
Computed PDT. Extracting leafs ... 49 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 75 of 302
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 227
Pruning: 536 of 536
Leaf Primitive Pruning: 302 of 302
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 0.831 ms
Computed PDT. Extracting leafs ... 63 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 86 of 644
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 558
Pruning: 422 of 1038
Leaf Primitive Pruning: 198 of 644
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 1325 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 36 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.888ms SM: 0 M: 0 I: 0 SI: 90
[34mFormula: [m7876 decomposition 4799 state 3240 mutex
Formula has 3101 vars and 15915 clauses.
Formula time: 6.610ms
Starting solver
Solver time: 0.589ms
Solver state: [32mSAT[m
==>
0 drive[truck_1,city_loc_2,city_loc_3]
1 drive[truck_1,city_loc_3,city_loc_1]
2 pick_up[truck_1,city_loc_1,package_3,capacity_1,capacity_2]
3 drive[truck_1,city_loc_1,city_loc_3]
4 drive[truck_1,city_loc_3,city_loc_2]
5 drop[truck_1,city_loc_2,package_3,capacity_1,capacity_2]
6 drive[truck_1,city_loc_2,city_loc_6]
7 pick_up[truck_1,city_loc_6,package_0,capacity_1,capacity_2]
8 drive[truck_1,city_loc_6,city_loc_2]
9 drive[truck_1,city_loc_2,city_loc_3]
10 drive[truck_1,city_loc_3,city_loc_2]
11 drop[truck_1,city_loc_2,package_0,capacity_1,capacity_2]
12 noop[truck_0,city_loc_6]
13 pick_up[truck_0,city_loc_6,package_2,capacity_1,capacity_2]
14 drive[truck_0,city_loc_6,city_loc_2]
15 drive[truck_0,city_loc_2,city_loc_4]
16 drive[truck_0,city_loc_4,city_loc_5]
17 drop[truck_0,city_loc_5,package_2,capacity_1,capacity_2]
18 drive[truck_1,city_loc_2,city_loc_3]
19 drive[truck_1,city_loc_3,city_loc_1]
20 pick_up[truck_1,city_loc_1,package_1,capacity_1,capacity_2]
21 drive[truck_1,city_loc_1,city_loc_3]
22 drive[truck_1,city_loc_3,city_loc_2]
23 drive[truck_1,city_loc_2,city_loc_6]
24 drop[truck_1,city_loc_6,package_1,capacity_1,capacity_2]
25 drive[truck_1,city_loc_6,city_loc_2]
26 drive[truck_1,city_loc_2,city_loc_3]
27 pick_up[truck_1,city_loc_3,package_5,capacity_1,capacity_2]
28 drive[truck_1,city_loc_3,city_loc_4]
29 drive[truck_1,city_loc_4,city_loc_5]
30 drive[truck_1,city_loc_5,city_loc_0]
31 drop[truck_1,city_loc_0,package_5,capacity_1,capacity_2]
32 drive[truck_0,city_loc_5,city_loc_4]
33 pick_up[truck_0,city_loc_4,package_6,capacity_1,capacity_2]
34 drive[truck_0,city_loc_4,city_loc_2]
35 drive[truck_0,city_loc_2,city_loc_6]
36 drive[truck_0,city_loc_6,city_loc_2]
37 drop[truck_0,city_loc_2,package_6,capacity_1,capacity_2]
38 drive[truck_0,city_loc_2,city_loc_4]
39 pick_up[truck_0,city_loc_4,package_4,capacity_1,capacity_2]
40 drive[truck_0,city_loc_4,city_loc_3]
41 drive[truck_0,city_loc_3,city_loc_2]
42 drive[truck_0,city_loc_2,city_loc_6]
43 drop[truck_0,city_loc_6,package_4,capacity_1,capacity_2]
root 44
44 __top[] -> __top_method 45 53 61 69 78 87 95
45 deliver[package_3,city_loc_2] -> m_deliver_ordering_0 46 50 52
46 m_deliver_ordering_0_splitted_1[truck_1,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 47 49
47 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 48 1
48 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 0
49 load[truck_1,city_loc_1,package_3] -> m_load_ordering_0 2
50 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 51 4
51 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 3
52 unload[truck_1,city_loc_2,package_3] -> m_unload_ordering_0 5
53 deliver[package_0,city_loc_2] -> m_deliver_ordering_0 54 57 60
54 m_deliver_ordering_0_splitted_1[truck_1,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 55 56
55 get_to[truck_1,city_loc_6] -> m_drive_to_ordering_0 6
56 load[truck_1,city_loc_6,package_0] -> m_load_ordering_0 7
57 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 58 10
58 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 59 9
59 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 8
60 unload[truck_1,city_loc_2,package_0] -> m_unload_ordering_0 11
61 deliver[package_2,city_loc_5] -> m_deliver_ordering_0 62 65 68
62 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 63 64
63 get_to[truck_0,city_loc_6] -> m_i_am_there_ordering_0 12
64 load[truck_0,city_loc_6,package_2] -> m_load_ordering_0 13
65 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 66 16
66 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 67 15
67 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 14
68 unload[truck_0,city_loc_5,package_2] -> m_unload_ordering_0 17
69 deliver[package_1,city_loc_6] -> m_deliver_ordering_0 70 74 77
70 m_deliver_ordering_0_splitted_1[truck_1,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 71 73
71 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 72 19
72 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 18
73 load[truck_1,city_loc_1,package_1] -> m_load_ordering_0 20
74 get_to[truck_1,city_loc_6] -> m_drive_to_via_ordering_0 75 23
75 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 76 22
76 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 21
77 unload[truck_1,city_loc_6,package_1] -> m_unload_ordering_0 24
78 deliver[package_5,city_loc_0] -> m_deliver_ordering_0 79 83 86
79 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 80 82
80 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 81 26
81 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 25
82 load[truck_1,city_loc_3,package_5] -> m_load_ordering_0 27
83 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 84 30
84 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 85 29
85 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 28
86 unload[truck_1,city_loc_0,package_5] -> m_unload_ordering_0 31
87 deliver[package_6,city_loc_2] -> m_deliver_ordering_0 88 91 94
88 m_deliver_ordering_0_splitted_1[truck_0,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 89 90
89 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 32
90 load[truck_0,city_loc_4,package_6] -> m_load_ordering_0 33
91 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 92 36
92 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 93 35
93 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 34
94 unload[truck_0,city_loc_2,package_6] -> m_unload_ordering_0 37
95 deliver[package_4,city_loc_6] -> m_deliver_ordering_0 96 99 102
96 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 97 98
97 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 38
98 load[truck_0,city_loc_4,package_4] -> m_load_ordering_0 39
99 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 100 42
100 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 101 41
101 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 40
102 unload[truck_0,city_loc_6,package_4] -> m_unload_ordering_0 43
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.0688477 MEMPEAK_KBS 924

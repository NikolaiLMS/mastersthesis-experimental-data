pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/223/223.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/223/223.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.478ms
Contains 0.062ms
Restrict 0.08ms
MPrep 0.066ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [240] grounded tasks and [95] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [340] grounded tasks and [355] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 340 tasks, 355 methods.
Grounded PG:
Input was [240, 340], output was [240, 95].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 62 S 0 SC 0 SM 0 NSM 0 I 0 P 240 S 0 A 100 M 355
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/223/223.sas.
- State has 62 bits divided into 62 mutex groups.
- Domain contains 240 actions.
- Domain contains 340 tasks.
- Domain contains 355 methods.
- The initial state contains 13 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 324
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.006ms.

Computing invariants [Rintanen]
Initial candidates build (5673)
Round 1: 5673 invariants remaining
Round 2: 1530 invariants remaining
Round 3: 309 invariants remaining
Round 4: 140 invariants remaining
Round 5: 138 invariants remaining
Found 138 invariants in 1.068ms
Calculate SCCs...
- Number of SCCs: 324
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.052 ms
Computed PDT. Extracting leafs ... 9 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 10 of 10
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.102 ms
Computed PDT. Extracting leafs ... 27 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 64 of 64
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.378 ms
Computed PDT. Extracting leafs ... 45 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 316 of 316
Leaf Primitive Pruning: 126 of 126
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 1.13 ms
Computed PDT. Extracting leafs ... 63 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 216 of 634
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 418
Pruning: 1010 of 1010
Leaf Primitive Pruning: 634 of 634
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 2.23 ms
Computed PDT. Extracting leafs ... 81 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 156 of 1514
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 1358
Pruning: 745 of 2180
Leaf Primitive Pruning: 377 of 1514
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 3078 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 46 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 2.08ms SM: 0 M: 0 I: 0 SI: 138
[34mFormula: [m46161 decomposition 9056 state 6348 mutex
Formula has 5992 vars and 61565 clauses.
Formula time: 19.021ms
Starting solver
Solver time: 2.641ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 6[m
Computing PDT took: 3.139 ms
Computed PDT. Extracting leafs ... 99 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 178 of 2820
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 2642
Pruning: 921 of 3806
Leaf Primitive Pruning: 492 of 2820
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 4710 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 64 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 3.008ms SM: 0 M: 0 I: 0 SI: 138
[34mFormula: [m132921 decomposition 14269 state 8832 mutex
Formula has 14732 vars and 217587 clauses.
Formula time: 41.627ms
Starting solver
Solver time: 2.909ms
Solver state: [32mSAT[m
==>
0 drive[truck_1,city_loc_0,city_loc_5]
1 drive[truck_1,city_loc_5,city_loc_2]
2 pick_up[truck_1,city_loc_2,package_4,capacity_2,capacity_3]
3 drive[truck_1,city_loc_2,city_loc_1]
4 drive[truck_1,city_loc_1,city_loc_5]
5 drive[truck_1,city_loc_5,city_loc_2]
6 drive[truck_1,city_loc_2,city_loc_8]
7 drop[truck_1,city_loc_8,package_4,capacity_2,capacity_3]
8 drive[truck_0,city_loc_7,city_loc_0]
9 drive[truck_0,city_loc_0,city_loc_4]
10 pick_up[truck_0,city_loc_4,package_0,capacity_2,capacity_3]
11 drive[truck_0,city_loc_4,city_loc_0]
12 drive[truck_0,city_loc_0,city_loc_5]
13 drive[truck_0,city_loc_5,city_loc_2]
14 drive[truck_0,city_loc_2,city_loc_8]
15 drop[truck_0,city_loc_8,package_0,capacity_2,capacity_3]
16 drive[truck_1,city_loc_8,city_loc_2]
17 drive[truck_1,city_loc_2,city_loc_5]
18 drive[truck_1,city_loc_5,city_loc_1]
19 pick_up[truck_1,city_loc_1,package_3,capacity_2,capacity_3]
20 drive[truck_1,city_loc_1,city_loc_5]
21 drive[truck_1,city_loc_5,city_loc_0]
22 drive[truck_1,city_loc_0,city_loc_5]
23 drop[truck_1,city_loc_5,package_3,capacity_2,capacity_3]
24 drive[truck_1,city_loc_5,city_loc_0]
25 drive[truck_1,city_loc_0,city_loc_7]
26 pick_up[truck_1,city_loc_7,package_8,capacity_2,capacity_3]
27 drive[truck_1,city_loc_7,city_loc_3]
28 drive[truck_1,city_loc_3,city_loc_4]
29 drive[truck_1,city_loc_4,city_loc_0]
30 drive[truck_1,city_loc_0,city_loc_5]
31 drop[truck_1,city_loc_5,package_8,capacity_2,capacity_3]
32 drive[truck_1,city_loc_5,city_loc_2]
33 drive[truck_1,city_loc_2,city_loc_8]
34 pick_up[truck_1,city_loc_8,package_6,capacity_2,capacity_3]
35 drive[truck_1,city_loc_8,city_loc_2]
36 drive[truck_1,city_loc_2,city_loc_5]
37 drive[truck_1,city_loc_5,city_loc_5]
38 drive[truck_1,city_loc_5,city_loc_6]
39 drop[truck_1,city_loc_6,package_6,capacity_2,capacity_3]
40 drive[truck_1,city_loc_6,city_loc_5]
41 drive[truck_1,city_loc_5,city_loc_5]
42 drive[truck_1,city_loc_5,city_loc_1]
43 pick_up[truck_1,city_loc_1,package_2,capacity_2,capacity_3]
44 drive[truck_1,city_loc_1,city_loc_5]
45 drive[truck_1,city_loc_5,city_loc_5]
46 drive[truck_1,city_loc_5,city_loc_2]
47 drive[truck_1,city_loc_2,city_loc_8]
48 drop[truck_1,city_loc_8,package_2,capacity_2,capacity_3]
49 drive[truck_0,city_loc_8,city_loc_2]
50 drive[truck_0,city_loc_2,city_loc_1]
51 pick_up[truck_0,city_loc_1,package_7,capacity_2,capacity_3]
52 drive[truck_0,city_loc_1,city_loc_5]
53 drive[truck_0,city_loc_5,city_loc_3]
54 drive[truck_0,city_loc_3,city_loc_7]
55 drive[truck_0,city_loc_7,city_loc_0]
56 drop[truck_0,city_loc_0,package_7,capacity_2,capacity_3]
57 drive[truck_1,city_loc_8,city_loc_2]
58 drive[truck_1,city_loc_2,city_loc_5]
59 drive[truck_1,city_loc_5,city_loc_2]
60 pick_up[truck_1,city_loc_2,package_5,capacity_2,capacity_3]
61 drive[truck_1,city_loc_2,city_loc_5]
62 drive[truck_1,city_loc_5,city_loc_7]
63 drive[truck_1,city_loc_7,city_loc_3]
64 drive[truck_1,city_loc_3,city_loc_4]
65 drop[truck_1,city_loc_4,package_5,capacity_2,capacity_3]
66 drive[truck_0,city_loc_0,city_loc_7]
67 drive[truck_0,city_loc_7,city_loc_3]
68 drive[truck_0,city_loc_3,city_loc_6]
69 pick_up[truck_0,city_loc_6,package_1,capacity_2,capacity_3]
70 drive[truck_0,city_loc_6,city_loc_3]
71 drive[truck_0,city_loc_3,city_loc_5]
72 drive[truck_0,city_loc_5,city_loc_2]
73 drive[truck_0,city_loc_2,city_loc_8]
74 drop[truck_0,city_loc_8,package_1,capacity_2,capacity_3]
root 75
75 __top[] -> __top_method 76 86 96 106 116 126 137 147 158
76 deliver[package_4,city_loc_8] -> m_deliver_ordering_0 77 81 85
77 m_deliver_ordering_0_splitted_1[truck_1,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 78 80
78 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 79 1
79 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 0
80 load[truck_1,city_loc_2,package_4] -> m_load_ordering_0 2
81 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 82 6
82 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 83 5
83 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 84 4
84 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 3
85 unload[truck_1,city_loc_8,package_4] -> m_unload_ordering_0 7
86 deliver[package_0,city_loc_8] -> m_deliver_ordering_0 87 91 95
87 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 88 90
88 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 89 9
89 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 8
90 load[truck_0,city_loc_4,package_0] -> m_load_ordering_0 10
91 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 92 14
92 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 93 13
93 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 94 12
94 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 11
95 unload[truck_0,city_loc_8,package_0] -> m_unload_ordering_0 15
96 deliver[package_3,city_loc_5] -> m_deliver_ordering_0 97 102 105
97 m_deliver_ordering_0_splitted_1[truck_1,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 98 101
98 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 99 18
99 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 100 17
100 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 16
101 load[truck_1,city_loc_1,package_3] -> m_load_ordering_0 19
102 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 103 22
103 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 104 21
104 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 20
105 unload[truck_1,city_loc_5,package_3] -> m_unload_ordering_0 23
106 deliver[package_8,city_loc_5] -> m_deliver_ordering_0 107 111 115
107 m_deliver_ordering_0_splitted_1[truck_1,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 108 110
108 get_to[truck_1,city_loc_7] -> m_drive_to_via_ordering_0 109 25
109 get_to[truck_1,city_loc_0] -> m_drive_to_ordering_0 24
110 load[truck_1,city_loc_7,package_8] -> m_load_ordering_0 26
111 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 112 30
112 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 113 29
113 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 114 28
114 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 27
115 unload[truck_1,city_loc_5,package_8] -> m_unload_ordering_0 31
116 deliver[package_6,city_loc_6] -> m_deliver_ordering_0 117 121 125
117 m_deliver_ordering_0_splitted_1[truck_1,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 118 120
118 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 119 33
119 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 32
120 load[truck_1,city_loc_8,package_6] -> m_load_ordering_0 34
121 get_to[truck_1,city_loc_6] -> m_drive_to_via_ordering_0 122 38
122 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 123 37
123 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 124 36
124 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 35
125 unload[truck_1,city_loc_6,package_6] -> m_unload_ordering_0 39
126 deliver[package_2,city_loc_8] -> m_deliver_ordering_0 127 132 136
127 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 128 131
128 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 129 42
129 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 130 41
130 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 40
131 load[truck_1,city_loc_1,package_2] -> m_load_ordering_0 43
132 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 133 47
133 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 134 46
134 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 135 45
135 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 44
136 unload[truck_1,city_loc_8,package_2] -> m_unload_ordering_0 48
137 deliver[package_7,city_loc_0] -> m_deliver_ordering_0 138 142 146
138 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 139 141
139 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 140 50
140 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 49
141 load[truck_0,city_loc_1,package_7] -> m_load_ordering_0 51
142 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 143 55
143 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 144 54
144 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 145 53
145 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 52
146 unload[truck_0,city_loc_0,package_7] -> m_unload_ordering_0 56
147 deliver[package_5,city_loc_4] -> m_deliver_ordering_0 148 153 157
148 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 149 152
149 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 150 59
150 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 151 58
151 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 57
152 load[truck_1,city_loc_2,package_5] -> m_load_ordering_0 60
153 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 154 64
154 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 155 63
155 get_to[truck_1,city_loc_7] -> m_drive_to_via_ordering_0 156 62
156 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 61
157 unload[truck_1,city_loc_4,package_5] -> m_unload_ordering_0 65
158 deliver[package_1,city_loc_8] -> m_deliver_ordering_0 159 164 168
159 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 160 163
160 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 161 68
161 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 162 67
162 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 66
163 load[truck_0,city_loc_6,package_1] -> m_load_ordering_0 69
164 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 165 73
165 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 166 72
166 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 167 71
167 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 70
168 unload[truck_0,city_loc_8,package_1] -> m_unload_ordering_0 74
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.116459 MEMPEAK_KBS 924

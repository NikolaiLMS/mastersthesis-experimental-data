pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/235/235.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/235/235.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.592ms
Contains 0.083ms
Restrict 0.101ms
MPrep 0.086ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [278] grounded tasks and [107] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [402] grounded tasks and [401] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 402 tasks, 401 methods.
Grounded PG:
Input was [278, 402], output was [278, 107].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 76 S 0 SC 0 SM 0 NSM 0 I 0 P 278 S 0 A 124 M 401
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/235/235.sas.
- State has 76 bits divided into 76 mutex groups.
- Domain contains 278 actions.
- Domain contains 402 tasks.
- Domain contains 401 methods.
- The initial state contains 15 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 380
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.003ms.

Computing invariants [Rintanen]
Initial candidates build (8550)
Round 1: 8550 invariants remaining
Round 2: 3802 invariants remaining
Round 3: 771 invariants remaining
Round 4: 236 invariants remaining
Round 5: 211 invariants remaining
Round 6: 210 invariants remaining
Found 210 invariants in 1.715ms
Calculate SCCs...
- Number of SCCs: 380
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.059 ms
Computed PDT. Extracting leafs ... 11 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 12 of 12
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.107 ms
Computed PDT. Extracting leafs ... 33 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 78 of 78
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.382 ms
Computed PDT. Extracting leafs ... 55 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 346 of 346
Leaf Primitive Pruning: 134 of 134
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 1.02 ms
Computed PDT. Extracting leafs ... 77 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 265 of 606
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 341
Pruning: 1022 of 1022
Leaf Primitive Pruning: 606 of 606
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 1.98 ms
Computed PDT. Extracting leafs ... 99 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 179 of 1370
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 1191
Pruning: 773 of 2114
Leaf Primitive Pruning: 360 of 1370
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 2838 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 56 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 3.39ms SM: 0 M: 0 I: 0 SI: 210
[34mFormula: [m23578 decomposition 11633 state 11760 mutex
Formula has 7170 vars and 46971 clauses.
Formula time: 17.142ms
Starting solver
Solver time: 2.224ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 6[m
Computing PDT took: 2.937 ms
Computed PDT. Extracting leafs ... 121 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 232 of 2566
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 2334
Pruning: 1125 of 3750
Leaf Primitive Pruning: 547 of 2566
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 4084 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 78 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 4.808ms SM: 0 M: 0 I: 0 SI: 210
[34mFormula: [m76097 decomposition 17454 state 16380 mutex
Formula has 17258 vars and 156902 clauses.
Formula time: 35.221ms
Starting solver
Solver time: 4.965ms
Solver state: [32mSAT[m
==>
0 drive[truck_1,city_loc_1,city_loc_4]
1 drive[truck_1,city_loc_4,city_loc_2]
2 pick_up[truck_1,city_loc_2,package_6,capacity_2,capacity_3]
3 drive[truck_1,city_loc_2,city_loc_4]
4 drive[truck_1,city_loc_4,city_loc_2]
5 drive[truck_1,city_loc_2,city_loc_10]
6 drive[truck_1,city_loc_10,city_loc_11]
7 drop[truck_1,city_loc_11,package_6,capacity_2,capacity_3]
8 drive[truck_1,city_loc_11,city_loc_10]
9 drive[truck_1,city_loc_10,city_loc_11]
10 pick_up[truck_1,city_loc_11,package_2,capacity_2,capacity_3]
11 drive[truck_1,city_loc_11,city_loc_10]
12 drive[truck_1,city_loc_10,city_loc_2]
13 drive[truck_1,city_loc_2,city_loc_10]
14 drop[truck_1,city_loc_10,package_2,capacity_2,capacity_3]
15 drive[truck_1,city_loc_10,city_loc_2]
16 drive[truck_1,city_loc_2,city_loc_4]
17 drive[truck_1,city_loc_4,city_loc_3]
18 pick_up[truck_1,city_loc_3,package_5,capacity_2,capacity_3]
19 drive[truck_1,city_loc_3,city_loc_4]
20 drive[truck_1,city_loc_4,city_loc_0]
21 drive[truck_1,city_loc_0,city_loc_8]
22 drive[truck_1,city_loc_8,city_loc_5]
23 drop[truck_1,city_loc_5,package_5,capacity_2,capacity_3]
24 drive[truck_1,city_loc_5,city_loc_8]
25 drive[truck_1,city_loc_8,city_loc_0]
26 drive[truck_1,city_loc_0,city_loc_4]
27 pick_up[truck_1,city_loc_4,package_7,capacity_2,capacity_3]
28 drive[truck_1,city_loc_4,city_loc_1]
29 drive[truck_1,city_loc_1,city_loc_4]
30 drive[truck_1,city_loc_4,city_loc_2]
31 drive[truck_1,city_loc_2,city_loc_10]
32 drop[truck_1,city_loc_10,package_7,capacity_2,capacity_3]
33 drive[truck_0,city_loc_11,city_loc_10]
34 drive[truck_0,city_loc_10,city_loc_11]
35 drive[truck_0,city_loc_11,city_loc_10]
36 pick_up[truck_0,city_loc_10,package_1,capacity_2,capacity_3]
37 drive[truck_0,city_loc_10,city_loc_2]
38 drive[truck_0,city_loc_2,city_loc_4]
39 drive[truck_0,city_loc_4,city_loc_3]
40 drop[truck_0,city_loc_3,package_1,capacity_2,capacity_3]
41 drive[truck_0,city_loc_3,city_loc_4]
42 drive[truck_0,city_loc_4,city_loc_2]
43 pick_up[truck_0,city_loc_2,package_8,capacity_2,capacity_3]
44 drive[truck_0,city_loc_2,city_loc_4]
45 drive[truck_0,city_loc_4,city_loc_3]
46 drive[truck_0,city_loc_3,city_loc_4]
47 drive[truck_0,city_loc_4,city_loc_7]
48 drop[truck_0,city_loc_7,package_8,capacity_2,capacity_3]
49 drive[truck_0,city_loc_7,city_loc_4]
50 drive[truck_0,city_loc_4,city_loc_0]
51 pick_up[truck_0,city_loc_0,package_4,capacity_2,capacity_3]
52 drive[truck_0,city_loc_0,city_loc_8]
53 drive[truck_0,city_loc_8,city_loc_10]
54 drive[truck_0,city_loc_10,city_loc_8]
55 drive[truck_0,city_loc_8,city_loc_5]
56 drop[truck_0,city_loc_5,package_4,capacity_2,capacity_3]
57 drive[truck_1,city_loc_10,city_loc_8]
58 drive[truck_1,city_loc_8,city_loc_0]
59 drive[truck_1,city_loc_0,city_loc_8]
60 pick_up[truck_1,city_loc_8,package_0,capacity_2,capacity_3]
61 drive[truck_1,city_loc_8,city_loc_10]
62 drive[truck_1,city_loc_10,city_loc_2]
63 drive[truck_1,city_loc_2,city_loc_10]
64 drive[truck_1,city_loc_10,city_loc_11]
65 drop[truck_1,city_loc_11,package_0,capacity_2,capacity_3]
66 drive[truck_0,city_loc_5,city_loc_8]
67 drive[truck_0,city_loc_8,city_loc_10]
68 pick_up[truck_0,city_loc_10,package_9,capacity_2,capacity_3]
69 drive[truck_0,city_loc_10,city_loc_11]
70 drive[truck_0,city_loc_11,city_loc_10]
71 drive[truck_0,city_loc_10,city_loc_8]
72 drop[truck_0,city_loc_8,package_9,capacity_2,capacity_3]
73 drive[truck_0,city_loc_8,city_loc_0]
74 drive[truck_0,city_loc_0,city_loc_4]
75 drive[truck_0,city_loc_4,city_loc_1]
76 pick_up[truck_0,city_loc_1,package_10,capacity_2,capacity_3]
77 drive[truck_0,city_loc_1,city_loc_4]
78 drive[truck_0,city_loc_4,city_loc_0]
79 drive[truck_0,city_loc_0,city_loc_8]
80 drive[truck_0,city_loc_8,city_loc_0]
81 drop[truck_0,city_loc_0,package_10,capacity_2,capacity_3]
82 drive[truck_0,city_loc_0,city_loc_4]
83 drive[truck_0,city_loc_4,city_loc_1]
84 pick_up[truck_0,city_loc_1,package_3,capacity_2,capacity_3]
85 drive[truck_0,city_loc_1,city_loc_4]
86 drive[truck_0,city_loc_4,city_loc_0]
87 drive[truck_0,city_loc_0,city_loc_8]
88 drive[truck_0,city_loc_8,city_loc_5]
89 drop[truck_0,city_loc_5,package_3,capacity_2,capacity_3]
root 90
90 __top[] -> __top_method 91 101 110 121 132 142 152 162 173 182 193
91 deliver[package_6,city_loc_11] -> m_deliver_ordering_0 92 96 100
92 m_deliver_ordering_0_splitted_1[truck_1,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 93 95
93 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 94 1
94 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 0
95 load[truck_1,city_loc_2,package_6] -> m_load_ordering_0 2
96 get_to[truck_1,city_loc_11] -> m_drive_to_via_ordering_0 97 6
97 get_to[truck_1,city_loc_10] -> m_drive_to_via_ordering_0 98 5
98 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 99 4
99 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 3
100 unload[truck_1,city_loc_11,package_6] -> m_unload_ordering_0 7
101 deliver[package_2,city_loc_10] -> m_deliver_ordering_0 102 106 109
102 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 103 105
103 get_to[truck_1,city_loc_11] -> m_drive_to_via_ordering_0 104 9
104 get_to[truck_1,city_loc_10] -> m_drive_to_ordering_0 8
105 load[truck_1,city_loc_11,package_2] -> m_load_ordering_0 10
106 get_to[truck_1,city_loc_10] -> m_drive_to_via_ordering_0 107 13
107 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 108 12
108 get_to[truck_1,city_loc_10] -> m_drive_to_ordering_0 11
109 unload[truck_1,city_loc_10,package_2] -> m_unload_ordering_0 14
110 deliver[package_5,city_loc_5] -> m_deliver_ordering_0 111 116 120
111 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 112 115
112 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 113 17
113 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 114 16
114 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 15
115 load[truck_1,city_loc_3,package_5] -> m_load_ordering_0 18
116 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 117 22
117 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 118 21
118 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 119 20
119 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 19
120 unload[truck_1,city_loc_5,package_5] -> m_unload_ordering_0 23
121 deliver[package_7,city_loc_10] -> m_deliver_ordering_0 122 127 131
122 m_deliver_ordering_0_splitted_1[truck_1,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 123 126
123 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 124 26
124 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 125 25
125 get_to[truck_1,city_loc_8] -> m_drive_to_ordering_0 24
126 load[truck_1,city_loc_4,package_7] -> m_load_ordering_0 27
127 get_to[truck_1,city_loc_10] -> m_drive_to_via_ordering_0 128 31
128 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 129 30
129 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 130 29
130 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 28
131 unload[truck_1,city_loc_10,package_7] -> m_unload_ordering_0 32
132 deliver[package_1,city_loc_3] -> m_deliver_ordering_0 133 138 141
133 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 134 137
134 get_to[truck_0,city_loc_10] -> m_drive_to_via_ordering_0 135 35
135 get_to[truck_0,city_loc_11] -> m_drive_to_via_ordering_0 136 34
136 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 33
137 load[truck_0,city_loc_10,package_1] -> m_load_ordering_0 36
138 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 139 39
139 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 140 38
140 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 37
141 unload[truck_0,city_loc_3,package_1] -> m_unload_ordering_0 40
142 deliver[package_8,city_loc_7] -> m_deliver_ordering_0 143 147 151
143 m_deliver_ordering_0_splitted_1[truck_0,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 144 146
144 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 145 42
145 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 41
146 load[truck_0,city_loc_2,package_8] -> m_load_ordering_0 43
147 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 148 47
148 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 149 46
149 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 150 45
150 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 44
151 unload[truck_0,city_loc_7,package_8] -> m_unload_ordering_0 48
152 deliver[package_4,city_loc_5] -> m_deliver_ordering_0 153 157 161
153 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 154 156
154 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 155 50
155 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 49
156 load[truck_0,city_loc_0,package_4] -> m_load_ordering_0 51
157 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 158 55
158 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 159 54
159 get_to[truck_0,city_loc_10] -> m_drive_to_via_ordering_0 160 53
160 get_to[truck_0,city_loc_8] -> m_drive_to_ordering_0 52
161 unload[truck_0,city_loc_5,package_4] -> m_unload_ordering_0 56
162 deliver[package_0,city_loc_11] -> m_deliver_ordering_0 163 168 172
163 m_deliver_ordering_0_splitted_1[truck_1,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 164 167
164 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 165 59
165 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 166 58
166 get_to[truck_1,city_loc_8] -> m_drive_to_ordering_0 57
167 load[truck_1,city_loc_8,package_0] -> m_load_ordering_0 60
168 get_to[truck_1,city_loc_11] -> m_drive_to_via_ordering_0 169 64
169 get_to[truck_1,city_loc_10] -> m_drive_to_via_ordering_0 170 63
170 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 171 62
171 get_to[truck_1,city_loc_10] -> m_drive_to_ordering_0 61
172 unload[truck_1,city_loc_11,package_0] -> m_unload_ordering_0 65
173 deliver[package_9,city_loc_8] -> m_deliver_ordering_0 174 178 181
174 m_deliver_ordering_0_splitted_1[truck_0,package_9] -> _splitting_method_m_deliver_ordering_0_splitted_1 175 177
175 get_to[truck_0,city_loc_10] -> m_drive_to_via_ordering_0 176 67
176 get_to[truck_0,city_loc_8] -> m_drive_to_ordering_0 66
177 load[truck_0,city_loc_10,package_9] -> m_load_ordering_0 68
178 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 179 71
179 get_to[truck_0,city_loc_10] -> m_drive_to_via_ordering_0 180 70
180 get_to[truck_0,city_loc_11] -> m_drive_to_ordering_0 69
181 unload[truck_0,city_loc_8,package_9] -> m_unload_ordering_0 72
182 deliver[package_10,city_loc_0] -> m_deliver_ordering_0 183 188 192
183 m_deliver_ordering_0_splitted_1[truck_0,package_10] -> _splitting_method_m_deliver_ordering_0_splitted_1 184 187
184 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 185 75
185 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 186 74
186 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 73
187 load[truck_0,city_loc_1,package_10] -> m_load_ordering_0 76
188 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 189 80
189 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 190 79
190 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 191 78
191 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 77
192 unload[truck_0,city_loc_0,package_10] -> m_unload_ordering_0 81
193 deliver[package_3,city_loc_5] -> m_deliver_ordering_0 194 198 202
194 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 195 197
195 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 196 83
196 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 82
197 load[truck_0,city_loc_1,package_3] -> m_load_ordering_0 84
198 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 199 88
199 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 200 87
200 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 201 86
201 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 85
202 unload[truck_0,city_loc_5,package_3] -> m_unload_ordering_0 89
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.112695 MEMPEAK_KBS 924

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/238/238.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/238/238.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.237ms
Contains 0.024ms
Restrict 0.036ms
MPrep 0.03ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [47] grounded tasks and [30] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [72] grounded tasks and [67] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 72 tasks, 67 methods.
Grounded PG:
Input was [47, 72], output was [47, 30].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 20 S 0 SC 0 SM 0 NSM 0 I 0 P 47 S 0 A 21 M 63
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/238/238.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (570)
Round 1: 570 invariants remaining
Round 2: 279 invariants remaining
Round 3: 121 invariants remaining
Round 4: 101 invariants remaining
Round 5: 31 invariants remaining
Round 6: 24 invariants remaining
Found 24 invariants in 0.239ms
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.075 ms
Computed PDT. Extracting leafs ... 12 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 13 of 13
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.1 ms
Computed PDT. Extracting leafs ... 20 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 57 of 57
Leaf Primitive Pruning: 22 of 22
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.148 ms
Computed PDT. Extracting leafs ... 28 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 36 of 87
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 51
Pruning: 144 of 144
Leaf Primitive Pruning: 87 of 87
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.163 ms
Computed PDT. Extracting leafs ... 36 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 38 of 153
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 115
Pruning: 240 of 240
Leaf Primitive Pruning: 153 of 153
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 0.185 ms
Computed PDT. Extracting leafs ... 44 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 31 of 237
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 206
Pruning: 99 of 356
Leaf Primitive Pruning: 52 of 237
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 596 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 29 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.187ms SM: 0 M: 0 I: 0 SI: 24
[34mFormula: [m2435 decomposition 1677 state 696 mutex
Formula has 1196 vars and 4808 clauses.
Formula time: 2.406ms
Starting solver
Solver time: 0.193ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_0,city_loc_3]
1 drive[truck_0,city_loc_3,city_loc_2]
2 drive[truck_0,city_loc_2,city_loc_1]
3 pick_up[truck_0,city_loc_1,package_1,capacity_2,capacity_3]
4 drive[truck_0,city_loc_1,city_loc_2]
5 drive[truck_0,city_loc_2,city_loc_3]
6 drive[truck_0,city_loc_3,city_loc_3]
7 drive[truck_0,city_loc_3,city_loc_0]
8 drop[truck_0,city_loc_0,package_1,capacity_2,capacity_3]
9 noop[truck_0,city_loc_0]
10 pick_up[truck_0,city_loc_0,package_0,capacity_2,capacity_3]
11 drive[truck_0,city_loc_0,city_loc_3]
12 drop[truck_0,city_loc_3,package_0,capacity_2,capacity_3]
13 drive[truck_0,city_loc_3,city_loc_0]
14 drive[truck_0,city_loc_0,city_loc_3]
15 drive[truck_0,city_loc_3,city_loc_2]
16 pick_up[truck_0,city_loc_2,package_3,capacity_2,capacity_3]
17 drive[truck_0,city_loc_2,city_loc_3]
18 drive[truck_0,city_loc_3,city_loc_3]
19 drive[truck_0,city_loc_3,city_loc_3]
20 drive[truck_0,city_loc_3,city_loc_0]
21 drop[truck_0,city_loc_0,package_3,capacity_2,capacity_3]
22 noop[truck_0,city_loc_0]
23 drive[truck_0,city_loc_0,city_loc_3]
24 pick_up[truck_0,city_loc_3,package_2,capacity_2,capacity_3]
25 drive[truck_0,city_loc_3,city_loc_0]
26 drive[truck_0,city_loc_0,city_loc_3]
27 drive[truck_0,city_loc_3,city_loc_2]
28 drive[truck_0,city_loc_2,city_loc_1]
29 drop[truck_0,city_loc_1,package_2,capacity_2,capacity_3]
root 30
30 __top[] -> <<<<__top_method;deliver[package_3,city_loc_0];m_deliver_ordering_0;2;0,1,-1,-2,-3,3>;deliver[package_2,city_loc_1];m_deliver_ordering_0;5;0,1,2,3,4,-1,-2,-3>;deliver[package_1,city_loc_0];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7>;deliver[package_0,city_loc_3];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5,6,7,8,9> 31 36 40 41 44 45 46 51 55 56 60 64
31 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 32 35
32 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 33 2
33 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 34 1
34 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 0
35 load[truck_0,city_loc_1,package_1] -> m_load_ordering_0 3
36 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 37 7
37 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 38 6
38 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 39 5
39 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 4
40 unload[truck_0,city_loc_0,package_1] -> m_unload_ordering_0 8
41 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 42 43
42 get_to[truck_0,city_loc_0] -> m_i_am_there_ordering_0 9
43 load[truck_0,city_loc_0,package_0] -> m_load_ordering_0 10
44 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 11
45 unload[truck_0,city_loc_3,package_0] -> m_unload_ordering_0 12
46 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 47 50
47 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 48 15
48 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 49 14
49 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 13
50 load[truck_0,city_loc_2,package_3] -> m_load_ordering_0 16
51 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 52 20
52 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 53 19
53 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 54 18
54 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 17
55 unload[truck_0,city_loc_0,package_3] -> m_unload_ordering_0 21
56 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 57 59
57 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 58 23
58 get_to[truck_0,city_loc_0] -> m_i_am_there_ordering_0 22
59 load[truck_0,city_loc_3,package_2] -> m_load_ordering_0 24
60 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 61 28
61 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 62 27
62 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 63 26
63 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 25
64 unload[truck_0,city_loc_1,package_2] -> m_unload_ordering_0 29
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.0449219 MEMPEAK_KBS 924

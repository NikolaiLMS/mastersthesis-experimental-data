pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/226/226.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/226/226.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.734ms
Contains 0.096ms
Restrict 0.119ms
MPrep 0.093ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [324] grounded tasks and [127] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [511] grounded tasks and [511] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 511 tasks, 511 methods.
Grounded PG:
Input was [324, 511], output was [324, 127].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 99 S 0 SC 0 SM 0 NSM 0 I 0 P 324 S 0 A 187 M 511
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/226/226.sas.
- State has 99 bits divided into 99 mutex groups.
- Domain contains 324 actions.
- Domain contains 511 tasks.
- Domain contains 511 methods.
- The initial state contains 18 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 484
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (14553)
Round 1: 14553 invariants remaining
Round 2: 3283 invariants remaining
Round 3: 1334 invariants remaining
Round 4: 480 invariants remaining
Round 5: 264 invariants remaining
Found 264 invariants in 2.258ms
Calculate SCCs...
- Number of SCCs: 484
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.085 ms
Computed PDT. Extracting leafs ... 12 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 13 of 13
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.152 ms
Computed PDT. Extracting leafs ... 36 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 121 of 121
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.711 ms
Computed PDT. Extracting leafs ... 60 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 595 of 595
Leaf Primitive Pruning: 219 of 219
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 2.22 ms
Computed PDT. Extracting leafs ... 84 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 192 of 1080
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 888
Pruning: 802 of 1852
Leaf Primitive Pruning: 322 of 1080
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 2155 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 37 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 1.33ms SM: 0 M: 0 I: 0 SI: 264
[34mFormula: [m18304 decomposition 9871 state 9768 mutex
Formula has 5917 vars and 37943 clauses.
Formula time: 15.367ms
Starting solver
Solver time: 0.063ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 4.313 ms
Computed PDT. Extracting leafs ... 108 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 194 of 2691
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 2497
Pruning: 1466 of 4078
Leaf Primitive Pruning: 677 of 2691
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 4222 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 61 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 5.570ms SM: 0 M: 0 I: 0 SI: 264
[34mFormula: [m95811 decomposition 17700 state 16104 mutex
Formula has 16277 vars and 167558 clauses.
Formula time: 46.405ms
Starting solver
Solver time: 2.821ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 6[m
Computing PDT took: 5.832 ms
Computed PDT. Extracting leafs ... 132 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 222 of 5007
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 4785
Pruning: 1930 of 7099
Leaf Primitive Pruning: 962 of 5007
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 8197 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 85 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 7.401ms SM: 0 M: 0 I: 0 SI: 264
[34mFormula: [m294881 decomposition 27399 state 22440 mutex
Formula has 32988 vars and 512278 clauses.
Formula time: 100.862ms
Starting solver
Solver time: 11.769ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_3,city_loc_7]
1 drive[truck_0,city_loc_7,city_loc_2]
2 drive[truck_0,city_loc_2,city_loc_0]
3 pick_up[truck_0,city_loc_0,package_7,capacity_1,capacity_2]
4 drive[truck_0,city_loc_0,city_loc_6]
5 drive[truck_0,city_loc_6,city_loc_2]
6 drive[truck_0,city_loc_2,city_loc_7]
7 drive[truck_0,city_loc_7,city_loc_8]
8 drop[truck_0,city_loc_8,package_7,capacity_1,capacity_2]
9 drive[truck_0,city_loc_8,city_loc_7]
10 drive[truck_0,city_loc_7,city_loc_3]
11 drive[truck_0,city_loc_3,city_loc_7]
12 pick_up[truck_0,city_loc_7,package_1,capacity_1,capacity_2]
13 drive[truck_0,city_loc_7,city_loc_3]
14 drive[truck_0,city_loc_3,city_loc_7]
15 drive[truck_0,city_loc_7,city_loc_2]
16 drop[truck_0,city_loc_2,package_1,capacity_1,capacity_2]
17 drive[truck_1,city_loc_2,city_loc_0]
18 pick_up[truck_1,city_loc_0,package_2,capacity_1,capacity_2]
19 drive[truck_1,city_loc_0,city_loc_2]
20 drive[truck_1,city_loc_2,city_loc_6]
21 drive[truck_1,city_loc_6,city_loc_0]
22 drive[truck_1,city_loc_0,city_loc_2]
23 drop[truck_1,city_loc_2,package_2,capacity_1,capacity_2]
24 drive[truck_1,city_loc_2,city_loc_1]
25 drive[truck_1,city_loc_1,city_loc_9]
26 pick_up[truck_1,city_loc_9,package_0,capacity_1,capacity_2]
27 drive[truck_1,city_loc_9,city_loc_1]
28 drive[truck_1,city_loc_1,city_loc_1]
29 drive[truck_1,city_loc_1,city_loc_2]
30 drive[truck_1,city_loc_2,city_loc_7]
31 drop[truck_1,city_loc_7,package_0,capacity_1,capacity_2]
32 drive[truck_0,city_loc_2,city_loc_6]
33 drive[truck_0,city_loc_6,city_loc_7]
34 drive[truck_0,city_loc_7,city_loc_8]
35 pick_up[truck_0,city_loc_8,package_11,capacity_1,capacity_2]
36 drive[truck_0,city_loc_8,city_loc_7]
37 drive[truck_0,city_loc_7,city_loc_2]
38 drive[truck_0,city_loc_2,city_loc_7]
39 drive[truck_0,city_loc_7,city_loc_3]
40 drop[truck_0,city_loc_3,package_11,capacity_1,capacity_2]
41 drive[truck_1,city_loc_7,city_loc_2]
42 drive[truck_1,city_loc_2,city_loc_7]
43 drive[truck_1,city_loc_7,city_loc_8]
44 pick_up[truck_1,city_loc_8,package_8,capacity_1,capacity_2]
45 drive[truck_1,city_loc_8,city_loc_7]
46 drive[truck_1,city_loc_7,city_loc_2]
47 drive[truck_1,city_loc_2,city_loc_1]
48 drive[truck_1,city_loc_1,city_loc_9]
49 drop[truck_1,city_loc_9,package_8,capacity_1,capacity_2]
50 noop[truck_2,city_loc_7]
51 drive[truck_2,city_loc_7,city_loc_6]
52 drive[truck_2,city_loc_6,city_loc_4]
53 pick_up[truck_2,city_loc_4,package_3,capacity_1,capacity_2]
54 drive[truck_2,city_loc_4,city_loc_6]
55 drive[truck_2,city_loc_6,city_loc_2]
56 drive[truck_2,city_loc_2,city_loc_7]
57 drive[truck_2,city_loc_7,city_loc_2]
58 drop[truck_2,city_loc_2,package_3,capacity_1,capacity_2]
59 drive[truck_2,city_loc_2,city_loc_7]
60 drive[truck_2,city_loc_7,city_loc_2]
61 drive[truck_2,city_loc_2,city_loc_5]
62 pick_up[truck_2,city_loc_5,package_4,capacity_1,capacity_2]
63 drive[truck_2,city_loc_5,city_loc_2]
64 drive[truck_2,city_loc_2,city_loc_7]
65 drive[truck_2,city_loc_7,city_loc_8]
66 drop[truck_2,city_loc_8,package_4,capacity_1,capacity_2]
67 drive[truck_2,city_loc_8,city_loc_7]
68 drive[truck_2,city_loc_7,city_loc_8]
69 pick_up[truck_2,city_loc_8,package_10,capacity_1,capacity_2]
70 drive[truck_2,city_loc_8,city_loc_7]
71 drive[truck_2,city_loc_7,city_loc_2]
72 drive[truck_2,city_loc_2,city_loc_7]
73 drive[truck_2,city_loc_7,city_loc_2]
74 drop[truck_2,city_loc_2,package_10,capacity_1,capacity_2]
75 drive[truck_1,city_loc_9,city_loc_1]
76 drive[truck_1,city_loc_1,city_loc_2]
77 drive[truck_1,city_loc_2,city_loc_5]
78 pick_up[truck_1,city_loc_5,package_5,capacity_1,capacity_2]
79 drive[truck_1,city_loc_5,city_loc_2]
80 drive[truck_1,city_loc_2,city_loc_7]
81 drive[truck_1,city_loc_7,city_loc_8]
82 drop[truck_1,city_loc_8,package_5,capacity_1,capacity_2]
83 drive[truck_2,city_loc_2,city_loc_1]
84 pick_up[truck_2,city_loc_1,package_9,capacity_1,capacity_2]
85 drive[truck_2,city_loc_1,city_loc_2]
86 drive[truck_2,city_loc_2,city_loc_5]
87 drive[truck_2,city_loc_5,city_loc_2]
88 drive[truck_2,city_loc_2,city_loc_0]
89 drop[truck_2,city_loc_0,package_9,capacity_1,capacity_2]
90 drive[truck_1,city_loc_8,city_loc_7]
91 drive[truck_1,city_loc_7,city_loc_2]
92 drive[truck_1,city_loc_2,city_loc_1]
93 pick_up[truck_1,city_loc_1,package_6,capacity_1,capacity_2]
94 drive[truck_1,city_loc_1,city_loc_2]
95 drop[truck_1,city_loc_2,package_6,capacity_1,capacity_2]
root 96
96 __top[] -> __top_method 97 108 118 127 137 148 159 170 180 190 200 209
97 deliver[package_7,city_loc_8] -> m_deliver_ordering_0 98 103 107
98 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 99 102
99 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 100 2
100 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 101 1
101 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 0
102 load[truck_0,city_loc_0,package_7] -> m_load_ordering_0 3
103 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 104 7
104 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 105 6
105 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 106 5
106 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 4
107 unload[truck_0,city_loc_8,package_7] -> m_unload_ordering_0 8
108 deliver[package_1,city_loc_2] -> m_deliver_ordering_0 109 114 117
109 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 110 113
110 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 111 11
111 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 112 10
112 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 9
113 load[truck_0,city_loc_7,package_1] -> m_load_ordering_0 12
114 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 115 15
115 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 116 14
116 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 13
117 unload[truck_0,city_loc_2,package_1] -> m_unload_ordering_0 16
118 deliver[package_2,city_loc_2] -> m_deliver_ordering_0 119 122 126
119 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 120 121
120 get_to[truck_1,city_loc_0] -> m_drive_to_ordering_0 17
121 load[truck_1,city_loc_0,package_2] -> m_load_ordering_0 18
122 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 123 22
123 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 124 21
124 get_to[truck_1,city_loc_6] -> m_drive_to_via_ordering_0 125 20
125 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 19
126 unload[truck_1,city_loc_2,package_2] -> m_unload_ordering_0 23
127 deliver[package_0,city_loc_7] -> m_deliver_ordering_0 128 132 136
128 m_deliver_ordering_0_splitted_1[truck_1,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 129 131
129 get_to[truck_1,city_loc_9] -> m_drive_to_via_ordering_0 130 25
130 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 24
131 load[truck_1,city_loc_9,package_0] -> m_load_ordering_0 26
132 get_to[truck_1,city_loc_7] -> m_drive_to_via_ordering_0 133 30
133 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 134 29
134 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 135 28
135 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 27
136 unload[truck_1,city_loc_7,package_0] -> m_unload_ordering_0 31
137 deliver[package_11,city_loc_3] -> m_deliver_ordering_0 138 143 147
138 m_deliver_ordering_0_splitted_1[truck_0,package_11] -> _splitting_method_m_deliver_ordering_0_splitted_1 139 142
139 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 140 34
140 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 141 33
141 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 32
142 load[truck_0,city_loc_8,package_11] -> m_load_ordering_0 35
143 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 144 39
144 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 145 38
145 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 146 37
146 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 36
147 unload[truck_0,city_loc_3,package_11] -> m_unload_ordering_0 40
148 deliver[package_8,city_loc_9] -> m_deliver_ordering_0 149 154 158
149 m_deliver_ordering_0_splitted_1[truck_1,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 150 153
150 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 151 43
151 get_to[truck_1,city_loc_7] -> m_drive_to_via_ordering_0 152 42
152 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 41
153 load[truck_1,city_loc_8,package_8] -> m_load_ordering_0 44
154 get_to[truck_1,city_loc_9] -> m_drive_to_via_ordering_0 155 48
155 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 156 47
156 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 157 46
157 get_to[truck_1,city_loc_7] -> m_drive_to_ordering_0 45
158 unload[truck_1,city_loc_9,package_8] -> m_unload_ordering_0 49
159 deliver[package_3,city_loc_2] -> m_deliver_ordering_0 160 165 169
160 m_deliver_ordering_0_splitted_1[truck_2,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 161 164
161 get_to[truck_2,city_loc_4] -> m_drive_to_via_ordering_0 162 52
162 get_to[truck_2,city_loc_6] -> m_drive_to_via_ordering_0 163 51
163 get_to[truck_2,city_loc_7] -> m_i_am_there_ordering_0 50
164 load[truck_2,city_loc_4,package_3] -> m_load_ordering_0 53
165 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 166 57
166 get_to[truck_2,city_loc_7] -> m_drive_to_via_ordering_0 167 56
167 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 168 55
168 get_to[truck_2,city_loc_6] -> m_drive_to_ordering_0 54
169 unload[truck_2,city_loc_2,package_3] -> m_unload_ordering_0 58
170 deliver[package_4,city_loc_8] -> m_deliver_ordering_0 171 176 179
171 m_deliver_ordering_0_splitted_1[truck_2,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 172 175
172 get_to[truck_2,city_loc_5] -> m_drive_to_via_ordering_0 173 61
173 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 174 60
174 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 59
175 load[truck_2,city_loc_5,package_4] -> m_load_ordering_0 62
176 get_to[truck_2,city_loc_8] -> m_drive_to_via_ordering_0 177 65
177 get_to[truck_2,city_loc_7] -> m_drive_to_via_ordering_0 178 64
178 get_to[truck_2,city_loc_2] -> m_drive_to_ordering_0 63
179 unload[truck_2,city_loc_8,package_4] -> m_unload_ordering_0 66
180 deliver[package_10,city_loc_2] -> m_deliver_ordering_0 181 185 189
181 m_deliver_ordering_0_splitted_1[truck_2,package_10] -> _splitting_method_m_deliver_ordering_0_splitted_1 182 184
182 get_to[truck_2,city_loc_8] -> m_drive_to_via_ordering_0 183 68
183 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 67
184 load[truck_2,city_loc_8,package_10] -> m_load_ordering_0 69
185 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 186 73
186 get_to[truck_2,city_loc_7] -> m_drive_to_via_ordering_0 187 72
187 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 188 71
188 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 70
189 unload[truck_2,city_loc_2,package_10] -> m_unload_ordering_0 74
190 deliver[package_5,city_loc_8] -> m_deliver_ordering_0 191 196 199
191 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 192 195
192 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 193 77
193 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 194 76
194 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 75
195 load[truck_1,city_loc_5,package_5] -> m_load_ordering_0 78
196 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 197 81
197 get_to[truck_1,city_loc_7] -> m_drive_to_via_ordering_0 198 80
198 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 79
199 unload[truck_1,city_loc_8,package_5] -> m_unload_ordering_0 82
200 deliver[package_9,city_loc_0] -> m_deliver_ordering_0 201 204 208
201 m_deliver_ordering_0_splitted_1[truck_2,package_9] -> _splitting_method_m_deliver_ordering_0_splitted_1 202 203
202 get_to[truck_2,city_loc_1] -> m_drive_to_ordering_0 83
203 load[truck_2,city_loc_1,package_9] -> m_load_ordering_0 84
204 get_to[truck_2,city_loc_0] -> m_drive_to_via_ordering_0 205 88
205 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 206 87
206 get_to[truck_2,city_loc_5] -> m_drive_to_via_ordering_0 207 86
207 get_to[truck_2,city_loc_2] -> m_drive_to_ordering_0 85
208 unload[truck_2,city_loc_0,package_9] -> m_unload_ordering_0 89
209 deliver[package_6,city_loc_2] -> m_deliver_ordering_0 210 215 216
210 m_deliver_ordering_0_splitted_1[truck_1,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 211 214
211 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 212 92
212 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 213 91
213 get_to[truck_1,city_loc_7] -> m_drive_to_ordering_0 90
214 load[truck_1,city_loc_1,package_6] -> m_load_ordering_0 93
215 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 94
216 unload[truck_1,city_loc_2,package_6] -> m_unload_ordering_0 95
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.254883 MEMPEAK_KBS 924

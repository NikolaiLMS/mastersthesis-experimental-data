pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/250/250.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/250/250.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.771ms
Contains 0.116ms
Restrict 0.115ms
MPrep 0.107ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [230] grounded tasks and [107] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [378] grounded tasks and [356] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 378 tasks, 356 methods.
Grounded PG:
Input was [230, 378], output was [230, 107].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 88 S 0 SC 0 SM 0 NSM 0 I 0 P 230 S 0 A 133 M 341
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/250/250.sas.
- State has 88 bits divided into 88 mutex groups.
- Domain contains 230 actions.
- Domain contains 363 tasks.
- Domain contains 341 methods.
- The initial state contains 21 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 339
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.003ms.

Computing invariants [Rintanen]
Initial candidates build (11484)
Round 1: 11484 invariants remaining
Round 2: 5551 invariants remaining
Round 3: 2438 invariants remaining
Round 4: 1415 invariants remaining
Round 5: 571 invariants remaining
Round 6: 206 invariants remaining
Round 7: 204 invariants remaining
Found 204 invariants in 2.065ms
Calculate SCCs...
- Number of SCCs: 339
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.278 ms
Computed PDT. Extracting leafs ... 35 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 36 of 36
Leaf Primitive Pruning: 14 of 14
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.145 ms
Computed PDT. Extracting leafs ... 49 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 127 of 127
Leaf Primitive Pruning: 42 of 42
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.351 ms
Computed PDT. Extracting leafs ... 63 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 340 of 340
Leaf Primitive Pruning: 138 of 138
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.664 ms
Computed PDT. Extracting leafs ... 77 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 170 of 450
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 280
Pruning: 396 of 778
Leaf Primitive Pruning: 202 of 450
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 819 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 31 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.974ms SM: 0 M: 0 I: 0 SI: 204
[34mFormula: [m2927 decomposition 6485 state 6324 mutex
Formula has 3635 vars and 15736 clauses.
Formula time: 6.180ms
Starting solver
Solver time: 0.038ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 1.001 ms
Computed PDT. Extracting leafs ... 91 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 158 of 837
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 679
Pruning: 504 of 1345
Leaf Primitive Pruning: 246 of 837
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 1244 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 45 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 2.823ms SM: 0 M: 0 I: 0 SI: 204
[34mFormula: [m10856 decomposition 9808 state 9180 mutex
Formula has 8927 vars and 45580 clauses.
Formula time: 12.882ms
Starting solver
Solver time: 0.697ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 6[m
Computing PDT took: 1.352 ms
Computed PDT. Extracting leafs ... 105 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 146 of 1344
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 1198
Pruning: 616 of 2044
Leaf Primitive Pruning: 317 of 1344
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 2020 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 59 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 3.809ms SM: 0 M: 0 I: 0 SI: 204
[34mFormula: [m28019 decomposition 13276 state 12036 mutex
Formula has 16227 vars and 98911 clauses.
Formula time: 20.018ms
Starting solver
Solver time: 2.797ms
Solver state: [32mSAT[m
==>
0 drive[truck_3,city_loc_4,city_loc_6]
1 pick_up[truck_3,city_loc_6,package_12,capacity_1,capacity_2]
2 drive[truck_3,city_loc_6,city_loc_4]
3 drive[truck_3,city_loc_4,city_loc_1]
4 drive[truck_3,city_loc_1,city_loc_4]
5 drive[truck_3,city_loc_4,city_loc_2]
6 drop[truck_3,city_loc_2,package_12,capacity_1,capacity_2]
7 drive[truck_0,city_loc_8,city_loc_4]
8 drive[truck_0,city_loc_4,city_loc_2]
9 pick_up[truck_0,city_loc_2,package_1,capacity_1,capacity_2]
10 drive[truck_0,city_loc_2,city_loc_4]
11 drive[truck_0,city_loc_4,city_loc_2]
12 drive[truck_0,city_loc_2,city_loc_0]
13 drive[truck_0,city_loc_0,city_loc_5]
14 drop[truck_0,city_loc_5,package_1,capacity_1,capacity_2]
15 noop[truck_1,city_loc_3]
16 pick_up[truck_1,city_loc_3,package_5,capacity_1,capacity_2]
17 noop[truck_1,city_loc_3]
18 drop[truck_1,city_loc_3,package_5,capacity_1,capacity_2]
19 drive[truck_2,city_loc_9,city_loc_7]
20 pick_up[truck_2,city_loc_7,package_13,capacity_1,capacity_2]
21 drive[truck_2,city_loc_7,city_loc_0]
22 drive[truck_2,city_loc_0,city_loc_5]
23 drop[truck_2,city_loc_5,package_13,capacity_1,capacity_2]
24 drive[truck_3,city_loc_2,city_loc_4]
25 drive[truck_3,city_loc_4,city_loc_6]
26 pick_up[truck_3,city_loc_6,package_8,capacity_1,capacity_2]
27 drive[truck_3,city_loc_6,city_loc_4]
28 drive[truck_3,city_loc_4,city_loc_1]
29 drive[truck_3,city_loc_1,city_loc_4]
30 drive[truck_3,city_loc_4,city_loc_8]
31 drop[truck_3,city_loc_8,package_8,capacity_1,capacity_2]
32 noop[truck_1,city_loc_3]
33 pick_up[truck_1,city_loc_3,package_4,capacity_1,capacity_2]
34 noop[truck_1,city_loc_3]
35 drop[truck_1,city_loc_3,package_4,capacity_1,capacity_2]
36 drive[truck_2,city_loc_5,city_loc_0]
37 drive[truck_2,city_loc_0,city_loc_2]
38 pick_up[truck_2,city_loc_2,package_0,capacity_1,capacity_2]
39 drive[truck_2,city_loc_2,city_loc_0]
40 drive[truck_2,city_loc_0,city_loc_2]
41 drive[truck_2,city_loc_2,city_loc_4]
42 drive[truck_2,city_loc_4,city_loc_1]
43 drop[truck_2,city_loc_1,package_0,capacity_1,capacity_2]
44 noop[truck_1,city_loc_3]
45 pick_up[truck_1,city_loc_3,package_9,capacity_1,capacity_2]
46 noop[truck_1,city_loc_3]
47 drop[truck_1,city_loc_3,package_9,capacity_1,capacity_2]
48 noop[truck_1,city_loc_3]
49 pick_up[truck_1,city_loc_3,package_3,capacity_1,capacity_2]
50 noop[truck_1,city_loc_3]
51 drop[truck_1,city_loc_3,package_3,capacity_1,capacity_2]
52 noop[truck_1,city_loc_3]
53 pick_up[truck_1,city_loc_3,package_10,capacity_1,capacity_2]
54 noop[truck_1,city_loc_3]
55 drop[truck_1,city_loc_3,package_10,capacity_1,capacity_2]
56 drive[truck_2,city_loc_1,city_loc_4]
57 drive[truck_2,city_loc_4,city_loc_6]
58 pick_up[truck_2,city_loc_6,package_11,capacity_1,capacity_2]
59 drive[truck_2,city_loc_6,city_loc_4]
60 drive[truck_2,city_loc_4,city_loc_2]
61 drive[truck_2,city_loc_2,city_loc_0]
62 drive[truck_2,city_loc_0,city_loc_7]
63 drop[truck_2,city_loc_7,package_11,capacity_1,capacity_2]
64 noop[truck_1,city_loc_3]
65 pick_up[truck_1,city_loc_3,package_2,capacity_1,capacity_2]
66 noop[truck_1,city_loc_3]
67 drop[truck_1,city_loc_3,package_2,capacity_1,capacity_2]
68 drive[truck_3,city_loc_8,city_loc_4]
69 drive[truck_3,city_loc_4,city_loc_8]
70 pick_up[truck_3,city_loc_8,package_7,capacity_1,capacity_2]
71 drive[truck_3,city_loc_8,city_loc_4]
72 drive[truck_3,city_loc_4,city_loc_2]
73 drive[truck_3,city_loc_2,city_loc_0]
74 drop[truck_3,city_loc_0,package_7,capacity_1,capacity_2]
75 noop[truck_1,city_loc_3]
76 pick_up[truck_1,city_loc_3,package_6,capacity_1,capacity_2]
77 noop[truck_1,city_loc_3]
78 drop[truck_1,city_loc_3,package_6,capacity_1,capacity_2]
root 79
79 __top[] -> <<<<<<<<<<<<<<<<__top_method;deliver[package_10,city_loc_3];m_deliver_ordering_0;9;0,1,2,3,4,5,6,7,8,-1,-2,-3,10,11,12,13>;m_deliver_ordering_0_splitted_1[truck_1,package_10];_splitting_method_m_deliver_ordering_0_splitted_1;9;0,1,2,3,4,5,6,7,8,-1,-2,10,11,12,13,14,15>;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;11;0,1,2,3,4,5,6,7,8,9,10,-1,12,13,14,15,16>;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;9;0,1,2,3,4,5,6,7,8,-1,10,11,12,13,14,15,16>;deliver[package_9,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;7;0,1,2,3,4,5,6,-1,-2,-3,8,9,10,11,12,13,14,15,16>;m_deliver_ordering_0_splitted_1[truck_1,package_9];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;7;0,1,2,3,4,5,6,-1,-2,8,9,10,11,12,13,14,15,16,17,18>;deliver[package_6,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;19;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,-1,-2,-3>;m_deliver_ordering_0_splitted_1[truck_1,package_6];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;19;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,-1,-2,20,21>;deliver[package_5,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22>;m_deliver_ordering_0_splitted_1[truck_1,package_5];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;2;0,1,-1,-2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24>;deliver[package_4,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;8;0,1,2,3,4,5,6,7,-1,-2,-3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25>;m_deliver_ordering_0_splitted_1[truck_1,package_4];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;8;0,1,2,3,4,5,6,7,-1,-2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27>;deliver[package_3,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;17;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,-1,-2,-3,18,19,20,21,22,23,24,25,26,27,28>;m_deliver_ordering_0_splitted_1[truck_1,package_3];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;17;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,-1,-2,18,19,20,21,22,23,24,25,26,27,28,29,30>;deliver[package_2,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-2,-3,27,28,29,30,31>;m_deliver_ordering_0_splitted_1[truck_1,package_2];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-2,27,28,29,30,31,32,33> 80 89 15 99 17 100 101 108 32 118 34 119 120 44 130 46 131 48 132 50 133 52 134 54 135 136 64 146 66 147 148 75 157 77 158
80 deliver[package_12,city_loc_2] -> m_deliver_ordering_0 81 84 88
81 m_deliver_ordering_0_splitted_1[truck_3,package_12] -> _splitting_method_m_deliver_ordering_0_splitted_1 82 83
82 get_to[truck_3,city_loc_6] -> m_drive_to_ordering_0 0
83 load[truck_3,city_loc_6,package_12] -> m_load_ordering_0 1
84 get_to[truck_3,city_loc_2] -> m_drive_to_via_ordering_0 85 5
85 get_to[truck_3,city_loc_4] -> m_drive_to_via_ordering_0 86 4
86 get_to[truck_3,city_loc_1] -> m_drive_to_via_ordering_0 87 3
87 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 2
88 unload[truck_3,city_loc_2,package_12] -> m_unload_ordering_0 6
89 deliver[package_1,city_loc_5] -> m_deliver_ordering_0 90 94 98
90 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 91 93
91 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 92 8
92 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 7
93 load[truck_0,city_loc_2,package_1] -> m_load_ordering_0 9
94 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 95 13
95 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 96 12
96 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 97 11
97 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 10
98 unload[truck_0,city_loc_5,package_1] -> m_unload_ordering_0 14
99 load[truck_1,city_loc_3,package_5] -> m_load_ordering_0 16
100 unload[truck_1,city_loc_3,package_5] -> m_unload_ordering_0 18
101 deliver[package_13,city_loc_5] -> m_deliver_ordering_0 102 105 107
102 m_deliver_ordering_0_splitted_1[truck_2,package_13] -> _splitting_method_m_deliver_ordering_0_splitted_1 103 104
103 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 19
104 load[truck_2,city_loc_7,package_13] -> m_load_ordering_0 20
105 get_to[truck_2,city_loc_5] -> m_drive_to_via_ordering_0 106 22
106 get_to[truck_2,city_loc_0] -> m_drive_to_ordering_0 21
107 unload[truck_2,city_loc_5,package_13] -> m_unload_ordering_0 23
108 deliver[package_8,city_loc_8] -> m_deliver_ordering_0 109 113 117
109 m_deliver_ordering_0_splitted_1[truck_3,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 110 112
110 get_to[truck_3,city_loc_6] -> m_drive_to_via_ordering_0 111 25
111 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 24
112 load[truck_3,city_loc_6,package_8] -> m_load_ordering_0 26
113 get_to[truck_3,city_loc_8] -> m_drive_to_via_ordering_0 114 30
114 get_to[truck_3,city_loc_4] -> m_drive_to_via_ordering_0 115 29
115 get_to[truck_3,city_loc_1] -> m_drive_to_via_ordering_0 116 28
116 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 27
117 unload[truck_3,city_loc_8,package_8] -> m_unload_ordering_0 31
118 load[truck_1,city_loc_3,package_4] -> m_load_ordering_0 33
119 unload[truck_1,city_loc_3,package_4] -> m_unload_ordering_0 35
120 deliver[package_0,city_loc_1] -> m_deliver_ordering_0 121 125 129
121 m_deliver_ordering_0_splitted_1[truck_2,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 122 124
122 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 123 37
123 get_to[truck_2,city_loc_0] -> m_drive_to_ordering_0 36
124 load[truck_2,city_loc_2,package_0] -> m_load_ordering_0 38
125 get_to[truck_2,city_loc_1] -> m_drive_to_via_ordering_0 126 42
126 get_to[truck_2,city_loc_4] -> m_drive_to_via_ordering_0 127 41
127 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 128 40
128 get_to[truck_2,city_loc_0] -> m_drive_to_ordering_0 39
129 unload[truck_2,city_loc_1,package_0] -> m_unload_ordering_0 43
130 load[truck_1,city_loc_3,package_9] -> m_load_ordering_0 45
131 unload[truck_1,city_loc_3,package_9] -> m_unload_ordering_0 47
132 load[truck_1,city_loc_3,package_3] -> m_load_ordering_0 49
133 unload[truck_1,city_loc_3,package_3] -> m_unload_ordering_0 51
134 load[truck_1,city_loc_3,package_10] -> m_load_ordering_0 53
135 unload[truck_1,city_loc_3,package_10] -> m_unload_ordering_0 55
136 deliver[package_11,city_loc_7] -> m_deliver_ordering_0 137 141 145
137 m_deliver_ordering_0_splitted_1[truck_2,package_11] -> _splitting_method_m_deliver_ordering_0_splitted_1 138 140
138 get_to[truck_2,city_loc_6] -> m_drive_to_via_ordering_0 139 57
139 get_to[truck_2,city_loc_4] -> m_drive_to_ordering_0 56
140 load[truck_2,city_loc_6,package_11] -> m_load_ordering_0 58
141 get_to[truck_2,city_loc_7] -> m_drive_to_via_ordering_0 142 62
142 get_to[truck_2,city_loc_0] -> m_drive_to_via_ordering_0 143 61
143 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 144 60
144 get_to[truck_2,city_loc_4] -> m_drive_to_ordering_0 59
145 unload[truck_2,city_loc_7,package_11] -> m_unload_ordering_0 63
146 load[truck_1,city_loc_3,package_2] -> m_load_ordering_0 65
147 unload[truck_1,city_loc_3,package_2] -> m_unload_ordering_0 67
148 deliver[package_7,city_loc_0] -> m_deliver_ordering_0 149 153 156
149 m_deliver_ordering_0_splitted_1[truck_3,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 150 152
150 get_to[truck_3,city_loc_8] -> m_drive_to_via_ordering_0 151 69
151 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 68
152 load[truck_3,city_loc_8,package_7] -> m_load_ordering_0 70
153 get_to[truck_3,city_loc_0] -> m_drive_to_via_ordering_0 154 73
154 get_to[truck_3,city_loc_2] -> m_drive_to_via_ordering_0 155 72
155 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 71
156 unload[truck_3,city_loc_0,package_7] -> m_unload_ordering_0 74
157 load[truck_1,city_loc_3,package_6] -> m_load_ordering_0 76
158 unload[truck_1,city_loc_3,package_6] -> m_unload_ordering_0 78
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.841309 MEMPEAK_KBS 928

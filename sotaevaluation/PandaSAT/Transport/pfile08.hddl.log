pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/220/220.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/220/220.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.335ms
Contains 0.04ms
Restrict 0.071ms
MPrep 0.046ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [73] grounded tasks and [44] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [110] grounded tasks and [105] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 110 tasks, 105 methods.
Grounded PG:
Input was [73, 110], output was [73, 44].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 28 S 0 SC 0 SM 0 NSM 0 I 0 P 73 S 0 A 31 M 99
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/220/220.sas.
- State has 28 bits divided into 28 mutex groups.
- Domain contains 73 actions.
- Domain contains 104 tasks.
- Domain contains 99 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 99
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (1134)
Round 1: 1134 invariants remaining
Round 2: 492 invariants remaining
Round 3: 239 invariants remaining
Round 4: 121 invariants remaining
Round 5: 51 invariants remaining
Round 6: 39 invariants remaining
Found 39 invariants in 0.377ms
Calculate SCCs...
- Number of SCCs: 99
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.119 ms
Computed PDT. Extracting leafs ... 18 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 19 of 19
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.149 ms
Computed PDT. Extracting leafs ... 30 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 95 of 95
Leaf Primitive Pruning: 38 of 38
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.286 ms
Computed PDT. Extracting leafs ... 42 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 42 of 162
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 120
Pruning: 118 of 268
Leaf Primitive Pruning: 57 of 162
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 355 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 19 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.103ms SM: 0 M: 0 I: 0 SI: 39
[34mFormula: [m949 decomposition 1476 state 741 mutex
Formula has 915 vars and 3166 clauses.
Formula time: 1.706ms
Starting solver
Solver time: 0.025ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.380 ms
Computed PDT. Extracting leafs ... 54 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 43 of 326
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 283
Pruning: 171 of 497
Leaf Primitive Pruning: 84 of 326
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 510 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 31 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.226ms SM: 0 M: 0 I: 0 SI: 39
[34mFormula: [m3015 decomposition 2474 state 1209 mutex
Formula has 2321 vars and 9864 clauses.
Formula time: 3.224ms
Starting solver
Solver time: 0.020ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 0.487 ms
Computed PDT. Extracting leafs ... 66 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 40 of 538
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 498
Pruning: 188 of 780
Leaf Primitive Pruning: 92 of 538
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 902 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 43 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.471ms SM: 0 M: 0 I: 0 SI: 39
[34mFormula: [m7732 decomposition 3623 state 1677 mutex
Formula has 4455 vars and 22896 clauses.
Formula time: 5.521ms
Starting solver
Solver time: 0.578ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_0,city_loc_5]
1 pick_up[truck_0,city_loc_5,package_3,capacity_2,capacity_3]
2 drive[truck_0,city_loc_5,city_loc_0]
3 drive[truck_0,city_loc_0,city_loc_2]
4 drive[truck_0,city_loc_2,city_loc_0]
5 drive[truck_0,city_loc_0,city_loc_4]
6 drop[truck_0,city_loc_4,package_3,capacity_2,capacity_3]
7 drive[truck_0,city_loc_4,city_loc_0]
8 drive[truck_0,city_loc_0,city_loc_5]
9 pick_up[truck_0,city_loc_5,package_4,capacity_2,capacity_3]
10 drive[truck_0,city_loc_5,city_loc_0]
11 drive[truck_0,city_loc_0,city_loc_2]
12 drive[truck_0,city_loc_2,city_loc_0]
13 drive[truck_0,city_loc_0,city_loc_4]
14 drop[truck_0,city_loc_4,package_4,capacity_2,capacity_3]
15 drive[truck_0,city_loc_4,city_loc_0]
16 drive[truck_0,city_loc_0,city_loc_4]
17 drive[truck_0,city_loc_4,city_loc_1]
18 pick_up[truck_0,city_loc_1,package_2,capacity_2,capacity_3]
19 drive[truck_0,city_loc_1,city_loc_4]
20 drive[truck_0,city_loc_4,city_loc_0]
21 drive[truck_0,city_loc_0,city_loc_5]
22 drive[truck_0,city_loc_5,city_loc_3]
23 drop[truck_0,city_loc_3,package_2,capacity_2,capacity_3]
24 drive[truck_0,city_loc_3,city_loc_5]
25 drive[truck_0,city_loc_5,city_loc_2]
26 drive[truck_0,city_loc_2,city_loc_0]
27 pick_up[truck_0,city_loc_0,package_5,capacity_2,capacity_3]
28 drive[truck_0,city_loc_0,city_loc_5]
29 drop[truck_0,city_loc_5,package_5,capacity_2,capacity_3]
30 drive[truck_0,city_loc_5,city_loc_2]
31 drive[truck_0,city_loc_2,city_loc_0]
32 drive[truck_0,city_loc_0,city_loc_4]
33 pick_up[truck_0,city_loc_4,package_1,capacity_2,capacity_3]
34 drive[truck_0,city_loc_4,city_loc_0]
35 drive[truck_0,city_loc_0,city_loc_2]
36 drive[truck_0,city_loc_2,city_loc_0]
37 drive[truck_0,city_loc_0,city_loc_5]
38 drop[truck_0,city_loc_5,package_1,capacity_2,capacity_3]
39 drive[truck_0,city_loc_5,city_loc_0]
40 drive[truck_0,city_loc_0,city_loc_2]
41 drive[truck_0,city_loc_2,city_loc_0]
42 pick_up[truck_0,city_loc_0,package_0,capacity_2,capacity_3]
43 drive[truck_0,city_loc_0,city_loc_4]
44 drive[truck_0,city_loc_4,city_loc_1]
45 drop[truck_0,city_loc_1,package_0,capacity_2,capacity_3]
root 46
46 __top[] -> <<<<<<__top_method;deliver[package_5,city_loc_5];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5>;deliver[package_4,city_loc_4];m_deliver_ordering_0;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package_3,city_loc_4];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9>;deliver[package_2,city_loc_3];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3,7,8,9,10,11>;deliver[package_1,city_loc_5];m_deliver_ordering_0;12;0,1,2,3,4,5,6,7,8,9,10,11,-1,-2,-3,13>;deliver[package_0,city_loc_1];m_deliver_ordering_0;15;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,-1,-2,-3> 47 50 54 55 59 63 64 69 73 74 79 80 81 86 90 91 96 98
47 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 48 49
48 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 0
49 load[truck_0,city_loc_5,package_3] -> m_load_ordering_0 1
50 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 51 5
51 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 52 4
52 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 53 3
53 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 2
54 unload[truck_0,city_loc_4,package_3] -> m_unload_ordering_0 6
55 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 56 58
56 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 57 8
57 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 7
58 load[truck_0,city_loc_5,package_4] -> m_load_ordering_0 9
59 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 60 13
60 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 61 12
61 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 62 11
62 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 10
63 unload[truck_0,city_loc_4,package_4] -> m_unload_ordering_0 14
64 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 65 68
65 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 66 17
66 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 67 16
67 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 15
68 load[truck_0,city_loc_1,package_2] -> m_load_ordering_0 18
69 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 70 22
70 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 71 21
71 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 72 20
72 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 19
73 unload[truck_0,city_loc_3,package_2] -> m_unload_ordering_0 23
74 m_deliver_ordering_0_splitted_1[truck_0,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 75 78
75 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 76 26
76 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 77 25
77 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 24
78 load[truck_0,city_loc_0,package_5] -> m_load_ordering_0 27
79 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 28
80 unload[truck_0,city_loc_5,package_5] -> m_unload_ordering_0 29
81 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 82 85
82 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 83 32
83 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 84 31
84 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 30
85 load[truck_0,city_loc_4,package_1] -> m_load_ordering_0 33
86 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 87 37
87 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 88 36
88 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 89 35
89 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 34
90 unload[truck_0,city_loc_5,package_1] -> m_unload_ordering_0 38
91 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 92 95
92 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 93 41
93 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 94 40
94 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 39
95 load[truck_0,city_loc_0,package_0] -> m_load_ordering_0 42
96 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 97 44
97 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 43
98 unload[truck_0,city_loc_1,package_0] -> m_unload_ordering_0 45
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.0527344 MEMPEAK_KBS 924

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/242/242.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/242/242.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.241ms
Contains 0.03ms
Restrict 0.047ms
MPrep 0.031ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [82] grounded tasks and [46] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [129] grounded tasks and [131] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 129 tasks, 131 methods.
Grounded PG:
Input was [82, 129], output was [82, 46].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 32 S 0 SC 0 SM 0 NSM 0 I 0 P 82 S 0 A 47 M 131
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/242/242.sas.
- State has 32 bits divided into 32 mutex groups.
- Domain contains 82 actions.
- Domain contains 129 tasks.
- Domain contains 131 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 121
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.006ms.

Computing invariants [Rintanen]
Initial candidates build (1488)
Round 1: 1488 invariants remaining
Round 2: 354 invariants remaining
Round 3: 109 invariants remaining
Round 4: 50 invariants remaining
Found 50 invariants in 0.3ms
Calculate SCCs...
- Number of SCCs: 121
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.046 ms
Computed PDT. Extracting leafs ... 4 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 5 of 5
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.051 ms
Computed PDT. Extracting leafs ... 12 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 29 of 29
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.146 ms
Computed PDT. Extracting leafs ... 20 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 117 of 117
Leaf Primitive Pruning: 40 of 40
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.386 ms
Computed PDT. Extracting leafs ... 28 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 54 of 188
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 134
Pruning: 146 of 325
Leaf Primitive Pruning: 68 of 188
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 387 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 13 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.187ms SM: 0 M: 0 I: 0 SI: 50
[34mFormula: [m1405 decomposition 1279 state 650 mutex
Formula has 835 vars and 3334 clauses.
Formula time: 1.957ms
Starting solver
Solver time: 0.308ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 0.550 ms
Computed PDT. Extracting leafs ... 36 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 50 of 400
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 350
Pruning: 182 of 615
Leaf Primitive Pruning: 82 of 400
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 689 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 21 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.303ms SM: 0 M: 0 I: 0 SI: 50
[34mFormula: [m6133 decomposition 2247 state 1050 mutex
Formula has 2228 vars and 12764 clauses.
Formula time: 3.923ms
Starting solver
Solver time: 0.816ms
Solver state: [32mSAT[m
==>
0 drive[truck_1,city_loc_1,city_loc_3]
1 pick_up[truck_1,city_loc_3,package_2,capacity_1,capacity_2]
2 drive[truck_1,city_loc_3,city_loc_1]
3 drive[truck_1,city_loc_1,city_loc_1]
4 drive[truck_1,city_loc_1,city_loc_2]
5 drop[truck_1,city_loc_2,package_2,capacity_1,capacity_2]
6 drive[truck_1,city_loc_2,city_loc_1]
7 drive[truck_1,city_loc_1,city_loc_1]
8 pick_up[truck_1,city_loc_1,package_1,capacity_1,capacity_2]
9 drive[truck_1,city_loc_1,city_loc_1]
10 drive[truck_1,city_loc_1,city_loc_1]
11 drive[truck_1,city_loc_1,city_loc_2]
12 drop[truck_1,city_loc_2,package_1,capacity_1,capacity_2]
13 drive[truck_1,city_loc_2,city_loc_1]
14 drive[truck_1,city_loc_1,city_loc_3]
15 pick_up[truck_1,city_loc_3,package_0,capacity_1,capacity_2]
16 drive[truck_1,city_loc_3,city_loc_1]
17 drive[truck_1,city_loc_1,city_loc_4]
18 drive[truck_1,city_loc_4,city_loc_0]
19 drop[truck_1,city_loc_0,package_0,capacity_1,capacity_2]
20 drive[truck_1,city_loc_0,city_loc_4]
21 drive[truck_1,city_loc_4,city_loc_1]
22 pick_up[truck_1,city_loc_1,package_3,capacity_1,capacity_2]
23 drive[truck_1,city_loc_1,city_loc_3]
24 drop[truck_1,city_loc_3,package_3,capacity_1,capacity_2]
root 25
25 __top[] -> __top_method 26 34 43 52
26 deliver[package_2,city_loc_2] -> m_deliver_ordering_0 27 30 33
27 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 28 29
28 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 0
29 load[truck_1,city_loc_3,package_2] -> m_load_ordering_0 1
30 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 31 4
31 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 32 3
32 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 2
33 unload[truck_1,city_loc_2,package_2] -> m_unload_ordering_0 5
34 deliver[package_1,city_loc_2] -> m_deliver_ordering_0 35 39 42
35 m_deliver_ordering_0_splitted_1[truck_1,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 36 38
36 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 37 7
37 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 6
38 load[truck_1,city_loc_1,package_1] -> m_load_ordering_0 8
39 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 40 11
40 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 41 10
41 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 9
42 unload[truck_1,city_loc_2,package_1] -> m_unload_ordering_0 12
43 deliver[package_0,city_loc_0] -> m_deliver_ordering_0 44 48 51
44 m_deliver_ordering_0_splitted_1[truck_1,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 45 47
45 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 46 14
46 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 13
47 load[truck_1,city_loc_3,package_0] -> m_load_ordering_0 15
48 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 49 18
49 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 50 17
50 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 16
51 unload[truck_1,city_loc_0,package_0] -> m_unload_ordering_0 19
52 deliver[package_3,city_loc_3] -> m_deliver_ordering_0 53 57 58
53 m_deliver_ordering_0_splitted_1[truck_1,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 54 56
54 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 55 21
55 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 20
56 load[truck_1,city_loc_1,package_3] -> m_load_ordering_0 22
57 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 23
58 unload[truck_1,city_loc_3,package_3] -> m_unload_ordering_0 24
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.168945 MEMPEAK_KBS 924

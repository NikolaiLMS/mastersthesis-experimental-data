pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/247/247.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/247/247.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.28ms
Contains 0.032ms
Restrict 0.043ms
MPrep 0.04ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [56] grounded tasks and [33] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [86] grounded tasks and [79] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 86 tasks, 79 methods.
Grounded PG:
Input was [56, 86], output was [56, 33].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 23 S 0 SC 0 SM 0 NSM 0 I 0 P 56 S 0 A 25 M 74
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/247/247.sas.
- State has 23 bits divided into 23 mutex groups.
- Domain contains 56 actions.
- Domain contains 81 tasks.
- Domain contains 74 methods.
- The initial state contains 7 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 78
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.005ms.

Computing invariants [Rintanen]
Initial candidates build (759)
Round 1: 759 invariants remaining
Round 2: 634 invariants remaining
Round 3: 326 invariants remaining
Round 4: 97 invariants remaining
Round 5: 33 invariants remaining
Round 6: 27 invariants remaining
Found 27 invariants in 0.302ms
Calculate SCCs...
- Number of SCCs: 78
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.077 ms
Computed PDT. Extracting leafs ... 15 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 16 of 16
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.119 ms
Computed PDT. Extracting leafs ... 25 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 76 of 76
Leaf Primitive Pruning: 30 of 30
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.2 ms
Computed PDT. Extracting leafs ... 35 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 36 of 116
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 80
Pruning: 192 of 192
Leaf Primitive Pruning: 116 of 116
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.208 ms
Computed PDT. Extracting leafs ... 45 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 39 of 203
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 164
Pruning: 316 of 316
Leaf Primitive Pruning: 203 of 203
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 0.256 ms
Computed PDT. Extracting leafs ... 55 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 33 of 306
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 273
Pruning: 159 of 458
Leaf Primitive Pruning: 92 of 306
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 700 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 36 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.258ms SM: 0 M: 0 I: 0 SI: 27
[34mFormula: [m2634 decomposition 2265 state 972 mutex
Formula has 1551 vars and 5871 clauses.
Formula time: 2.962ms
Starting solver
Solver time: 0.168ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_1,city_loc_3]
1 drive[truck_0,city_loc_3,city_loc_2]
2 drive[truck_0,city_loc_2,city_loc_0]
3 pick_up[truck_0,city_loc_0,package_0,capacity_2,capacity_3]
4 drive[truck_0,city_loc_0,city_loc_2]
5 drive[truck_0,city_loc_2,city_loc_3]
6 drive[truck_0,city_loc_3,city_loc_1]
7 drive[truck_0,city_loc_1,city_loc_1]
8 drop[truck_0,city_loc_1,package_0,capacity_2,capacity_3]
9 noop[truck_0,city_loc_1]
10 pick_up[truck_0,city_loc_1,package_4,capacity_2,capacity_3]
11 drive[truck_0,city_loc_1,city_loc_3]
12 drive[truck_0,city_loc_3,city_loc_2]
13 drop[truck_0,city_loc_2,package_4,capacity_2,capacity_3]
14 drive[truck_0,city_loc_2,city_loc_3]
15 drive[truck_0,city_loc_3,city_loc_2]
16 pick_up[truck_0,city_loc_2,package_1,capacity_2,capacity_3]
17 drive[truck_0,city_loc_2,city_loc_3]
18 drive[truck_0,city_loc_3,city_loc_1]
19 drive[truck_0,city_loc_1,city_loc_1]
20 drive[truck_0,city_loc_1,city_loc_3]
21 drop[truck_0,city_loc_3,package_1,capacity_2,capacity_3]
22 drive[truck_0,city_loc_3,city_loc_2]
23 drive[truck_0,city_loc_2,city_loc_0]
24 pick_up[truck_0,city_loc_0,package_2,capacity_2,capacity_3]
25 drive[truck_0,city_loc_0,city_loc_2]
26 drive[truck_0,city_loc_2,city_loc_3]
27 drive[truck_0,city_loc_3,city_loc_1]
28 drive[truck_0,city_loc_1,city_loc_1]
29 drop[truck_0,city_loc_1,package_2,capacity_2,capacity_3]
30 drive[truck_0,city_loc_1,city_loc_3]
31 drive[truck_0,city_loc_3,city_loc_2]
32 drive[truck_0,city_loc_2,city_loc_0]
33 pick_up[truck_0,city_loc_0,package_3,capacity_2,capacity_3]
34 drive[truck_0,city_loc_0,city_loc_2]
35 drive[truck_0,city_loc_2,city_loc_3]
36 drive[truck_0,city_loc_3,city_loc_1]
37 drive[truck_0,city_loc_1,city_loc_1]
38 drop[truck_0,city_loc_1,package_3,capacity_2,capacity_3]
root 39
39 __top[] -> <<<<<__top_method;deliver[package_4,city_loc_2];m_deliver_ordering_0;1;0,-1,-2,-3,2,3,4>;deliver[package_3,city_loc_1];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3>;deliver[package_2,city_loc_1];m_deliver_ordering_0;5;0,1,2,3,4,-1,-2,-3,6,7,8>;deliver[package_1,city_loc_3];m_deliver_ordering_0;4;0,1,2,3,-1,-2,-3,5,6,7,8,9,10>;deliver[package_0,city_loc_1];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12> 40 45 49 50 53 55 56 60 64 65 69 73 74 79 83
40 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 41 44
41 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 42 2
42 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 43 1
43 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 0
44 load[truck_0,city_loc_0,package_0] -> m_load_ordering_0 3
45 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 46 7
46 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 47 6
47 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 48 5
48 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 4
49 unload[truck_0,city_loc_1,package_0] -> m_unload_ordering_0 8
50 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 51 52
51 get_to[truck_0,city_loc_1] -> m_i_am_there_ordering_0 9
52 load[truck_0,city_loc_1,package_4] -> m_load_ordering_0 10
53 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 54 12
54 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 11
55 unload[truck_0,city_loc_2,package_4] -> m_unload_ordering_0 13
56 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 57 59
57 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 58 15
58 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 14
59 load[truck_0,city_loc_2,package_1] -> m_load_ordering_0 16
60 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 61 20
61 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 62 19
62 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 63 18
63 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 17
64 unload[truck_0,city_loc_3,package_1] -> m_unload_ordering_0 21
65 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 66 68
66 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 67 23
67 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 22
68 load[truck_0,city_loc_0,package_2] -> m_load_ordering_0 24
69 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 70 28
70 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 71 27
71 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 72 26
72 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 25
73 unload[truck_0,city_loc_1,package_2] -> m_unload_ordering_0 29
74 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 75 78
75 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 76 32
76 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 77 31
77 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 30
78 load[truck_0,city_loc_0,package_3] -> m_load_ordering_0 33
79 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 80 37
80 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 81 36
81 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 82 35
82 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 34
83 unload[truck_0,city_loc_1,package_3] -> m_unload_ordering_0 38
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.0390625 MEMPEAK_KBS 924

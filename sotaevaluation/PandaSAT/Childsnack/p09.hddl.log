pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/376/376.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/376/376.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.96ms
Contains 0.322ms
Restrict 0.23ms
MPrep 0.247ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           15 (__method_precondition_m1_serve_base_base)
 ---> Disabling potentially consistent extension checking for action:           13 (__method_precondition_m0_serve_base_base)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [6648] grounded tasks and [237] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
 ---> Disabling potentially consistent extension checking for action:           4 (m0_serve)
 ---> Disabling potentially consistent extension checking for action:           8 (m1_serve)
Returning from runGpg().
TDG done.
Calculated [7904] grounded tasks and [4441] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 5006 tasks, 4441 methods.
Grounded PG:
Input was [3750, 5006], output was [3750, 237].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
280 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 177 S 0 SC 0 SM 0 NSM 0 I 0 P 3318 S 20 A 356 M 3541
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/376/376.sas.
- State has 177 bits divided into 177 mutex groups.
- Domain contains 3338 actions.
- Domain contains 3694 tasks.
- Domain contains 3541 methods.
- The initial state contains 53 set bits.
- The initial task is "__top[]".
- State-based goal contains 15 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 3694
- The problem is acyclic

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (46728)
Round 1: 46728 invariants remaining
Round 2: 23723 invariants remaining
Round 3: 1700 invariants remaining
Round 4: 238 invariants remaining
Found 238 invariants in 22.647ms
Calculate SCCs...
- Number of SCCs: 3694
- The problem is acyclic
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.097 ms
Computed PDT. Extracting leafs ... 15 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 16 of 16
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.827 ms
Computed PDT. Extracting leafs ... 45 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 916 of 916
Leaf Primitive Pruning: 300 of 300
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 26.7 ms
Computed PDT. Extracting leafs ... 90 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 21090
Pruning: 0 of 21706
Leaf Primitive Pruning: 0 of 21090
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 41943 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 31 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 2.9ms SM: 0 M: 0 I: 0 SI: 238
[34mFormula: [m305268 decomposition 155917 state 7378 mutex
Formula has 47766 vars and 468563 clauses.
Formula time: 153.389ms
Starting solver
Solver time: 57.235ms
Solver state: [32mSAT[m
==>
0 __method_precondition_m1_serve_base_base[child15,sandw2]
1 make_sandwich_no_gluten[sandw2,bread14,content4]
2 put_on_tray[sandw2,tray2]
3 move_tray[tray2,kitchen,table3]
4 serve_sandwich_no_gluten[sandw2,child1,tray2,table3]
5 move_tray[tray2,table3,kitchen]
6 __method_precondition_m1_serve_base_base[child15,sandw20]
7 make_sandwich[sandw20,bread11,content10]
8 put_on_tray[sandw20,tray3]
9 move_tray[tray3,kitchen,table2]
10 serve_sandwich[sandw20,child2,tray3,table2]
11 move_tray[tray3,table2,kitchen]
12 __method_precondition_m1_serve_base_base[child15,sandw15]
13 make_sandwich[sandw15,bread5,content15]
14 put_on_tray[sandw15,tray1]
15 move_tray[tray1,kitchen,table1]
16 serve_sandwich[sandw15,child3,tray1,table1]
17 move_tray[tray1,table1,kitchen]
18 __method_precondition_m1_serve_base_base[child15,sandw4]
19 make_sandwich[sandw4,bread12,content14]
20 put_on_tray[sandw4,tray1]
21 move_tray[tray1,kitchen,table3]
22 serve_sandwich[sandw4,child4,tray1,table3]
23 move_tray[tray1,table3,kitchen]
24 __method_precondition_m1_serve_base_base[child15,sandw19]
25 make_sandwich_no_gluten[sandw19,bread9,content2]
26 put_on_tray[sandw19,tray1]
27 move_tray[tray1,kitchen,table1]
28 serve_sandwich_no_gluten[sandw19,child5,tray1,table1]
29 move_tray[tray1,table1,kitchen]
30 __method_precondition_m1_serve_base_base[child15,sandw17]
31 make_sandwich[sandw17,bread1,content6]
32 put_on_tray[sandw17,tray1]
33 move_tray[tray1,kitchen,table1]
34 serve_sandwich[sandw17,child6,tray1,table1]
35 move_tray[tray1,table1,kitchen]
36 __method_precondition_m1_serve_base_base[child15,sandw1]
37 make_sandwich_no_gluten[sandw1,bread6,content5]
38 put_on_tray[sandw1,tray3]
39 move_tray[tray3,kitchen,table3]
40 serve_sandwich_no_gluten[sandw1,child7,tray3,table3]
41 move_tray[tray3,table3,kitchen]
42 __method_precondition_m1_serve_base_base[child15,sandw13]
43 make_sandwich_no_gluten[sandw13,bread13,content1]
44 put_on_tray[sandw13,tray2]
45 move_tray[tray2,kitchen,table1]
46 serve_sandwich_no_gluten[sandw13,child8,tray2,table1]
47 move_tray[tray2,table1,kitchen]
48 __method_precondition_m1_serve_base_base[child15,sandw16]
49 make_sandwich_no_gluten[sandw16,bread2,content8]
50 put_on_tray[sandw16,tray1]
51 move_tray[tray1,kitchen,table1]
52 serve_sandwich_no_gluten[sandw16,child9,tray1,table1]
53 move_tray[tray1,table1,kitchen]
54 __method_precondition_m1_serve_base_base[child15,sandw3]
55 make_sandwich_no_gluten[sandw3,bread3,content13]
56 put_on_tray[sandw3,tray3]
57 move_tray[tray3,kitchen,table1]
58 serve_sandwich_no_gluten[sandw3,child10,tray3,table1]
59 move_tray[tray3,table1,kitchen]
60 __method_precondition_m1_serve_base_base[child15,sandw5]
61 make_sandwich[sandw5,bread4,content7]
62 put_on_tray[sandw5,tray3]
63 move_tray[tray3,kitchen,table2]
64 serve_sandwich[sandw5,child11,tray3,table2]
65 move_tray[tray3,table2,kitchen]
66 __method_precondition_m1_serve_base_base[child15,sandw9]
67 make_sandwich[sandw9,bread8,content9]
68 put_on_tray[sandw9,tray1]
69 move_tray[tray1,kitchen,table3]
70 serve_sandwich[sandw9,child12,tray1,table3]
71 move_tray[tray1,table3,kitchen]
72 __method_precondition_m1_serve_base_base[child15,sandw8]
73 make_sandwich[sandw8,bread15,content11]
74 put_on_tray[sandw8,tray3]
75 move_tray[tray3,kitchen,table1]
76 serve_sandwich[sandw8,child13,tray3,table1]
77 move_tray[tray3,table1,kitchen]
78 __method_precondition_m1_serve_base_base[child15,sandw6]
79 make_sandwich[sandw6,bread7,content12]
80 put_on_tray[sandw6,tray2]
81 move_tray[tray2,kitchen,table2]
82 serve_sandwich[sandw6,child14,tray2,table2]
83 move_tray[tray2,table2,kitchen]
84 __method_precondition_m1_serve_base_base[child15,sandw7]
85 make_sandwich[sandw7,bread10,content3]
86 put_on_tray[sandw7,tray2]
87 move_tray[tray2,kitchen,table2]
88 serve_sandwich[sandw7,child15,tray2,table2]
89 move_tray[tray2,table2,kitchen]
root 90
90 __top[] -> __top_method 91 94 97 100 103 106 109 112 115 118 121 124 127 130 133
91 serve[child1] -> m0_serve 0 92 93
92 m0_serve_splitted_1[sandw2] -> _splitting_method_m0_serve_splitted_1 1
93 m0_serve_splitted_5[sandw2,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw2,child1,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 2 3 4 5
94 serve[child2] -> m1_serve 6 95 96
95 m1_serve_splitted_2[sandw20] -> _splitting_method_m1_serve_splitted_2 7
96 m1_serve_splitted_6[sandw20,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw20,child2,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8 9 10 11
97 serve[child3] -> m1_serve 12 98 99
98 m1_serve_splitted_2[sandw15] -> _splitting_method_m1_serve_splitted_2 13
99 m1_serve_splitted_6[sandw15,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw15,child3,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 14 15 16 17
100 serve[child4] -> m1_serve 18 101 102
101 m1_serve_splitted_2[sandw4] -> _splitting_method_m1_serve_splitted_2 19
102 m1_serve_splitted_6[sandw4,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw4,child4,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 20 21 22 23
103 serve[child5] -> m0_serve 24 104 105
104 m0_serve_splitted_1[sandw19] -> _splitting_method_m0_serve_splitted_1 25
105 m0_serve_splitted_5[sandw19,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw19,child5,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 26 27 28 29
106 serve[child6] -> m1_serve 30 107 108
107 m1_serve_splitted_2[sandw17] -> _splitting_method_m1_serve_splitted_2 31
108 m1_serve_splitted_6[sandw17,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw17,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 32 33 34 35
109 serve[child7] -> m0_serve 36 110 111
110 m0_serve_splitted_1[sandw1] -> _splitting_method_m0_serve_splitted_1 37
111 m0_serve_splitted_5[sandw1,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw1,child7,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 38 39 40 41
112 serve[child8] -> m0_serve 42 113 114
113 m0_serve_splitted_1[sandw13] -> _splitting_method_m0_serve_splitted_1 43
114 m0_serve_splitted_5[sandw13,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw13,child8,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 44 45 46 47
115 serve[child9] -> m0_serve 48 116 117
116 m0_serve_splitted_1[sandw16] -> _splitting_method_m0_serve_splitted_1 49
117 m0_serve_splitted_5[sandw16,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw16,child9,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 50 51 52 53
118 serve[child10] -> m0_serve 54 119 120
119 m0_serve_splitted_1[sandw3] -> _splitting_method_m0_serve_splitted_1 55
120 m0_serve_splitted_5[sandw3,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw3,child10,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 56 57 58 59
121 serve[child11] -> m1_serve 60 122 123
122 m1_serve_splitted_2[sandw5] -> _splitting_method_m1_serve_splitted_2 61
123 m1_serve_splitted_6[sandw5,kitchen,kitchen,child11,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw5,child11,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 62 63 64 65
124 serve[child12] -> m1_serve 66 125 126
125 m1_serve_splitted_2[sandw9] -> _splitting_method_m1_serve_splitted_2 67
126 m1_serve_splitted_6[sandw9,kitchen,kitchen,child12,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw9,child12,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 68 69 70 71
127 serve[child13] -> m1_serve 72 128 129
128 m1_serve_splitted_2[sandw8] -> _splitting_method_m1_serve_splitted_2 73
129 m1_serve_splitted_6[sandw8,kitchen,kitchen,child13,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw8,child13,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 74 75 76 77
130 serve[child14] -> m1_serve 78 131 132
131 m1_serve_splitted_2[sandw6] -> _splitting_method_m1_serve_splitted_2 79
132 m1_serve_splitted_6[sandw6,kitchen,kitchen,child14,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw6,child14,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 80 81 82 83
133 serve[child15] -> m1_serve 84 134 135
134 m1_serve_splitted_2[sandw7] -> _splitting_method_m1_serve_splitted_2 85
135 m1_serve_splitted_6[sandw7,kitchen,kitchen,child15,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw7,child15,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 86 87 88 89
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.554688 MEMPEAK_KBS 924

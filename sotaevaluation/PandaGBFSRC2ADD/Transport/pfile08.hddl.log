pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/220/220.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/220/220.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.313ms
Contains 0.032ms
Restrict 0.061ms
MPrep 0.046ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [73] grounded tasks and [44] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [110] grounded tasks and [105] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 110 tasks, 105 methods.
Grounded PG:
Input was [73, 110], output was [73, 44].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 28 S 0 SC 0 SM 0 NSM 0 I 0 P 73 S 0 A 31 M 99
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/220/220.sas.
- State has 28 bits divided into 28 mutex groups.
- Domain contains 73 actions.
- Domain contains 104 tasks.
- Domain contains 99 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 99
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.82 seconds
- Visited list time 0.062923 seconds
- Visited list inserts 8780
- Visited list pruned 2481
- Visited list contains 6299
- Visited list hash collisions 2481
- Visited list used hash buckets 6299
- Generated 92588 search nodes
  Calculated heuristic for 38553 nodes
  One modifications 51993
  Effectless actions 2042
- including 51993 one modification actions
- including 0 one modification methods
- and       2042 progressions of effectless actions
- Generated 47015 nodes per second
- Final fringe contains 13650 nodes
- Status: Solved
- Found solution of length 75
- Total costs of actions: 34
==>
6 drive[truck_0,city_loc_0,city_loc_5]
101 pick_up[truck_0,city_loc_5,package_3,capacity_2,capacity_3]
112 drive[truck_0,city_loc_5,city_loc_0]
113 drive[truck_0,city_loc_0,city_loc_4]
123 drop[truck_0,city_loc_4,package_3,capacity_2,capacity_3]
135 drive[truck_0,city_loc_4,city_loc_0]
136 drive[truck_0,city_loc_0,city_loc_5]
232 pick_up[truck_0,city_loc_5,package_4,capacity_2,capacity_3]
242 drive[truck_0,city_loc_5,city_loc_0]
243 drive[truck_0,city_loc_0,city_loc_4]
253 drop[truck_0,city_loc_4,package_4,capacity_2,capacity_3]
257 drive[truck_0,city_loc_4,city_loc_1]
642 pick_up[truck_0,city_loc_1,package_2,capacity_2,capacity_3]
3828 drive[truck_0,city_loc_1,city_loc_4]
3829 drive[truck_0,city_loc_4,city_loc_0]
3830 drive[truck_0,city_loc_0,city_loc_5]
3831 drive[truck_0,city_loc_5,city_loc_3]
3839 drop[truck_0,city_loc_3,package_2,capacity_2,capacity_3]
91898 drive[truck_0,city_loc_3,city_loc_5]
91899 drive[truck_0,city_loc_5,city_loc_0]
91907 pick_up[truck_0,city_loc_0,package_5,capacity_2,capacity_3]
91913 drive[truck_0,city_loc_0,city_loc_5]
91950 drop[truck_0,city_loc_5,package_5,capacity_2,capacity_3]
92507 drive[truck_0,city_loc_5,city_loc_0]
92508 drive[truck_0,city_loc_0,city_loc_4]
92517 pick_up[truck_0,city_loc_4,package_1,capacity_2,capacity_3]
92528 drive[truck_0,city_loc_4,city_loc_0]
92529 drive[truck_0,city_loc_0,city_loc_5]
92538 drop[truck_0,city_loc_5,package_1,capacity_2,capacity_3]
92560 drive[truck_0,city_loc_5,city_loc_0]
92568 pick_up[truck_0,city_loc_0,package_0,capacity_2,capacity_3]
92575 drive[truck_0,city_loc_0,city_loc_4]
92576 drive[truck_0,city_loc_4,city_loc_1]
92586 drop[truck_0,city_loc_1,package_0,capacity_2,capacity_3]
root 0
92585 unload[truck_0,city_loc_1,package_0] -> m_unload_ordering_0 92586
92574 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 92575
92573 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 92574 92576
92567 load[truck_0,city_loc_0,package_0] -> m_load_ordering_0 92568
92559 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 92560
92558 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 92559 92567
92537 unload[truck_0,city_loc_5,package_1] -> m_unload_ordering_0 92538
92527 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 92528
92525 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 92527 92529
92516 load[truck_0,city_loc_4,package_1] -> m_load_ordering_0 92517
92506 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 92507
92136 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 92506 92508
92130 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 92136 92516
91949 unload[truck_0,city_loc_5,package_5] -> m_unload_ordering_0 91950
91912 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 91913
91906 load[truck_0,city_loc_0,package_5] -> m_load_ordering_0 91907
91897 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 91898
33187 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 91897 91899
31992 m_deliver_ordering_0_splitted_1[truck_0,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 33187 91906
3838 unload[truck_0,city_loc_3,package_2] -> m_unload_ordering_0 3839
3827 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 3828
1320 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 3827 3829
653 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 1320 3830
646 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 653 3831
641 load[truck_0,city_loc_1,package_2] -> m_load_ordering_0 642
256 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 257
255 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 256 641
252 unload[truck_0,city_loc_4,package_4] -> m_unload_ordering_0 253
241 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 242
239 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 241 243
231 load[truck_0,city_loc_5,package_4] -> m_load_ordering_0 232
134 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 135
132 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 134 136
124 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 132 231
122 unload[truck_0,city_loc_4,package_3] -> m_unload_ordering_0 123
111 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 112
109 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 111 113
100 load[truck_0,city_loc_5,package_3] -> m_load_ordering_0 101
5 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 6
2 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 5 100
0 __top[] -> <<<<<<__top_method;deliver[package_5,city_loc_5];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5>;deliver[package_4,city_loc_4];m_deliver_ordering_0;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package_3,city_loc_4];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9>;deliver[package_2,city_loc_3];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3,7,8,9,10,11>;deliver[package_1,city_loc_5];m_deliver_ordering_0;12;0,1,2,3,4,5,6,7,8,9,10,11,-1,-2,-3,13>;deliver[package_0,city_loc_1];m_deliver_ordering_0;15;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,-1,-2,-3> 2 109 122 124 239 252 255 646 3838 31992 91912 91949 92130 92525 92537 92558 92573 92585
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 1.12305 MEMPEAK_KBS 3764

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/212/212.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/212/212.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.409ms
Contains 0.051ms
Restrict 0.064ms
MPrep 0.06ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [80] grounded tasks and [46] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [124] grounded tasks and [110] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 124 tasks, 110 methods.
Grounded PG:
Input was [80, 124], output was [80, 46].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 31 S 0 SC 0 SM 0 NSM 0 I 0 P 80 S 0 A 36 M 102
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/212/212.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 80 actions.
- Domain contains 116 tasks.
- Domain contains 102 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 114
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.095 seconds
- Visited list time 0.004246 seconds
- Visited list inserts 707
- Visited list pruned 137
- Visited list contains 570
- Visited list hash collisions 137
- Visited list used hash buckets 570
- Generated 7963 search nodes
  Calculated heuristic for 2830 nodes
  One modifications 4858
  Effectless actions 275
- including 4858 one modification actions
- including 0 one modification methods
- and       275 progressions of effectless actions
- Generated 29789 nodes per second
- Final fringe contains 1243 nodes
- Status: Solved
- Found solution of length 79
- Total costs of actions: 35
==>
4 drive[truck_0,city_loc_6,city_loc_0]
857 pick_up[truck_0,city_loc_0,package_3,capacity_2,capacity_3]
864 drive[truck_0,city_loc_0,city_loc_6]
865 drive[truck_0,city_loc_6,city_loc_3]
874 drop[truck_0,city_loc_3,package_3,capacity_2,capacity_3]
880 drive[truck_0,city_loc_3,city_loc_6]
886 pick_up[truck_0,city_loc_6,package_0,capacity_2,capacity_3]
890 drive[truck_0,city_loc_6,city_loc_3]
1116 drop[truck_0,city_loc_3,package_0,capacity_2,capacity_3]
3056 drive[truck_0,city_loc_3,city_loc_6]
3062 pick_up[truck_0,city_loc_6,package_5,capacity_2,capacity_3]
3066 drive[truck_0,city_loc_6,city_loc_0]
3201 drop[truck_0,city_loc_0,package_5,capacity_2,capacity_3]
5452 drive[truck_0,city_loc_0,city_loc_6]
5453 drive[truck_0,city_loc_6,city_loc_3]
5461 pick_up[truck_0,city_loc_3,package_1,capacity_2,capacity_3]
5466 drive[truck_0,city_loc_3,city_loc_6]
5474 drop[truck_0,city_loc_6,package_1,capacity_2,capacity_3]
5478 drive[truck_0,city_loc_6,city_loc_3]
5583 pick_up[truck_0,city_loc_3,package_4,capacity_2,capacity_3]
5588 drive[truck_0,city_loc_3,city_loc_6]
5596 drop[truck_0,city_loc_6,package_4,capacity_2,capacity_3]
5600 drive[truck_0,city_loc_6,city_loc_6]
5610 pick_up[truck_0,city_loc_6,package_6,capacity_2,capacity_3]
5613 drive[truck_0,city_loc_6,city_loc_3]
5686 drop[truck_0,city_loc_3,package_6,capacity_2,capacity_3]
7918 drive[truck_0,city_loc_3,city_loc_6]
7919 drive[truck_0,city_loc_6,city_loc_0]
7925 pick_up[truck_0,city_loc_0,package_2,capacity_2,capacity_3]
7930 drive[truck_0,city_loc_0,city_loc_6]
7939 drop[truck_0,city_loc_6,package_2,capacity_2,capacity_3]
7943 drive[truck_0,city_loc_6,city_loc_0]
7948 pick_up[truck_0,city_loc_0,package_7,capacity_2,capacity_3]
7952 drive[truck_0,city_loc_0,city_loc_6]
7961 drop[truck_0,city_loc_6,package_7,capacity_2,capacity_3]
root 0
7960 unload[truck_0,city_loc_6,package_7] -> m_unload_ordering_0 7961
7951 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 7952
7947 load[truck_0,city_loc_0,package_7] -> m_load_ordering_0 7948
7942 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 7943
7941 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 7942 7947
7938 unload[truck_0,city_loc_6,package_2] -> m_unload_ordering_0 7939
7929 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 7930
7924 load[truck_0,city_loc_0,package_2] -> m_load_ordering_0 7925
7917 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 7918
6686 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 7917 7919
6683 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 6686 7924
5685 unload[truck_0,city_loc_3,package_6] -> m_unload_ordering_0 5686
5612 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 5613
5609 load[truck_0,city_loc_6,package_6] -> m_load_ordering_0 5610
5599 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 5600
5598 m_deliver_ordering_0_splitted_1[truck_0,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 5599 5609
5595 unload[truck_0,city_loc_6,package_4] -> m_unload_ordering_0 5596
5587 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 5588
5582 load[truck_0,city_loc_3,package_4] -> m_load_ordering_0 5583
5477 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 5478
5476 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 5477 5582
5473 unload[truck_0,city_loc_6,package_1] -> m_unload_ordering_0 5474
5465 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 5466
5460 load[truck_0,city_loc_3,package_1] -> m_load_ordering_0 5461
5451 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 5452
4042 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 5451 5453
4039 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 4042 5460
3200 unload[truck_0,city_loc_0,package_5] -> m_unload_ordering_0 3201
3065 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 3066
3061 load[truck_0,city_loc_6,package_5] -> m_load_ordering_0 3062
3055 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 3056
3052 m_deliver_ordering_0_splitted_1[truck_0,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 3055 3061
1115 unload[truck_0,city_loc_3,package_0] -> m_unload_ordering_0 1116
889 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 890
885 load[truck_0,city_loc_6,package_0] -> m_load_ordering_0 886
879 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 880
876 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 879 885
873 unload[truck_0,city_loc_3,package_3] -> m_unload_ordering_0 874
863 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 864
861 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 863 865
856 load[truck_0,city_loc_0,package_3] -> m_load_ordering_0 857
3 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 4
1 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 3 856
0 __top[] -> <<<<<<<<__top_method;deliver[package_7,city_loc_6];m_deliver_ordering_0;7;0,1,2,3,4,5,6,-1,-2,-3>;deliver[package_6,city_loc_3];m_deliver_ordering_0;5;0,1,2,3,4,-1,-2,-3,6,7,8,9>;deliver[package_5,city_loc_0];m_deliver_ordering_0;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11>;deliver[package_4,city_loc_6];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3,7,8,9,10,11,12,13>;deliver[package_3,city_loc_3];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15>;deliver[package_2,city_loc_6];m_deliver_ordering_0;14;0,1,2,3,4,5,6,7,8,9,10,11,12,13,-1,-2,-3,15,16,17>;deliver[package_1,city_loc_6];m_deliver_ordering_0;7;0,1,2,3,4,5,6,-1,-2,-3,8,9,10,11,12,13,14,15,16,17,18,19>;deliver[package_0,city_loc_3];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21> 1 861 873 876 889 1115 3052 3065 3200 4039 5465 5473 5476 5587 5595 5598 5612 5685 6683 7929 7938 7941 7951 7960
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.438477 MEMPEAK_KBS 932

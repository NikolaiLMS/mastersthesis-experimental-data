pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/250/250.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/250/250.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.743ms
Contains 0.116ms
Restrict 0.111ms
MPrep 0.102ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [230] grounded tasks and [107] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [378] grounded tasks and [356] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 378 tasks, 356 methods.
Grounded PG:
Input was [230, 378], output was [230, 107].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 88 S 0 SC 0 SM 0 NSM 0 I 0 P 230 S 0 A 133 M 341
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/250/250.sas.
- State has 88 bits divided into 88 mutex groups.
- Domain contains 230 actions.
- Domain contains 363 tasks.
- Domain contains 341 methods.
- The initial state contains 21 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 339
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.032 seconds
- Visited list time 0.001334 seconds
- Visited list inserts 157
- Visited list pruned 15
- Visited list contains 142
- Visited list hash collisions 15
- Visited list used hash buckets 142
- Generated 878 search nodes
  Calculated heuristic for 641 nodes
  One modifications 208
  Effectless actions 29
- including 208 one modification actions
- including 0 one modification methods
- and       29 progressions of effectless actions
- Generated 20031 nodes per second
- Final fringe contains 178 nodes
- Status: Solved
- Found solution of length 145
- Total costs of actions: 72
==>
7 drive[truck_3,city_loc_4,city_loc_6]
42 pick_up[truck_3,city_loc_6,package_12,capacity_1,capacity_2]
51 drive[truck_3,city_loc_6,city_loc_4]
52 drive[truck_3,city_loc_4,city_loc_2]
61 drop[truck_3,city_loc_2,package_12,capacity_1,capacity_2]
70 noop[truck_3,city_loc_2]
75 pick_up[truck_3,city_loc_2,package_1,capacity_1,capacity_2]
81 drive[truck_3,city_loc_2,city_loc_0]
82 drive[truck_3,city_loc_0,city_loc_5]
100 drop[truck_3,city_loc_5,package_1,capacity_1,capacity_2]
101 noop[truck_1,city_loc_3]
196 pick_up[truck_1,city_loc_3,package_5,capacity_1,capacity_2]
197 noop[truck_1,city_loc_3]
199 drop[truck_1,city_loc_3,package_5,capacity_1,capacity_2]
214 drive[truck_2,city_loc_9,city_loc_7]
221 pick_up[truck_2,city_loc_7,package_13,capacity_1,capacity_2]
228 drive[truck_2,city_loc_7,city_loc_0]
229 drive[truck_2,city_loc_0,city_loc_5]
235 drop[truck_2,city_loc_5,package_13,capacity_1,capacity_2]
256 drive[truck_0,city_loc_8,city_loc_4]
257 drive[truck_0,city_loc_4,city_loc_6]
265 pick_up[truck_0,city_loc_6,package_8,capacity_1,capacity_2]
271 drive[truck_0,city_loc_6,city_loc_4]
272 drive[truck_0,city_loc_4,city_loc_8]
283 drop[truck_0,city_loc_8,package_8,capacity_1,capacity_2]
284 noop[truck_1,city_loc_3]
287 pick_up[truck_1,city_loc_3,package_4,capacity_1,capacity_2]
288 noop[truck_1,city_loc_3]
290 drop[truck_1,city_loc_3,package_4,capacity_1,capacity_2]
305 drive[truck_0,city_loc_8,city_loc_4]
306 drive[truck_0,city_loc_4,city_loc_2]
314 pick_up[truck_0,city_loc_2,package_0,capacity_1,capacity_2]
321 drive[truck_0,city_loc_2,city_loc_4]
322 drive[truck_0,city_loc_4,city_loc_1]
340 drop[truck_0,city_loc_1,package_0,capacity_1,capacity_2]
341 noop[truck_1,city_loc_3]
651 pick_up[truck_1,city_loc_3,package_9,capacity_1,capacity_2]
652 noop[truck_1,city_loc_3]
655 drop[truck_1,city_loc_3,package_9,capacity_1,capacity_2]
656 noop[truck_1,city_loc_3]
659 pick_up[truck_1,city_loc_3,package_3,capacity_1,capacity_2]
660 noop[truck_1,city_loc_3]
662 drop[truck_1,city_loc_3,package_3,capacity_1,capacity_2]
663 noop[truck_1,city_loc_3]
667 pick_up[truck_1,city_loc_3,package_10,capacity_1,capacity_2]
668 noop[truck_1,city_loc_3]
671 drop[truck_1,city_loc_3,package_10,capacity_1,capacity_2]
684 drive[truck_0,city_loc_1,city_loc_4]
685 drive[truck_0,city_loc_4,city_loc_6]
692 pick_up[truck_0,city_loc_6,package_11,capacity_1,capacity_2]
715 drive[truck_0,city_loc_6,city_loc_4]
716 drive[truck_0,city_loc_4,city_loc_2]
717 drive[truck_0,city_loc_2,city_loc_0]
718 drive[truck_0,city_loc_0,city_loc_7]
728 drop[truck_0,city_loc_7,package_11,capacity_1,capacity_2]
729 noop[truck_1,city_loc_3]
733 pick_up[truck_1,city_loc_3,package_2,capacity_1,capacity_2]
734 noop[truck_1,city_loc_3]
736 drop[truck_1,city_loc_3,package_2,capacity_1,capacity_2]
829 drive[truck_3,city_loc_5,city_loc_0]
830 drive[truck_3,city_loc_0,city_loc_2]
831 drive[truck_3,city_loc_2,city_loc_4]
832 drive[truck_3,city_loc_4,city_loc_8]
841 pick_up[truck_3,city_loc_8,package_7,capacity_1,capacity_2]
858 drive[truck_3,city_loc_8,city_loc_4]
859 drive[truck_3,city_loc_4,city_loc_2]
860 drive[truck_3,city_loc_2,city_loc_0]
868 drop[truck_3,city_loc_0,package_7,capacity_1,capacity_2]
869 noop[truck_1,city_loc_3]
872 pick_up[truck_1,city_loc_3,package_6,capacity_1,capacity_2]
873 noop[truck_1,city_loc_3]
875 drop[truck_1,city_loc_3,package_6,capacity_1,capacity_2]
root 0
874 unload[truck_1,city_loc_3,package_6] -> m_unload_ordering_0 875
871 load[truck_1,city_loc_3,package_6] -> m_load_ordering_0 872
867 unload[truck_3,city_loc_0,package_7] -> m_unload_ordering_0 868
857 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 858
853 get_to[truck_3,city_loc_2] -> m_drive_to_via_ordering_0 857 859
848 get_to[truck_3,city_loc_0] -> m_drive_to_via_ordering_0 853 860
840 load[truck_3,city_loc_8,package_7] -> m_load_ordering_0 841
828 get_to[truck_3,city_loc_0] -> m_drive_to_ordering_0 829
796 get_to[truck_3,city_loc_2] -> m_drive_to_via_ordering_0 828 830
779 get_to[truck_3,city_loc_4] -> m_drive_to_via_ordering_0 796 831
755 get_to[truck_3,city_loc_8] -> m_drive_to_via_ordering_0 779 832
742 m_deliver_ordering_0_splitted_1[truck_3,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 755 840
739 deliver[package_7,city_loc_0] -> m_deliver_ordering_0 742 848 867
735 unload[truck_1,city_loc_3,package_2] -> m_unload_ordering_0 736
732 load[truck_1,city_loc_3,package_2] -> m_load_ordering_0 733
727 unload[truck_0,city_loc_7,package_11] -> m_unload_ordering_0 728
714 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 715
710 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 714 716
705 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 710 717
697 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 705 718
691 load[truck_0,city_loc_6,package_11] -> m_load_ordering_0 692
683 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 684
679 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 683 685
676 m_deliver_ordering_0_splitted_1[truck_0,package_11] -> _splitting_method_m_deliver_ordering_0_splitted_1 679 691
673 deliver[package_11,city_loc_7] -> m_deliver_ordering_0 676 697 727
670 unload[truck_1,city_loc_3,package_10] -> m_unload_ordering_0 671
666 load[truck_1,city_loc_3,package_10] -> m_load_ordering_0 667
661 unload[truck_1,city_loc_3,package_3] -> m_unload_ordering_0 662
658 load[truck_1,city_loc_3,package_3] -> m_load_ordering_0 659
654 unload[truck_1,city_loc_3,package_9] -> m_unload_ordering_0 655
650 load[truck_1,city_loc_3,package_9] -> m_load_ordering_0 651
339 unload[truck_0,city_loc_1,package_0] -> m_unload_ordering_0 340
320 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 321
318 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 320 322
313 load[truck_0,city_loc_2,package_0] -> m_load_ordering_0 314
304 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 305
301 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 304 306
296 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 301 313
293 deliver[package_0,city_loc_1] -> m_deliver_ordering_0 296 318 339
289 unload[truck_1,city_loc_3,package_4] -> m_unload_ordering_0 290
286 load[truck_1,city_loc_3,package_4] -> m_load_ordering_0 287
282 unload[truck_0,city_loc_8,package_8] -> m_unload_ordering_0 283
270 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 271
269 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 270 272
264 load[truck_0,city_loc_6,package_8] -> m_load_ordering_0 265
255 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 256
244 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 255 257
241 m_deliver_ordering_0_splitted_1[truck_0,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 244 264
238 deliver[package_8,city_loc_8] -> m_deliver_ordering_0 241 269 282
234 unload[truck_2,city_loc_5,package_13] -> m_unload_ordering_0 235
227 get_to[truck_2,city_loc_0] -> m_drive_to_ordering_0 228
224 get_to[truck_2,city_loc_5] -> m_drive_to_via_ordering_0 227 229
220 load[truck_2,city_loc_7,package_13] -> m_load_ordering_0 221
213 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 214
212 m_deliver_ordering_0_splitted_1[truck_2,package_13] -> _splitting_method_m_deliver_ordering_0_splitted_1 213 220
203 deliver[package_13,city_loc_5] -> m_deliver_ordering_0 212 224 234
198 unload[truck_1,city_loc_3,package_5] -> m_unload_ordering_0 199
195 load[truck_1,city_loc_3,package_5] -> m_load_ordering_0 196
99 unload[truck_3,city_loc_5,package_1] -> m_unload_ordering_0 100
80 get_to[truck_3,city_loc_0] -> m_drive_to_ordering_0 81
78 get_to[truck_3,city_loc_5] -> m_drive_to_via_ordering_0 80 82
74 load[truck_3,city_loc_2,package_1] -> m_load_ordering_0 75
69 get_to[truck_3,city_loc_2] -> m_i_am_there_ordering_0 70
66 m_deliver_ordering_0_splitted_1[truck_3,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 69 74
64 deliver[package_1,city_loc_5] -> m_deliver_ordering_0 66 78 99
60 unload[truck_3,city_loc_2,package_12] -> m_unload_ordering_0 61
50 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 51
47 get_to[truck_3,city_loc_2] -> m_drive_to_via_ordering_0 50 52
41 load[truck_3,city_loc_6,package_12] -> m_load_ordering_0 42
6 get_to[truck_3,city_loc_6] -> m_drive_to_ordering_0 7
5 m_deliver_ordering_0_splitted_1[truck_3,package_12] -> _splitting_method_m_deliver_ordering_0_splitted_1 6 41
1 deliver[package_12,city_loc_2] -> m_deliver_ordering_0 5 47 60
0 __top[] -> <<<<<<<<<<<<<<<<__top_method;deliver[package_10,city_loc_3];m_deliver_ordering_0;9;0,1,2,3,4,5,6,7,8,-1,-2,-3,10,11,12,13>;m_deliver_ordering_0_splitted_1[truck_1,package_10];_splitting_method_m_deliver_ordering_0_splitted_1;9;0,1,2,3,4,5,6,7,8,-1,-2,10,11,12,13,14,15>;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;11;0,1,2,3,4,5,6,7,8,9,10,-1,12,13,14,15,16>;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;9;0,1,2,3,4,5,6,7,8,-1,10,11,12,13,14,15,16>;deliver[package_9,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;7;0,1,2,3,4,5,6,-1,-2,-3,8,9,10,11,12,13,14,15,16>;m_deliver_ordering_0_splitted_1[truck_1,package_9];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;7;0,1,2,3,4,5,6,-1,-2,8,9,10,11,12,13,14,15,16,17,18>;deliver[package_6,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;19;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,-1,-2,-3>;m_deliver_ordering_0_splitted_1[truck_1,package_6];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;19;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,-1,-2,20,21>;deliver[package_5,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22>;m_deliver_ordering_0_splitted_1[truck_1,package_5];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;2;0,1,-1,-2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24>;deliver[package_4,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;8;0,1,2,3,4,5,6,7,-1,-2,-3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25>;m_deliver_ordering_0_splitted_1[truck_1,package_4];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;8;0,1,2,3,4,5,6,7,-1,-2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27>;deliver[package_3,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;17;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,-1,-2,-3,18,19,20,21,22,23,24,25,26,27,28>;m_deliver_ordering_0_splitted_1[truck_1,package_3];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;17;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,-1,-2,18,19,20,21,22,23,24,25,26,27,28,29,30>;deliver[package_2,city_loc_3];<m_deliver_ordering_0;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;1;0,-1,2>;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-2,-3,27,28,29,30,31>;m_deliver_ordering_0_splitted_1[truck_1,package_2];<_splitting_method_m_deliver_ordering_0_splitted_1;get_to[truck_1,city_loc_3];m_i_am_there_ordering_0;0;-1,1>;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-2,27,28,29,30,31,32,33> 1 64 101 195 197 198 203 238 284 286 288 289 293 341 650 652 654 656 658 660 661 663 666 668 670 673 729 732 734 735 739 869 871 873 874
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.392578 MEMPEAK_KBS 932

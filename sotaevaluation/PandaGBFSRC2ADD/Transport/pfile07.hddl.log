pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/213/213.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/213/213.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.312ms
Contains 0.04ms
Restrict 0.05ms
MPrep 0.042ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [49] grounded tasks and [36] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [85] grounded tasks and [76] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 85 tasks, 76 methods.
Grounded PG:
Input was [49, 85], output was [49, 36].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 26 S 0 SC 0 SM 0 NSM 0 I 0 P 49 S 0 A 30 M 70
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/213/213.sas.
- State has 26 bits divided into 26 mutex groups.
- Domain contains 49 actions.
- Domain contains 79 tasks.
- Domain contains 70 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 75
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.021 seconds
- Visited list time 0.0025 seconds
- Visited list inserts 381
- Visited list pruned 17
- Visited list contains 364
- Visited list hash collisions 17
- Visited list used hash buckets 364
- Generated 3962 search nodes
  Calculated heuristic for 1708 nodes
  One modifications 2153
  Effectless actions 101
- including 2153 one modification actions
- including 0 one modification methods
- and       101 progressions of effectless actions
- Generated 81333 nodes per second
- Final fringe contains 557 nodes
- Status: Solved
- Found solution of length 71
- Total costs of actions: 32
==>
9 drive[truck_0,city_loc_3,city_loc_4]
10 drive[truck_0,city_loc_4,city_loc_0]
18 pick_up[truck_0,city_loc_0,package_0,capacity_1,capacity_2]
21 drive[truck_0,city_loc_0,city_loc_2]
208 drop[truck_0,city_loc_2,package_0,capacity_1,capacity_2]
3826 drive[truck_0,city_loc_2,city_loc_0]
3827 drive[truck_0,city_loc_0,city_loc_4]
3828 drive[truck_0,city_loc_4,city_loc_1]
3833 pick_up[truck_0,city_loc_1,package_5,capacity_1,capacity_2]
3840 drive[truck_0,city_loc_1,city_loc_4]
3841 drive[truck_0,city_loc_4,city_loc_3]
3849 drop[truck_0,city_loc_3,package_5,capacity_1,capacity_2]
3854 noop[truck_0,city_loc_3]
3858 pick_up[truck_0,city_loc_3,package_1,capacity_1,capacity_2]
3868 drive[truck_0,city_loc_3,city_loc_4]
3869 drive[truck_0,city_loc_4,city_loc_0]
3870 drive[truck_0,city_loc_0,city_loc_2]
3879 drop[truck_0,city_loc_2,package_1,capacity_1,capacity_2]
3884 noop[truck_0,city_loc_2]
3887 pick_up[truck_0,city_loc_2,package_2,capacity_1,capacity_2]
3898 drive[truck_0,city_loc_2,city_loc_0]
3899 drive[truck_0,city_loc_0,city_loc_4]
3904 drop[truck_0,city_loc_4,package_2,capacity_1,capacity_2]
3909 drive[truck_0,city_loc_4,city_loc_1]
3922 pick_up[truck_0,city_loc_1,package_3,capacity_1,capacity_2]
3929 drive[truck_0,city_loc_1,city_loc_4]
3930 drive[truck_0,city_loc_4,city_loc_3]
3938 drop[truck_0,city_loc_3,package_3,capacity_1,capacity_2]
3942 drive[truck_0,city_loc_3,city_loc_4]
3951 pick_up[truck_0,city_loc_4,package_4,capacity_1,capacity_2]
3953 drive[truck_0,city_loc_4,city_loc_0]
3959 drop[truck_0,city_loc_0,package_4,capacity_1,capacity_2]
root 0
3958 unload[truck_0,city_loc_0,package_4] -> m_unload_ordering_0 3959
3952 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 3953
3950 load[truck_0,city_loc_4,package_4] -> m_load_ordering_0 3951
3941 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 3942
3940 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 3941 3950
3937 unload[truck_0,city_loc_3,package_3] -> m_unload_ordering_0 3938
3928 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 3929
3926 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 3928 3930
3921 load[truck_0,city_loc_1,package_3] -> m_load_ordering_0 3922
3908 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 3909
3907 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 3908 3921
3903 unload[truck_0,city_loc_4,package_2] -> m_unload_ordering_0 3904
3897 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 3898
3893 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 3897 3899
3886 load[truck_0,city_loc_2,package_2] -> m_load_ordering_0 3887
3883 get_to[truck_0,city_loc_2] -> m_i_am_there_ordering_0 3884
3881 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 3883 3886
3878 unload[truck_0,city_loc_2,package_1] -> m_unload_ordering_0 3879
3867 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 3868
3865 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 3867 3869
3861 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 3865 3870
3857 load[truck_0,city_loc_3,package_1] -> m_load_ordering_0 3858
3853 get_to[truck_0,city_loc_3] -> m_i_am_there_ordering_0 3854
3851 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 3853 3857
3848 unload[truck_0,city_loc_3,package_5] -> m_unload_ordering_0 3849
3839 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 3840
3837 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 3839 3841
3832 load[truck_0,city_loc_1,package_5] -> m_load_ordering_0 3833
3825 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 3826
1634 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 3825 3827
1003 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 1634 3828
932 m_deliver_ordering_0_splitted_1[truck_0,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 1003 3832
207 unload[truck_0,city_loc_2,package_0] -> m_unload_ordering_0 208
20 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 21
17 load[truck_0,city_loc_0,package_0] -> m_load_ordering_0 18
8 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 9
6 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 8 10
1 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 6 17
0 __top[] -> <<<<<<__top_method;deliver[package_5,city_loc_3];m_deliver_ordering_0;1;0,-1,-2,-3,2,3,4,5>;deliver[package_4,city_loc_0];m_deliver_ordering_0;7;0,1,2,3,4,5,6,-1,-2,-3>;deliver[package_3,city_loc_3];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3,7,8,9>;deliver[package_2,city_loc_4];m_deliver_ordering_0;5;0,1,2,3,4,-1,-2,-3,6,7,8,9,10,11>;deliver[package_1,city_loc_2];m_deliver_ordering_0;4;0,1,2,3,-1,-2,-3,5,6,7,8,9,10,11,12,13>;deliver[package_0,city_loc_2];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> 1 20 207 932 3837 3848 3851 3861 3878 3881 3893 3903 3907 3926 3937 3940 3952 3958
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.146484 MEMPEAK_KBS 932

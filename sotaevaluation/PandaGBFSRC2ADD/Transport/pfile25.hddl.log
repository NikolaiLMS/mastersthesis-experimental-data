pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/229/229.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/229/229.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.016ms
Contains 0.154ms
Restrict 0.195ms
MPrep 0.118ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
 ---> Disabling potentially consistent extension checking for action:           3 (drop)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [600] grounded tasks and [209] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           4 (m_drive_to_via_ordering_0)
Returning from runGpg().
TDG done.
Calculated [933] grounded tasks and [949] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 933 tasks, 949 methods.
Grounded PG:
Input was [600, 933], output was [600, 209].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 168 S 0 SC 0 SM 0 NSM 0 I 0 P 600 S 0 A 333 M 949
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/229/229.sas.
- State has 168 bits divided into 168 mutex groups.
- Domain contains 600 actions.
- Domain contains 933 tasks.
- Domain contains 949 methods.
- The initial state contains 24 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 877
- The problem is cyclic
- Number of cyclic SCCs: 4
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.368 seconds
- Visited list time 0.004295 seconds
- Visited list inserts 458
- Visited list pruned 74
- Visited list contains 384
- Visited list hash collisions 74
- Visited list used hash buckets 384
- Generated 3254 search nodes
  Calculated heuristic for 2286 nodes
  One modifications 895
  Effectless actions 73
- including 895 one modification actions
- including 0 one modification methods
- and       73 progressions of effectless actions
- Generated 6211 nodes per second
- Final fringe contains 788 nodes
- Status: Solved
- Found solution of length 207
- Total costs of actions: 87
==>
9 noop[truck_3,city_loc_13]
13 pick_up[truck_3,city_loc_13,package_11,capacity_1,capacity_2]
46 drive[truck_3,city_loc_13,city_loc_4]
47 drive[truck_3,city_loc_4,city_loc_2]
48 drive[truck_3,city_loc_2,city_loc_3]
57 drop[truck_3,city_loc_3,package_11,capacity_1,capacity_2]
206 drive[truck_2,city_loc_7,city_loc_3]
207 drive[truck_2,city_loc_3,city_loc_2]
215 pick_up[truck_2,city_loc_2,package_6,capacity_1,capacity_2]
224 drive[truck_2,city_loc_2,city_loc_3]
225 drive[truck_2,city_loc_3,city_loc_5]
235 drop[truck_2,city_loc_5,package_6,capacity_1,capacity_2]
247 drive[truck_1,city_loc_12,city_loc_14]
254 pick_up[truck_1,city_loc_14,package_2,capacity_1,capacity_2]
259 drive[truck_1,city_loc_14,city_loc_11]
285 drop[truck_1,city_loc_11,package_2,capacity_1,capacity_2]
1097 noop[truck_0,city_loc_0]
1100 pick_up[truck_0,city_loc_0,package_15,capacity_1,capacity_2]
1104 drive[truck_0,city_loc_0,city_loc_11]
1111 drop[truck_0,city_loc_11,package_15,capacity_1,capacity_2]
2413 drive[truck_0,city_loc_11,city_loc_3]
2420 pick_up[truck_0,city_loc_3,package_10,capacity_1,capacity_2]
2425 drive[truck_0,city_loc_3,city_loc_5]
2432 drop[truck_0,city_loc_5,package_10,capacity_1,capacity_2]
2499 drive[truck_0,city_loc_5,city_loc_12]
2505 pick_up[truck_0,city_loc_12,package_7,capacity_1,capacity_2]
2514 drive[truck_0,city_loc_12,city_loc_14]
2515 drive[truck_0,city_loc_14,city_loc_9]
2525 drop[truck_0,city_loc_9,package_7,capacity_1,capacity_2]
2535 noop[truck_0,city_loc_9]
2539 pick_up[truck_0,city_loc_9,package_3,capacity_1,capacity_2]
2554 drive[truck_0,city_loc_9,city_loc_14]
2555 drive[truck_0,city_loc_14,city_loc_11]
2556 drive[truck_0,city_loc_11,city_loc_0]
2565 drop[truck_0,city_loc_0,package_3,capacity_1,capacity_2]
2577 noop[truck_3,city_loc_3]
2583 pick_up[truck_3,city_loc_3,package_14,capacity_1,capacity_2]
2606 drive[truck_3,city_loc_3,city_loc_7]
2607 drive[truck_3,city_loc_7,city_loc_1]
2608 drive[truck_3,city_loc_1,city_loc_10]
2614 drop[truck_3,city_loc_10,package_14,capacity_1,capacity_2]
2624 noop[truck_3,city_loc_10]
2628 pick_up[truck_3,city_loc_10,package_4,capacity_1,capacity_2]
2643 drive[truck_3,city_loc_10,city_loc_6]
2644 drive[truck_3,city_loc_6,city_loc_4]
2652 drop[truck_3,city_loc_4,package_4,capacity_1,capacity_2]
2676 drive[truck_3,city_loc_4,city_loc_1]
2677 drive[truck_3,city_loc_1,city_loc_7]
2683 pick_up[truck_3,city_loc_7,package_9,capacity_1,capacity_2]
2710 drive[truck_3,city_loc_7,city_loc_1]
2711 drive[truck_3,city_loc_1,city_loc_4]
2712 drive[truck_3,city_loc_4,city_loc_6]
2720 drop[truck_3,city_loc_6,package_9,capacity_1,capacity_2]
2731 noop[truck_2,city_loc_5]
2737 pick_up[truck_2,city_loc_5,package_13,capacity_1,capacity_2]
2745 drive[truck_2,city_loc_5,city_loc_3]
2746 drive[truck_2,city_loc_3,city_loc_2]
2755 drop[truck_2,city_loc_2,package_13,capacity_1,capacity_2]
2772 drive[truck_3,city_loc_6,city_loc_8]
2778 pick_up[truck_3,city_loc_8,package_0,capacity_1,capacity_2]
2809 drive[truck_3,city_loc_8,city_loc_14]
2810 drive[truck_3,city_loc_14,city_loc_11]
2811 drive[truck_3,city_loc_11,city_loc_3]
2820 drop[truck_3,city_loc_3,package_0,capacity_1,capacity_2]
2903 drive[truck_2,city_loc_2,city_loc_4]
2904 drive[truck_2,city_loc_4,city_loc_1]
2916 pick_up[truck_2,city_loc_1,package_5,capacity_1,capacity_2]
3111 drive[truck_2,city_loc_1,city_loc_7]
3112 drive[truck_2,city_loc_7,city_loc_3]
3113 drive[truck_2,city_loc_3,city_loc_11]
3114 drive[truck_2,city_loc_11,city_loc_0]
3120 drop[truck_2,city_loc_0,package_5,capacity_1,capacity_2]
3142 drive[truck_1,city_loc_11,city_loc_14]
3150 pick_up[truck_1,city_loc_14,package_8,capacity_1,capacity_2]
3160 drive[truck_1,city_loc_14,city_loc_12]
3161 drive[truck_1,city_loc_12,city_loc_5]
3167 drop[truck_1,city_loc_5,package_8,capacity_1,capacity_2]
3187 noop[truck_3,city_loc_3]
3193 pick_up[truck_3,city_loc_3,package_12,capacity_1,capacity_2]
3198 drive[truck_3,city_loc_3,city_loc_11]
3205 drop[truck_3,city_loc_11,package_12,capacity_1,capacity_2]
3221 drive[truck_1,city_loc_5,city_loc_9]
3226 pick_up[truck_1,city_loc_9,package_1,capacity_1,capacity_2]
3239 drive[truck_1,city_loc_9,city_loc_14]
3240 drive[truck_1,city_loc_14,city_loc_11]
3241 drive[truck_1,city_loc_11,city_loc_0]
3251 drop[truck_1,city_loc_0,package_1,capacity_1,capacity_2]
root 0
3250 unload[truck_1,city_loc_0,package_1] -> m_unload_ordering_0 3251
3238 get_to[truck_1,city_loc_14] -> m_drive_to_ordering_0 3239
3235 get_to[truck_1,city_loc_11] -> m_drive_to_via_ordering_0 3238 3240
3230 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 3235 3241
3225 load[truck_1,city_loc_9,package_1] -> m_load_ordering_0 3226
3220 get_to[truck_1,city_loc_9] -> m_drive_to_ordering_0 3221
3211 m_deliver_ordering_0_splitted_1[truck_1,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 3220 3225
3209 deliver[package_1,city_loc_0] -> m_deliver_ordering_0 3211 3230 3250
3204 unload[truck_3,city_loc_11,package_12] -> m_unload_ordering_0 3205
3197 get_to[truck_3,city_loc_11] -> m_drive_to_ordering_0 3198
3192 load[truck_3,city_loc_3,package_12] -> m_load_ordering_0 3193
3186 get_to[truck_3,city_loc_3] -> m_i_am_there_ordering_0 3187
3181 m_deliver_ordering_0_splitted_1[truck_3,package_12] -> _splitting_method_m_deliver_ordering_0_splitted_1 3186 3192
3176 deliver[package_12,city_loc_11] -> m_deliver_ordering_0 3181 3197 3204
3166 unload[truck_1,city_loc_5,package_8] -> m_unload_ordering_0 3167
3159 get_to[truck_1,city_loc_12] -> m_drive_to_ordering_0 3160
3157 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 3159 3161
3149 load[truck_1,city_loc_14,package_8] -> m_load_ordering_0 3150
3141 get_to[truck_1,city_loc_14] -> m_drive_to_ordering_0 3142
3138 m_deliver_ordering_0_splitted_1[truck_1,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 3141 3149
3125 deliver[package_8,city_loc_5] -> m_deliver_ordering_0 3138 3157 3166
3119 unload[truck_2,city_loc_0,package_5] -> m_unload_ordering_0 3120
3110 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 3111
2944 get_to[truck_2,city_loc_3] -> m_drive_to_via_ordering_0 3110 3112
2925 get_to[truck_2,city_loc_11] -> m_drive_to_via_ordering_0 2944 3113
2919 get_to[truck_2,city_loc_0] -> m_drive_to_via_ordering_0 2925 3114
2915 load[truck_2,city_loc_1,package_5] -> m_load_ordering_0 2916
2902 get_to[truck_2,city_loc_4] -> m_drive_to_ordering_0 2903
2857 get_to[truck_2,city_loc_1] -> m_drive_to_via_ordering_0 2902 2904
2852 m_deliver_ordering_0_splitted_1[truck_2,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 2857 2915
2825 deliver[package_5,city_loc_0] -> m_deliver_ordering_0 2852 2919 3119
2819 unload[truck_3,city_loc_3,package_0] -> m_unload_ordering_0 2820
2808 get_to[truck_3,city_loc_14] -> m_drive_to_ordering_0 2809
2794 get_to[truck_3,city_loc_11] -> m_drive_to_via_ordering_0 2808 2810
2784 get_to[truck_3,city_loc_3] -> m_drive_to_via_ordering_0 2794 2811
2777 load[truck_3,city_loc_8,package_0] -> m_load_ordering_0 2778
2771 get_to[truck_3,city_loc_8] -> m_drive_to_ordering_0 2772
2768 m_deliver_ordering_0_splitted_1[truck_3,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 2771 2777
2757 deliver[package_0,city_loc_3] -> m_deliver_ordering_0 2768 2784 2819
2754 unload[truck_2,city_loc_2,package_13] -> m_unload_ordering_0 2755
2744 get_to[truck_2,city_loc_3] -> m_drive_to_ordering_0 2745
2742 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 2744 2746
2736 load[truck_2,city_loc_5,package_13] -> m_load_ordering_0 2737
2730 get_to[truck_2,city_loc_5] -> m_i_am_there_ordering_0 2731
2726 m_deliver_ordering_0_splitted_1[truck_2,package_13] -> _splitting_method_m_deliver_ordering_0_splitted_1 2730 2736
2721 deliver[package_13,city_loc_2] -> m_deliver_ordering_0 2726 2742 2754
2719 unload[truck_3,city_loc_6,package_9] -> m_unload_ordering_0 2720
2709 get_to[truck_3,city_loc_1] -> m_drive_to_ordering_0 2710
2705 get_to[truck_3,city_loc_4] -> m_drive_to_via_ordering_0 2709 2711
2690 get_to[truck_3,city_loc_6] -> m_drive_to_via_ordering_0 2705 2712
2682 load[truck_3,city_loc_7,package_9] -> m_load_ordering_0 2683
2675 get_to[truck_3,city_loc_1] -> m_drive_to_ordering_0 2676
2663 get_to[truck_3,city_loc_7] -> m_drive_to_via_ordering_0 2675 2677
2658 m_deliver_ordering_0_splitted_1[truck_3,package_9] -> _splitting_method_m_deliver_ordering_0_splitted_1 2663 2682
2653 deliver[package_9,city_loc_6] -> m_deliver_ordering_0 2658 2690 2719
2651 unload[truck_3,city_loc_4,package_4] -> m_unload_ordering_0 2652
2642 get_to[truck_3,city_loc_6] -> m_drive_to_ordering_0 2643
2637 get_to[truck_3,city_loc_4] -> m_drive_to_via_ordering_0 2642 2644
2627 load[truck_3,city_loc_10,package_4] -> m_load_ordering_0 2628
2623 get_to[truck_3,city_loc_10] -> m_i_am_there_ordering_0 2624
2620 m_deliver_ordering_0_splitted_1[truck_3,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 2623 2627
2617 deliver[package_4,city_loc_4] -> m_deliver_ordering_0 2620 2637 2651
2613 unload[truck_3,city_loc_10,package_14] -> m_unload_ordering_0 2614
2605 get_to[truck_3,city_loc_7] -> m_drive_to_ordering_0 2606
2595 get_to[truck_3,city_loc_1] -> m_drive_to_via_ordering_0 2605 2607
2589 get_to[truck_3,city_loc_10] -> m_drive_to_via_ordering_0 2595 2608
2582 load[truck_3,city_loc_3,package_14] -> m_load_ordering_0 2583
2576 get_to[truck_3,city_loc_3] -> m_i_am_there_ordering_0 2577
2570 m_deliver_ordering_0_splitted_1[truck_3,package_14] -> _splitting_method_m_deliver_ordering_0_splitted_1 2576 2582
2566 deliver[package_14,city_loc_10] -> m_deliver_ordering_0 2570 2589 2613
2564 unload[truck_0,city_loc_0,package_3] -> m_unload_ordering_0 2565
2553 get_to[truck_0,city_loc_14] -> m_drive_to_ordering_0 2554
2548 get_to[truck_0,city_loc_11] -> m_drive_to_via_ordering_0 2553 2555
2543 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 2548 2556
2538 load[truck_0,city_loc_9,package_3] -> m_load_ordering_0 2539
2534 get_to[truck_0,city_loc_9] -> m_i_am_there_ordering_0 2535
2531 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 2534 2538
2529 deliver[package_3,city_loc_0] -> m_deliver_ordering_0 2531 2543 2564
2524 unload[truck_0,city_loc_9,package_7] -> m_unload_ordering_0 2525
2513 get_to[truck_0,city_loc_14] -> m_drive_to_ordering_0 2514
2510 get_to[truck_0,city_loc_9] -> m_drive_to_via_ordering_0 2513 2515
2504 load[truck_0,city_loc_12,package_7] -> m_load_ordering_0 2505
2498 get_to[truck_0,city_loc_12] -> m_drive_to_ordering_0 2499
2497 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 2498 2504
2451 deliver[package_7,city_loc_9] -> m_deliver_ordering_0 2497 2510 2524
2431 unload[truck_0,city_loc_5,package_10] -> m_unload_ordering_0 2432
2424 get_to[truck_0,city_loc_5] -> m_drive_to_ordering_0 2425
2419 load[truck_0,city_loc_3,package_10] -> m_load_ordering_0 2420
2412 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 2413
2209 m_deliver_ordering_0_splitted_1[truck_0,package_10] -> _splitting_method_m_deliver_ordering_0_splitted_1 2412 2419
1113 deliver[package_10,city_loc_5] -> m_deliver_ordering_0 2209 2424 2431
1110 unload[truck_0,city_loc_11,package_15] -> m_unload_ordering_0 1111
1103 get_to[truck_0,city_loc_11] -> m_drive_to_ordering_0 1104
1099 load[truck_0,city_loc_0,package_15] -> m_load_ordering_0 1100
1096 get_to[truck_0,city_loc_0] -> m_i_am_there_ordering_0 1097
1094 m_deliver_ordering_0_splitted_1[truck_0,package_15] -> _splitting_method_m_deliver_ordering_0_splitted_1 1096 1099
1092 deliver[package_15,city_loc_11] -> m_deliver_ordering_0 1094 1103 1110
284 unload[truck_1,city_loc_11,package_2] -> m_unload_ordering_0 285
258 get_to[truck_1,city_loc_11] -> m_drive_to_ordering_0 259
253 load[truck_1,city_loc_14,package_2] -> m_load_ordering_0 254
246 get_to[truck_1,city_loc_14] -> m_drive_to_ordering_0 247
242 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 246 253
239 deliver[package_2,city_loc_11] -> m_deliver_ordering_0 242 258 284
234 unload[truck_2,city_loc_5,package_6] -> m_unload_ordering_0 235
223 get_to[truck_2,city_loc_3] -> m_drive_to_ordering_0 224
220 get_to[truck_2,city_loc_5] -> m_drive_to_via_ordering_0 223 225
214 load[truck_2,city_loc_2,package_6] -> m_load_ordering_0 215
205 get_to[truck_2,city_loc_3] -> m_drive_to_ordering_0 206
87 get_to[truck_2,city_loc_2] -> m_drive_to_via_ordering_0 205 207
82 m_deliver_ordering_0_splitted_1[truck_2,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 87 214
59 deliver[package_6,city_loc_5] -> m_deliver_ordering_0 82 220 234
56 unload[truck_3,city_loc_3,package_11] -> m_unload_ordering_0 57
45 get_to[truck_3,city_loc_4] -> m_drive_to_ordering_0 46
27 get_to[truck_3,city_loc_2] -> m_drive_to_via_ordering_0 45 47
21 get_to[truck_3,city_loc_3] -> m_drive_to_via_ordering_0 27 48
12 load[truck_3,city_loc_13,package_11] -> m_load_ordering_0 13
8 get_to[truck_3,city_loc_13] -> m_i_am_there_ordering_0 9
6 m_deliver_ordering_0_splitted_1[truck_3,package_11] -> _splitting_method_m_deliver_ordering_0_splitted_1 8 12
3 deliver[package_11,city_loc_3] -> m_deliver_ordering_0 6 21 56
0 __top[] -> __top_method 3 59 239 1092 1113 2451 2529 2566 2617 2653 2721 2757 2825 3125 3176 3209
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.796875 MEMPEAK_KBS 932

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/621/621.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/621/621.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.083ms
Contains 0.12ms
Restrict 0.155ms
MPrep 0.134ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (Drop)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [262] grounded tasks and [113] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           9 (m10_do_load_truck)
Returning from runGpg().
TDG done.
Calculated [457] grounded tasks and [336] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 345 tasks, 265 methods.
Grounded PG:
Input was [193, 345], output was [193, 103].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
26 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 82 S 0 SC 0 SM 0 NSM 0 I 0 P 75 S 92 A 65 M 178
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/621/621.sas.
- State has 82 bits divided into 82 mutex groups.
- Domain contains 167 actions.
- Domain contains 232 tasks.
- Domain contains 178 methods.
- The initial state contains 36 set bits.
- The initial task is "__top[]".
- State-based goal contains 6 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 229
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (1 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.005 seconds
- Visited list time 0.00036 seconds
- Visited list inserts 72
- Visited list pruned 0
- Visited list contains 72
- Visited list hash collisions 0
- Visited list used hash buckets 72
- Generated 321 search nodes
  Calculated heuristic for 191 nodes
  One modifications 46
  Effectless actions 84
- including 46 one modification actions
- including 0 one modification methods
- and       84 progressions of effectless actions
- Generated 38200 nodes per second
- Final fringe contains 15 nodes
- Status: Solved
- Found solution of length 128
- Total costs of actions: 51
==>
24 __method_precondition_m9_do_lift_crate[crate7,depot0,hoist0,crate4]
27 __method_precondition_m7_do_get_truck[truck1,depot0]
34 Drive[truck1,distributor1,depot0]
36 __method_precondition_m4_do_clear[crate7,depot0]
37 nop[]
38 Lift[hoist0,crate7,crate4,depot0]
39 Load[hoist0,crate7,truck1,depot0]
40 Drive[truck1,depot0,depot0]
41 __method_precondition_m11_do_unload_truck[crate7,pallet0,depot0,truck1,hoist0]
57 __method_precondition_m5_do_clear[pallet0,depot0,crate0,hoist0]
68 __method_precondition_m5_do_clear[crate0,depot0,crate1,hoist0]
74 __method_precondition_m5_do_clear[crate1,depot0,crate4,hoist0]
89 __method_precondition_m4_do_clear[crate4,depot0]
90 nop[]
91 Lift[hoist0,crate4,crate1,depot0]
102 __method_precondition_m6_do_get_truck[truck1,depot0]
103 nop[]
104 Load[hoist0,crate4,truck1,depot0]
105 Lift[hoist0,crate1,crate0,depot0]
110 __method_precondition_m6_do_get_truck[truck1,depot0]
111 nop[]
112 Load[hoist0,crate1,truck1,depot0]
113 Lift[hoist0,crate0,pallet0,depot0]
118 __method_precondition_m6_do_get_truck[truck1,depot0]
119 nop[]
120 Load[hoist0,crate0,truck1,depot0]
121 Unload[hoist0,crate7,truck1,depot0]
122 Drop[hoist0,crate7,pallet0,depot0]
132 __method_precondition_m10_do_load_truck[crate6,crate5,distributor1,hoist2]
134 __method_precondition_m6_do_get_truck[truck0,distributor1]
135 nop[]
138 __method_precondition_m4_do_clear[crate6,distributor1]
139 nop[]
140 Lift[hoist2,crate6,crate5,distributor1]
141 Load[hoist2,crate6,truck0,distributor1]
142 Drive[truck0,distributor1,distributor0]
143 __method_precondition_m11_do_unload_truck[crate6,pallet1,distributor0,truck0,hoist1]
148 __method_precondition_m5_do_clear[pallet1,distributor0,crate2,hoist1]
149 __method_precondition_m4_do_clear[crate2,distributor0]
150 nop[]
151 Lift[hoist1,crate2,pallet1,distributor0]
155 __method_precondition_m6_do_get_truck[truck0,distributor0]
156 nop[]
157 Load[hoist1,crate2,truck0,distributor0]
158 Unload[hoist1,crate6,truck0,distributor0]
159 Drop[hoist1,crate6,pallet1,distributor0]
212 __method_precondition_m9_do_lift_crate[crate5,distributor1,hoist2,crate3]
221 __method_precondition_m7_do_get_truck[truck0,distributor1]
232 Drive[truck0,distributor0,distributor1]
235 __method_precondition_m4_do_clear[crate5,distributor1]
236 nop[]
237 Lift[hoist2,crate5,crate3,distributor1]
238 Load[hoist2,crate5,truck0,distributor1]
239 Drive[truck0,distributor1,distributor1]
240 __method_precondition_m11_do_unload_truck[crate5,pallet2,distributor1,truck0,hoist2]
245 __method_precondition_m5_do_clear[pallet2,distributor1,crate3,hoist2]
247 __method_precondition_m4_do_clear[crate3,distributor1]
248 nop[]
249 Lift[hoist2,crate3,pallet2,distributor1]
254 __method_precondition_m6_do_get_truck[truck0,distributor1]
255 nop[]
256 Load[hoist2,crate3,truck0,distributor1]
257 Unload[hoist2,crate5,truck0,distributor1]
258 Drop[hoist2,crate5,pallet2,distributor1]
263 __method_precondition_m2_do_put_on[crate4,truck1]
268 __method_precondition_m6_do_get_truck[truck1,depot0]
269 nop[]
272 __method_precondition_m4_do_clear[crate7,depot0]
273 nop[]
274 Unload[hoist0,crate4,truck1,depot0]
275 Drop[hoist0,crate4,crate7,depot0]
279 __method_precondition_m2_do_put_on[crate2,truck0]
291 __method_precondition_m7_do_get_truck[truck0,distributor0]
295 Drive[truck0,distributor1,distributor0]
297 __method_precondition_m4_do_clear[crate6,distributor0]
298 nop[]
299 Unload[hoist1,crate2,truck0,distributor0]
300 Drop[hoist1,crate2,crate6,distributor0]
305 __method_precondition_m2_do_put_on[crate0,truck1]
310 __method_precondition_m6_do_get_truck[truck1,depot0]
311 nop[]
314 __method_precondition_m4_do_clear[crate4,depot0]
315 nop[]
316 Unload[hoist0,crate0,truck1,depot0]
317 Drop[hoist0,crate0,crate4,depot0]
root 0
313 do_clear[crate4,depot0] -> m4_do_clear 314 315
309 do_get_truck[truck1,depot0] -> m6_do_get_truck 310 311
304 do_put_on[crate0,crate4] -> <<m2_do_put_on;m2_do_put_on_splitted_6[truck1,crate4,crate0];_splitting_method_m2_do_put_on_splitted_6;1;0,-1,-2,-3>;m2_do_put_on_splitted_4[crate0,truck1,depot0,crate4];_splitting_method_m2_do_put_on_splitted_4;3;0,1,2,-1,-2> 305 309 313 316 317
296 do_clear[crate6,distributor0] -> m4_do_clear 297 298
294 m7_do_get_truck_splitted_2[truck0,distributor0] -> _splitting_method_m7_do_get_truck_splitted_2 295
290 do_get_truck[truck0,distributor0] -> m7_do_get_truck 291 294
287 m2_do_put_on_splitted_6[truck0,crate6,crate2] -> <_splitting_method_m2_do_put_on_splitted_6;m2_do_put_on_splitted_4[crate2,truck0,distributor0,crate6];_splitting_method_m2_do_put_on_splitted_4;2;0,1,-1,-2> 290 296 299 300
278 do_put_on[crate2,crate6] -> m2_do_put_on 279 287
271 do_clear[crate7,depot0] -> m4_do_clear 272 273
267 do_get_truck[truck1,depot0] -> m6_do_get_truck 268 269
262 do_put_on[crate4,crate7] -> <<m2_do_put_on;m2_do_put_on_splitted_6[truck1,crate7,crate4];_splitting_method_m2_do_put_on_splitted_6;1;0,-1,-2,-3>;m2_do_put_on_splitted_4[crate4,truck1,depot0,crate7];_splitting_method_m2_do_put_on_splitted_4;3;0,1,2,-1,-2> 263 267 271 274 275
253 do_get_truck[truck0,distributor1] -> m6_do_get_truck 254 255
252 m5_do_clear_splitted_1[distributor1,hoist2,crate3] -> _splitting_method_m5_do_clear_splitted_1 253 256
246 do_clear[crate3,distributor1] -> m4_do_clear 247 248
244 do_clear[pallet2,distributor1] -> m5_do_clear 245 246 249 252
234 do_clear[crate5,distributor1] -> m4_do_clear 235 236
231 m7_do_get_truck_splitted_2[truck0,distributor1] -> _splitting_method_m7_do_get_truck_splitted_2 232
220 do_get_truck[truck0,distributor1] -> m7_do_get_truck 221 231
211 m3_do_put_on_splitted_5[crate5,distributor1,truck0] -> <_splitting_method_m3_do_put_on_splitted_5;do_load_truck[crate5,crate3,distributor1,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5> 212 220 234 237 238
167 do_put_on[crate5,pallet2] -> <<m3_do_put_on;do_unload_truck[crate5,pallet2,distributor1,truck0];m11_do_unload_truck;1;0,-1,-2,-3,-4>;m3_do_put_on_splitted_7[truck0,distributor1,crate5];_splitting_method_m3_do_put_on_splitted_7;0;-1,-2,1,2,3,4> 211 239 240 244 257 258
154 do_get_truck[truck0,distributor0] -> m6_do_get_truck 155 156
152 m5_do_clear_splitted_1[distributor0,hoist1,crate2] -> _splitting_method_m5_do_clear_splitted_1 154 157
147 do_clear[pallet1,distributor0] -> <m5_do_clear;do_clear[crate2,distributor0];m4_do_clear;1;0,-1,-2,2,3> 148 149 150 151 152
137 do_clear[crate6,distributor1] -> m4_do_clear 138 139
133 do_get_truck[truck0,distributor1] -> m6_do_get_truck 134 135
131 m3_do_put_on_splitted_7[truck0,distributor0,crate6] -> <<_splitting_method_m3_do_put_on_splitted_7;m3_do_put_on_splitted_5[crate6,distributor1,truck0];_splitting_method_m3_do_put_on_splitted_5;0;-1,1>;do_load_truck[crate6,crate5,distributor1,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1> 132 133 137 140 141 142
128 do_put_on[crate6,pallet1] -> <m3_do_put_on;do_unload_truck[crate6,pallet1,distributor0,truck0];m11_do_unload_truck;1;0,-1,-2,-3,-4> 131 143 147 158 159
117 do_get_truck[truck1,depot0] -> m6_do_get_truck 118 119
116 m5_do_clear_splitted_1[depot0,hoist0,crate0] -> _splitting_method_m5_do_clear_splitted_1 117 120
109 do_get_truck[truck1,depot0] -> m6_do_get_truck 110 111
108 m5_do_clear_splitted_1[depot0,hoist0,crate1] -> _splitting_method_m5_do_clear_splitted_1 109 112
101 do_get_truck[truck1,depot0] -> m6_do_get_truck 102 103
100 m5_do_clear_splitted_1[depot0,hoist0,crate4] -> _splitting_method_m5_do_clear_splitted_1 101 104
88 do_clear[crate4,depot0] -> m4_do_clear 89 90
73 do_clear[crate1,depot0] -> m5_do_clear 74 88 91 100
67 do_clear[crate0,depot0] -> m5_do_clear 68 73 105 108
56 do_clear[pallet0,depot0] -> m5_do_clear 57 67 113 116
35 do_clear[crate7,depot0] -> m4_do_clear 36 37
33 m7_do_get_truck_splitted_2[truck1,depot0] -> _splitting_method_m7_do_get_truck_splitted_2 34
26 do_get_truck[truck1,depot0] -> m7_do_get_truck 27 33
23 m3_do_put_on_splitted_5[crate7,depot0,truck1] -> <_splitting_method_m3_do_put_on_splitted_5;do_load_truck[crate7,crate4,depot0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5> 24 26 35 38 39
7 do_put_on[crate7,pallet0] -> <<m3_do_put_on;do_unload_truck[crate7,pallet0,depot0,truck1];m11_do_unload_truck;1;0,-1,-2,-3,-4>;m3_do_put_on_splitted_7[truck1,depot0,crate7];_splitting_method_m3_do_put_on_splitted_7;0;-1,-2,1,2,3,4> 23 40 41 56 121 122
0 __top[] -> __top_method 7 128 167 262 278 304
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.144531 MEMPEAK_KBS 932

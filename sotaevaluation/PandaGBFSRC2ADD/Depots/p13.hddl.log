pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/607/607.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/607/607.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.359ms
Contains 0.142ms
Restrict 0.166ms
MPrep 0.173ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (Drop)
 ---> Disabling potentially consistent extension checking for action:           4 (Unload)
 ---> Disabling potentially consistent extension checking for action:           16 (__method_precondition_m11_do_unload_truck)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [430] grounded tasks and [157] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           7 (m8_do_lift_crate)
Returning from runGpg().
TDG done.
Calculated [707] grounded tasks and [524] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 400 tasks, 306 methods.
Grounded PG:
Input was [240, 400], output was [240, 131].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
20 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 94 S 0 SC 0 SM 0 NSM 0 I 0 P 123 S 97 A 66 M 212
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/607/607.sas.
- State has 94 bits divided into 94 mutex groups.
- Domain contains 220 actions.
- Domain contains 286 tasks.
- Domain contains 212 methods.
- The initial state contains 42 set bits.
- The initial task is "__top[]".
- State-based goal contains 6 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 286
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.007 seconds
- Visited list time 0.000545 seconds
- Visited list inserts 97
- Visited list pruned 1
- Visited list contains 96
- Visited list hash collisions 1
- Visited list used hash buckets 96
- Generated 553 search nodes
  Calculated heuristic for 348 nodes
  One modifications 79
  Effectless actions 126
- including 79 one modification actions
- including 0 one modification methods
- and       126 progressions of effectless actions
- Generated 49714 nodes per second
- Final fringe contains 33 nodes
- Status: Solved
- Found solution of length 97
- Total costs of actions: 37
==>
9 __method_precondition_m10_do_load_truck[crate0,pallet2,depot2,hoist2]
12 __method_precondition_m7_do_get_truck[truck1,depot2]
17 Drive[truck1,depot0,depot2]
22 __method_precondition_m5_do_clear[crate0,depot2,crate1,hoist2]
28 __method_precondition_m5_do_clear[crate1,depot2,crate5,hoist2]
29 __method_precondition_m4_do_clear[crate5,depot2]
30 nop[]
31 Lift[hoist2,crate5,crate1,depot2]
56 __method_precondition_m6_do_get_truck[truck1,depot2]
57 nop[]
58 Load[hoist2,crate5,truck1,depot2]
59 Lift[hoist2,crate1,crate0,depot2]
64 __method_precondition_m6_do_get_truck[truck1,depot2]
65 nop[]
66 Load[hoist2,crate1,truck1,depot2]
67 Lift[hoist2,crate0,pallet2,depot2]
68 Load[hoist2,crate0,truck1,depot2]
69 Drive[truck1,depot2,depot0]
70 __method_precondition_m11_do_unload_truck[crate0,pallet0,depot0,truck1,hoist0]
75 __method_precondition_m5_do_clear[pallet0,depot0,crate2,hoist0]
76 __method_precondition_m4_do_clear[crate2,depot0]
77 nop[]
78 Lift[hoist0,crate2,pallet0,depot0]
82 __method_precondition_m6_do_get_truck[truck1,depot0]
83 nop[]
84 Load[hoist0,crate2,truck1,depot0]
85 Unload[hoist0,crate0,truck1,depot0]
86 Drop[hoist0,crate0,pallet0,depot0]
90 __method_precondition_m2_do_put_on[crate1,truck1]
97 __method_precondition_m7_do_get_truck[truck1,distributor2]
101 Drive[truck1,depot0,distributor2]
106 __method_precondition_m4_do_clear[pallet5,distributor2]
107 nop[]
108 Unload[hoist5,crate1,truck1,distributor2]
109 Drop[hoist5,crate1,pallet5,distributor2]
113 __method_precondition_m2_do_put_on[crate2,truck1]
120 __method_precondition_m7_do_get_truck[truck1,distributor1]
127 Drive[truck1,distributor2,distributor1]
129 __method_precondition_m4_do_clear[pallet4,distributor1]
130 nop[]
131 Unload[hoist4,crate2,truck1,distributor1]
132 Drop[hoist4,crate2,pallet4,distributor1]
138 __method_precondition_m1_do_put_on[crate3,depot0]
139 __method_precondition_m4_do_clear[crate3,depot0]
140 nop[]
147 __method_precondition_m4_do_clear[pallet7,depot0]
148 nop[]
220 __method_precondition_m9_do_lift_crate[crate3,depot0,hoist0,pallet8]
221 Lift[hoist0,crate3,pallet8,depot0]
222 Drop[hoist0,crate3,pallet7,depot0]
230 __method_precondition_m1_do_put_on[crate4,distributor0]
231 __method_precondition_m4_do_clear[crate4,distributor0]
232 nop[]
252 __method_precondition_m4_do_clear[pallet9,distributor0]
253 nop[]
256 __method_precondition_m9_do_lift_crate[crate4,distributor0,hoist3,pallet3]
257 Lift[hoist3,crate4,pallet3,distributor0]
258 Drop[hoist3,crate4,pallet9,distributor0]
264 __method_precondition_m2_do_put_on[crate5,truck1]
292 __method_precondition_m7_do_get_truck[truck1,depot1]
545 Drive[truck1,distributor1,depot1]
547 __method_precondition_m4_do_clear[pallet1,depot1]
548 nop[]
549 Unload[hoist1,crate5,truck1,depot1]
550 Drop[hoist1,crate5,pallet1,depot1]
root 0
546 do_clear[pallet1,depot1] -> m4_do_clear 547 548
544 m7_do_get_truck_splitted_2[truck1,depot1] -> _splitting_method_m7_do_get_truck_splitted_2 545
291 do_get_truck[truck1,depot1] -> m7_do_get_truck 292 544
263 do_put_on[crate5,pallet1] -> <<m2_do_put_on;m2_do_put_on_splitted_6[truck1,pallet1,crate5];_splitting_method_m2_do_put_on_splitted_6;1;0,-1,-2,-3>;m2_do_put_on_splitted_4[crate5,truck1,depot1,pallet1];_splitting_method_m2_do_put_on_splitted_4;3;0,1,2,-1,-2> 264 291 546 549 550
255 do_lift_crate[crate4,distributor0,hoist3] -> m9_do_lift_crate 256 257
251 do_clear[pallet9,distributor0] -> m4_do_clear 252 253
229 do_put_on[crate4,pallet9] -> <<m1_do_put_on;do_clear[crate4,distributor0];m4_do_clear;1;0,-1,-2,2,3>;m1_do_put_on_splitted_3[crate4,distributor0,pallet9];_splitting_method_m1_do_put_on_splitted_3;4;0,1,2,3,-1,-2> 230 231 232 251 255 258
219 do_lift_crate[crate3,depot0,hoist0] -> m9_do_lift_crate 220 221
146 do_clear[pallet7,depot0] -> m4_do_clear 147 148
137 do_put_on[crate3,pallet7] -> <<m1_do_put_on;do_clear[crate3,depot0];m4_do_clear;1;0,-1,-2,2,3>;m1_do_put_on_splitted_3[crate3,depot0,pallet7];_splitting_method_m1_do_put_on_splitted_3;4;0,1,2,3,-1,-2> 138 139 140 146 219 222
128 do_clear[pallet4,distributor1] -> m4_do_clear 129 130
126 m7_do_get_truck_splitted_2[truck1,distributor1] -> _splitting_method_m7_do_get_truck_splitted_2 127
119 do_get_truck[truck1,distributor1] -> m7_do_get_truck 120 126
112 do_put_on[crate2,pallet4] -> <<m2_do_put_on;m2_do_put_on_splitted_6[truck1,pallet4,crate2];_splitting_method_m2_do_put_on_splitted_6;1;0,-1,-2,-3>;m2_do_put_on_splitted_4[crate2,truck1,distributor1,pallet4];_splitting_method_m2_do_put_on_splitted_4;3;0,1,2,-1,-2> 113 119 128 131 132
105 do_clear[pallet5,distributor2] -> m4_do_clear 106 107
100 m7_do_get_truck_splitted_2[truck1,distributor2] -> _splitting_method_m7_do_get_truck_splitted_2 101
96 do_get_truck[truck1,distributor2] -> m7_do_get_truck 97 100
89 do_put_on[crate1,pallet5] -> <<m2_do_put_on;m2_do_put_on_splitted_6[truck1,pallet5,crate1];_splitting_method_m2_do_put_on_splitted_6;1;0,-1,-2,-3>;m2_do_put_on_splitted_4[crate1,truck1,distributor2,pallet5];_splitting_method_m2_do_put_on_splitted_4;3;0,1,2,-1,-2> 90 96 105 108 109
81 do_get_truck[truck1,depot0] -> m6_do_get_truck 82 83
79 m5_do_clear_splitted_1[depot0,hoist0,crate2] -> _splitting_method_m5_do_clear_splitted_1 81 84
74 do_clear[pallet0,depot0] -> <m5_do_clear;do_clear[crate2,depot0];m4_do_clear;1;0,-1,-2,2,3> 75 76 77 78 79
63 do_get_truck[truck1,depot2] -> m6_do_get_truck 64 65
61 m5_do_clear_splitted_1[depot2,hoist2,crate1] -> _splitting_method_m5_do_clear_splitted_1 63 66
55 do_get_truck[truck1,depot2] -> m6_do_get_truck 56 57
51 m5_do_clear_splitted_1[depot2,hoist2,crate5] -> _splitting_method_m5_do_clear_splitted_1 55 58
27 do_clear[crate1,depot2] -> <m5_do_clear;do_clear[crate5,depot2];m4_do_clear;1;0,-1,-2,2,3> 28 29 30 31 51
21 do_clear[crate0,depot2] -> m5_do_clear 22 27 59 61
16 m7_do_get_truck_splitted_2[truck1,depot2] -> _splitting_method_m7_do_get_truck_splitted_2 17
11 do_get_truck[truck1,depot2] -> m7_do_get_truck 12 16
8 m3_do_put_on_splitted_7[truck1,depot0,crate0] -> <<_splitting_method_m3_do_put_on_splitted_7;m3_do_put_on_splitted_5[crate0,depot2,truck1];_splitting_method_m3_do_put_on_splitted_5;0;-1,1>;do_load_truck[crate0,pallet2,depot2,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1> 9 11 21 67 68 69
5 do_put_on[crate0,pallet0] -> <m3_do_put_on;do_unload_truck[crate0,pallet0,depot0,truck1];m11_do_unload_truck;1;0,-1,-2,-3,-4> 8 70 74 85 86
0 __top[] -> __top_method 5 89 112 137 229 263
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.151367 MEMPEAK_KBS 932

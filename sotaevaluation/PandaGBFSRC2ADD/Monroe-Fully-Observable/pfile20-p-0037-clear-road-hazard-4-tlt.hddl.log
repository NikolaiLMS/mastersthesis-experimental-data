pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/631/631.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/631/631.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.728ms
Contains 0.139ms
Restrict 0.224ms
MPrep 0.28ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           64 (SHOP_methodm_get_out_unload_precondition)
 ---> Disabling potentially consistent extension checking for action:           57 (SHOP_methodm_get_to_person_drives_themself_precondition)
 ---> Disabling potentially consistent extension checking for action:           58 (SHOP_methodm_get_to_vehicle_gets_driven_precondition)
 ---> Disabling potentially consistent extension checking for action:           59 (SHOP_methodm_get_to_as_cargo_precondition)
 ---> Disabling potentially consistent extension checking for action:           60 (SHOP_methodm_get_to_with_ambulance_precondition)
 ---> Disabling potentially consistent extension checking for action:           4 (climb_in)
 ---> Disabling potentially consistent extension checking for action:           3 (navegate_vehicle)
 ---> Disabling potentially consistent extension checking for action:           61 (SHOP_methodm_drive_to_precondition)
 ---> Disabling potentially consistent extension checking for action:           62 (SHOP_methodm_get_in_ambulatory_person_precondition)
 ---> Disabling potentially consistent extension checking for action:           7 (unload)
 ---> Disabling potentially consistent extension checking for action:           5 (climb_out)
 ---> Disabling potentially consistent extension checking for action:           8 (treat)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [127051] grounded tasks and [2563] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           31 (m_get_in_ambulatory_person)
 ---> Disabling potentially consistent extension checking for action:           32 (m_get_in_load_in)
 ---> Disabling potentially consistent extension checking for action:           34 (m_get_out_unload)
 ---> Disabling potentially consistent extension checking for action:           40 (_splitting_method_m_get_to_as_cargo_splitted_7)
 ---> Disabling potentially consistent extension checking for action:           42 (_splitting_method_m_get_to_with_ambulance_splitted_8)
 ---> Disabling potentially consistent extension checking for action:           25 (m_emt_treat)
 ---> Disabling potentially consistent extension checking for action:           83 (_splitting_method_m_tow_to_splitted_17)
 ---> Disabling potentially consistent extension checking for action:           37 (m_get_to_person_drives_themself)
 ---> Disabling potentially consistent extension checking for action:           39 (m_get_to_vehicle_gets_driven)
 ---> Disabling potentially consistent extension checking for action:           41 (m_get_to_as_cargo)
 ---> Disabling potentially consistent extension checking for action:           3 (m_block_road)
 ---> Disabling potentially consistent extension checking for action:           54 (m_provide_temp_heat_local_electricity)
 ---> Disabling potentially consistent extension checking for action:           27 (m_fix_water_main)
 ---> Disabling potentially consistent extension checking for action:           43 (m_get_to_with_ambulance)
Returning from runGpg().
TDG done.
Calculated [144901] grounded tasks and [126014] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 74498 tasks, 62096 methods.
Grounded PG:
Input was [63382, 74498], output was [63382, 2508].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 924 S 0 SC 0 SM 0 NSM 0 I 0 P 63382 S 0 A 4047 M 55027
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/631/631.sas.
- State has 924 bits divided into 924 mutex groups.
- Domain contains 63382 actions.
- Domain contains 67429 tasks.
- Domain contains 55027 methods.
- The initial state contains 342 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 67417
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (42 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
  19s visitime    0.00s generated nodes      5004 nodes/sec     257 cur h   95 mod.depth    2 inserts       312 dups         1 size       311 hash fail      1 hash buckets    311
  30s visitime    0.01s generated nodes     10008 nodes/sec     325 cur h   99 mod.depth   10 inserts       746 dups         5 size       741 hash fail      5 hash buckets    741
  42s visitime    0.02s generated nodes     15011 nodes/sec     354 cur h   59 mod.depth   29 inserts      1165 dups         5 size      1160 hash fail      5 hash buckets   1160
  56s visitime    0.03s generated nodes     20014 nodes/sec     351 cur h   26 mod.depth   51 inserts      1540 dups         8 size      1532 hash fail      8 hash buckets   1532
Search Results
- Search time 63.20 seconds
- Visited list time 0.03 seconds
- Visited list inserts 1680
- Visited list pruned 12
- Visited list contains 1668
- Visited list hash collisions 12
- Visited list used hash buckets 1668
- Generated 22174 search nodes
  Calculated heuristic for 20422 nodes
  One modifications 220
  Effectless actions 1532
- including 220 one modification actions
- including 0 one modification methods
- and       1532 progressions of effectless actions
- Generated 323 nodes per second
- Final fringe contains 2708 nodes
- Status: Solved
- Found solution of length 78
- Total costs of actions: 39
==>
5183 SHOP_methodm_provide_temp_heat_local_electricity_precondition[pdriver2,strong]
13826 SHOP_methodm_get_to_as_cargo_precondition[gen1,texaco1,strong,pvan1]
14419 SHOP_methodm_get_to_vehicle_gets_driven_precondition[pvan1,strong,texaco1,pu1]
14600 SHOP_methodm_drive_to_precondition[pvan1,texaco1,pu1]
14613 p_1Navegate_vehicle[]
14674 SHOP_methodm_get_in_load_in_precondition[gen1,strong,pvan1,tcrew1]
14935 SHOP_methodm_get_to_as_cargo_precondition[tcrew1,strong,park_ridge,van1]
14951 SHOP_methodm_get_to_already_there_precondition[van1,park_ridge]
14955 SHOP_methodm_get_in_ambulatory_person_precondition[tcrew1,park_ridge,van1]
14981 p_2Climb_in[]
14995 SHOP_methodm_get_to_vehicle_gets_driven_precondition[van1,strong,park_ridge,pcrew1]
15009 SHOP_methodm_drive_to_precondition[van1,park_ridge,pcrew1]
15012 p_3Navegate_vehicle[]
15040 p_4Climb_out[]
15041 load[tcrew1,gen1,pvan1,strong]
15046 SHOP_methodm_get_to_vehicle_gets_driven_precondition[pvan1,texaco1,strong,pu1]
15060 SHOP_methodm_drive_to_precondition[pvan1,strong,pu1]
15061 navegate_vehicle[pu1,pvan1,texaco1,strong]
15137 SHOP_methodm_get_out_unload_precondition[pvan1,texaco1,pcrew1,gen1]
15216 SHOP_methodm_get_to_person_drives_themself_precondition[pcrew1,texaco1,van1,strong]
15270 SHOP_methodm_drive_to_precondition[van1,strong,pcrew1]
15271 navegate_vehicle[pcrew1,van1,texaco1,strong]
15272 unload[pcrew1,gen1,pvan1,texaco1]
15273 pay[texaco1]
15274 pump_gas_into[texaco1,gen1]
17391 SHOP_methodm_get_to_as_cargo_precondition[gen1,strong,texaco1,pvan2]
17393 SHOP_methodm_get_to_already_there_precondition[pvan2,texaco1]
17461 SHOP_methodm_get_in_load_in_precondition[gen1,texaco1,pvan2,pcrew1]
17475 SHOP_methodm_get_to_already_there_precondition[pcrew1,texaco1]
17476 load[pcrew1,gen1,pvan2,texaco1]
22059 SHOP_methodm_get_to_vehicle_gets_driven_precondition[pvan2,strong,texaco1,pu2]
22064 SHOP_methodm_drive_to_precondition[pvan2,texaco1,pu2]
22065 navegate_vehicle[pu2,pvan2,strong,texaco1]
22148 SHOP_methodm_get_out_unload_precondition[pvan2,strong,ht2,gen1]
22156 SHOP_methodm_get_to_already_there_precondition[ht2,strong]
22157 unload[ht2,gen1,pvan2,strong]
22158 hook_up[gen1,strong]
22159 turn_on[gen1]
22160 turn_on_heat[strong]
root 0
22155 get_to[ht2,strong] -> m_get_to_already_there 22156
22147 get_out[gen1,pvan2] -> m_get_out_unload 22148 22155 22157
22063 drive_to[pu2,pvan2,strong] -> <m_drive_to;cnavegate_vehicle[pu2,pvan2,strong,texaco1];regular_3;1;0,-1> 22064 22065
22058 m_get_to_vehicle_gets_driven_splitted_6[pvan2,strong,pu2] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 22059
17491 get_to[pvan2,strong] -> m_get_to_vehicle_gets_driven 22058 22063
17474 get_to[pcrew1,texaco1] -> m_get_to_already_there 17475
17460 get_in[gen1,pvan2] -> m_get_in_load_in 17461 17474 17476
17392 get_to[pvan2,texaco1] -> m_get_to_already_there 17393
17390 m_get_to_as_cargo_splitted_7[pvan2,gen1,strong] -> _splitting_method_m_get_to_as_cargo_splitted_7 17391 17392
15281 get_to[gen1,strong] -> m_get_to_as_cargo 17390 17460 17491 22147
15269 drive_to[pcrew1,van1,texaco1] -> <m_drive_to;cnavegate_vehicle[pcrew1,van1,texaco1,strong];regular_3;1;0,-1> 15270 15271
15215 m_get_to_person_drives_themself_splitted_5[pcrew1,texaco1,van1] -> _splitting_method_m_get_to_person_drives_themself_splitted_5 15216
15165 get_to[pcrew1,texaco1] -> m_get_to_person_drives_themself 15215 15269
15136 get_out[gen1,pvan1] -> m_get_out_unload 15137 15165 15272
15059 drive_to[pu1,pvan1,texaco1] -> <m_drive_to;cnavegate_vehicle[pu1,pvan1,texaco1,strong];regular_3;1;0,-1> 15060 15061
15045 m_get_to_vehicle_gets_driven_splitted_6[pvan1,texaco1,pu1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 15046
15043 get_to[pvan1,texaco1] -> m_get_to_vehicle_gets_driven 15045 15059
15039 cclimb_out[tcrew1,van1,strong] -> prefix_4 15040
15023 get_out[tcrew1,van1] -> m_get_out_ambulatory_person 15039
15011 cnavegate_vehicle[pcrew1,van1,strong,park_ridge] -> prefix_3 15012
15008 drive_to[pcrew1,van1,strong] -> m_drive_to 15009 15011
14994 m_get_to_vehicle_gets_driven_splitted_6[van1,strong,pcrew1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 14995
14983 get_to[van1,strong] -> m_get_to_vehicle_gets_driven 14994 15008
14980 cclimb_in[tcrew1,van1,park_ridge] -> prefix_2 14981
14954 get_in[tcrew1,van1] -> m_get_in_ambulatory_person 14955 14980
14950 get_to[van1,park_ridge] -> m_get_to_already_there 14951
14934 m_get_to_as_cargo_splitted_7[van1,tcrew1,strong] -> _splitting_method_m_get_to_as_cargo_splitted_7 14935 14950
14759 get_to[tcrew1,strong] -> m_get_to_as_cargo 14934 14954 14983 15023
14673 get_in[gen1,pvan1] -> m_get_in_load_in 14674 14759 15041
14612 cnavegate_vehicle[pu1,pvan1,strong,texaco1] -> prefix_1 14613
14599 drive_to[pu1,pvan1,strong] -> m_drive_to 14600 14612
14418 m_get_to_vehicle_gets_driven_splitted_6[pvan1,strong,pu1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 14419
13829 get_to[pvan1,strong] -> m_get_to_vehicle_gets_driven 14418 14599
13825 m_get_to_as_cargo_splitted_7[pvan1,gen1,texaco1] -> _splitting_method_m_get_to_as_cargo_splitted_7 13826 13829
5197 get_to[gen1,texaco1] -> m_get_to_as_cargo 13825 14673 15043 15136
5190 generate_temp_electricity[strong] -> <<m_generate_temp_electricity;make_full_fuel[gen1];m_make_full_fuel_at_service_station;0;-1,-2,1,2,3>;add_fuel[texaco1,gen1];m_add_fuel;1;0,-1,-2,2,3,4> 5197 15273 15274 15281 22158 22159
5182 provide_temp_heat[pdriver2] -> m_provide_temp_heat_local_electricity 5183 5190 22160
102 tlt[] -> m_tlt_provide_temp_heat 5182
0 __top[] -> __top_method 102
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 84.4014 MEMPEAK_KBS 3884

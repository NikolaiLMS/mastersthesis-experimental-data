pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/632/632.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/632/632.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.804ms
Contains 0.145ms
Restrict 0.236ms
MPrep 0.297ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           65 (SHOP_methodm_get_out_unload_precondition)
 ---> Disabling potentially consistent extension checking for action:           58 (SHOP_methodm_get_to_person_drives_themself_precondition)
 ---> Disabling potentially consistent extension checking for action:           59 (SHOP_methodm_get_to_vehicle_gets_driven_precondition)
 ---> Disabling potentially consistent extension checking for action:           60 (SHOP_methodm_get_to_as_cargo_precondition)
 ---> Disabling potentially consistent extension checking for action:           61 (SHOP_methodm_get_to_with_ambulance_precondition)
 ---> Disabling potentially consistent extension checking for action:           4 (climb_in)
 ---> Disabling potentially consistent extension checking for action:           3 (navegate_vehicle)
 ---> Disabling potentially consistent extension checking for action:           62 (SHOP_methodm_drive_to_precondition)
 ---> Disabling potentially consistent extension checking for action:           63 (SHOP_methodm_get_in_ambulatory_person_precondition)
 ---> Disabling potentially consistent extension checking for action:           7 (unload)
 ---> Disabling potentially consistent extension checking for action:           5 (climb_out)
 ---> Disabling potentially consistent extension checking for action:           8 (treat)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [127050] grounded tasks and [2564] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           33 (m_get_in_ambulatory_person)
 ---> Disabling potentially consistent extension checking for action:           34 (m_get_in_load_in)
 ---> Disabling potentially consistent extension checking for action:           36 (m_get_out_unload)
 ---> Disabling potentially consistent extension checking for action:           42 (_splitting_method_m_get_to_as_cargo_splitted_7)
 ---> Disabling potentially consistent extension checking for action:           44 (_splitting_method_m_get_to_with_ambulance_splitted_8)
 ---> Disabling potentially consistent extension checking for action:           27 (m_emt_treat)
 ---> Disabling potentially consistent extension checking for action:           85 (_splitting_method_m_tow_to_splitted_17)
 ---> Disabling potentially consistent extension checking for action:           39 (m_get_to_person_drives_themself)
 ---> Disabling potentially consistent extension checking for action:           41 (m_get_to_vehicle_gets_driven)
 ---> Disabling potentially consistent extension checking for action:           43 (m_get_to_as_cargo)
 ---> Disabling potentially consistent extension checking for action:           3 (m_block_road)
 ---> Disabling potentially consistent extension checking for action:           56 (m_provide_temp_heat_local_electricity)
 ---> Disabling potentially consistent extension checking for action:           29 (m_fix_water_main)
 ---> Disabling potentially consistent extension checking for action:           45 (m_get_to_with_ambulance)
Returning from runGpg().
TDG done.
Calculated [144904] grounded tasks and [126017] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 74496 tasks, 62094 methods.
Grounded PG:
Input was [63380, 74496], output was [63380, 2509].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 925 S 0 SC 0 SM 0 NSM 0 I 0 P 63380 S 0 A 4046 M 55024
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/632/632.sas.
- State has 925 bits divided into 925 mutex groups.
- Domain contains 63380 actions.
- Domain contains 67426 tasks.
- Domain contains 55024 methods.
- The initial state contains 342 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 67414
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (45 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 10.227 seconds
- Visited list time 0.004991 seconds
- Visited list inserts 255
- Visited list pruned 1
- Visited list contains 254
- Visited list hash collisions 1
- Visited list used hash buckets 254
- Generated 3311 search nodes
  Calculated heuristic for 2974 nodes
  One modifications 30
  Effectless actions 307
- including 30 one modification actions
- including 0 one modification methods
- and       307 progressions of effectless actions
- Generated 290 nodes per second
- Final fringe contains 1223 nodes
- Status: Solved
- Found solution of length 51
- Total costs of actions: 25
==>
169 SHOP_methodm_shut_off_water_precondition[airport,gates,roch_water]
2924 p_1Call[]
2950 SHOP_methodm_get_to_person_drives_themself_precondition[wcrew1,airport,wtruck1,marketplace]
2957 SHOP_methodm_drive_to_precondition[wtruck1,marketplace,wcrew1]
2967 p_2Navegate_vehicle[]
3119 SHOP_methodm_get_to_as_cargo_precondition[ht2,airport,marketplace,ttruck1]
3121 SHOP_methodm_get_to_already_there_precondition[ttruck1,marketplace]
3125 SHOP_methodm_get_in_ambulatory_person_precondition[ht2,marketplace,ttruck1]
3152 p_3Climb_in[]
3157 SHOP_methodm_get_to_vehicle_gets_driven_precondition[ttruck1,airport,marketplace,tdriver1]
3171 SHOP_methodm_drive_to_precondition[ttruck1,marketplace,tdriver1]
3184 p_4Navegate_vehicle[]
3212 p_5Climb_out[]
3213 place_cones[ht2]
3218 SHOP_methodm_get_to_vehicle_gets_driven_precondition[backhoe1,airport,texaco1,ccrew1]
3231 SHOP_methodm_drive_to_precondition[backhoe1,texaco1,ccrew1]
3232 navegate_vehicle[ccrew1,backhoe1,airport,texaco1]
3233 dig[backhoe1,airport]
3234 replace_pipe[wcrew1,airport,rochester_general]
3247 SHOP_methodm_get_to_already_there_precondition[backhoe1,airport]
3248 fill_in[backhoe1,airport]
3274 SHOP_methodm_get_to_already_there_precondition[ccrew1,airport]
3275 pickup_cones[ccrew1]
3276 SHOP_methodm_turn_on_water_precondition[airport,gates,roch_water]
3291 call[roch_water]
root 0
3290 ccall[roch_water] -> regular_3 3291
3273 get_to[ccrew1,airport] -> m_get_to_already_there 3274
3253 take_down_cones[airport,rochester_general] -> m_take_down_cones 3273 3275
3246 get_to[backhoe1,airport] -> m_get_to_already_there 3247
3230 drive_to[ccrew1,backhoe1,airport] -> <m_drive_to;cnavegate_vehicle[ccrew1,backhoe1,airport,texaco1];regular_4;1;0,-1> 3231 3232
3217 m_get_to_vehicle_gets_driven_splitted_6[backhoe1,airport,ccrew1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 3218
3216 get_to[backhoe1,airport] -> m_get_to_vehicle_gets_driven 3217 3230
3211 cclimb_out[ht2,ttruck1,airport] -> prefix_5 3212
3196 get_out[ht2,ttruck1] -> m_get_out_ambulatory_person 3211
3183 cnavegate_vehicle[tdriver1,ttruck1,airport,marketplace] -> prefix_4 3184
3170 drive_to[tdriver1,ttruck1,airport] -> m_drive_to 3171 3183
3156 m_get_to_vehicle_gets_driven_splitted_6[ttruck1,airport,tdriver1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 3157
3155 get_to[ttruck1,airport] -> m_get_to_vehicle_gets_driven 3156 3170
3151 cclimb_in[ht2,ttruck1,marketplace] -> prefix_3 3152
3124 get_in[ht2,ttruck1] -> m_get_in_ambulatory_person 3125 3151
3120 get_to[ttruck1,marketplace] -> m_get_to_already_there 3121
3118 m_get_to_as_cargo_splitted_7[ttruck1,ht2,airport] -> _splitting_method_m_get_to_as_cargo_splitted_7 3119 3120
3000 get_to[ht2,airport] -> m_get_to_as_cargo 3118 3124 3155 3196
2972 set_up_cones[airport,rochester_general] -> m_set_up_cones 3000 3213
2966 cnavegate_vehicle[wcrew1,wtruck1,airport,marketplace] -> prefix_2 2967
2956 drive_to[wcrew1,wtruck1,airport] -> m_drive_to 2957 2966
2949 m_get_to_person_drives_themself_splitted_5[wcrew1,airport,wtruck1] -> _splitting_method_m_get_to_person_drives_themself_splitted_5 2950
2926 get_to[wcrew1,airport] -> m_get_to_person_drives_themself 2949 2956
2923 ccall[roch_water] -> prefix_1 2924
168 tlt[] -> <<<<<<m_tlt_fix_water_main;fix_water_main[airport,rochester_general];m_fix_water_main;0;-1,-2,-3>;turn_on_water[airport,rochester_general];<m_turn_on_water;m_turn_on_water_splitted_19[airport,roch_water];_splitting_method_m_turn_on_water_splitted_19;0;-1,1>;2;0,1,-1,-2>;repair_pipe[airport,rochester_general];m_repair_pipe;1;0,-1,-2,-3,-4,-5,-6,2,3>;close_hole[airport,rochester_general];m_close_hole;5;0,1,2,3,4,-1,-2,6,7,8>;open_hole[airport,rochester_general];m_open_hole;3;0,1,2,-1,-2,4,5,6,7,8,9>;shut_off_water[airport,rochester_general];<m_shut_off_water;m_shut_off_water_splitted_16[airport,roch_water];_splitting_method_m_shut_off_water_splitted_16;0;-1,1>;0;-1,-2,1,2,3,4,5,6,7,8,9,10> 169 2923 2926 2972 3216 3233 3234 3246 3248 3253 3276 3290
0 __top[] -> __top_method 168
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 30.6719 MEMPEAK_KBS 3820

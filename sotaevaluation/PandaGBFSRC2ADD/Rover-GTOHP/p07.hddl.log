pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/908/908.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/908/908.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.876ms
Contains 0.096ms
Restrict 0.125ms
MPrep 0.114ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           0 (navigate)
 ---> Disabling potentially consistent extension checking for action:           4 (calibrate)
 ---> Disabling potentially consistent extension checking for action:           5 (take_image)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [1116] grounded tasks and [629] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           11 (_splitting_method_m13_get_image_data_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           8 (m4_do_navigate2)
 ---> Disabling potentially consistent extension checking for action:           5 (m1_do_navigate1)
Returning from runGpg().
TDG done.
Calculated [1748] grounded tasks and [1765] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 1585 tasks, 1602 methods.
Grounded PG:
Input was [1019, 1585], output was [1019, 629].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
512 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 100 S 0 SC 0 SM 0 NSM 0 I 0 P 301 S 53 A 425 M 1461
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/908/908.sas.
- State has 100 bits divided into 100 mutex groups.
- Domain contains 354 actions.
- Domain contains 779 tasks.
- Domain contains 1461 methods.
- The initial state contains 21 set bits.
- The initial task is "__top[]".
- State-based goal contains 8 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 638
- The problem is cyclic
- Number of cyclic SCCs: 45
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.029 seconds
- Visited list time 0.00064 seconds
- Visited list inserts 79
- Visited list pruned 2
- Visited list contains 77
- Visited list hash collisions 2
- Visited list used hash buckets 77
- Generated 714 search nodes
  Calculated heuristic for 493 nodes
  One modifications 127
  Effectless actions 94
- including 127 one modification actions
- including 0 one modification methods
- and       94 progressions of effectless actions
- Generated 17000 nodes per second
- Final fringe contains 93 nodes
- Status: Solved
- Found solution of length 135
- Total costs of actions: 59
==>
11 __method_precondition_m1_do_navigate1[rover0,waypoint1]
12 visit[waypoint1]
43 __method_precondition_m4_do_navigate2[rover1,waypoint4,waypoint3,waypoint2]
44 navigate[rover0,waypoint1,waypoint2]
45 visit[waypoint2]
75 navigate[rover0,waypoint2,waypoint3]
76 unvisit[waypoint2]
77 unvisit[waypoint1]
79 __method_precondition_m5_empty_store[rover0store]
80 nop[]
81 sample_soil[rover0,rover0store,waypoint3]
84 __method_precondition_m1_do_navigate1[rover0,waypoint3]
85 communicate_soil_data2[rover0,general,waypoint3,waypoint7]
92 __method_precondition_m1_do_navigate1[rover1,waypoint4]
93 visit[waypoint4]
124 navigate[rover1,waypoint4,waypoint6]
125 unvisit[waypoint4]
127 __method_precondition_m5_empty_store[rover1store]
128 nop[]
129 sample_soil[rover1,rover1store,waypoint6]
211 __method_precondition_m1_do_navigate1[rover1,waypoint6]
212 visit[waypoint6]
288 __method_precondition_m4_do_navigate2[rover1,waypoint5,waypoint3,waypoint4]
289 navigate[rover1,waypoint6,waypoint4]
290 visit[waypoint4]
297 navigate[rover1,waypoint4,waypoint5]
298 unvisit[waypoint4]
299 unvisit[waypoint6]
300 communicate_soil_data1[rover1,general,waypoint6,waypoint5,waypoint7]
302 __method_precondition_m1_do_navigate1[rover1,waypoint5]
303 nop[]
318 __method_precondition_m6_empty_store[rover1store]
319 drop[rover1,rover1store]
320 sample_rock[rover1,rover1store,waypoint5]
322 __method_precondition_m1_do_navigate1[rover1,waypoint5]
323 communicate_rock_data2[rover1,general,waypoint5,waypoint7]
329 __method_precondition_m1_do_navigate1[rover1,waypoint5]
330 visit[waypoint5]
340 navigate[rover1,waypoint5,waypoint4]
341 unvisit[waypoint5]
344 __method_precondition_m6_empty_store[rover1store]
345 drop[rover1,rover1store]
346 sample_rock[rover1,rover1store,waypoint4]
367 __method_precondition_m1_do_navigate1[rover1,waypoint4]
368 visit[waypoint4]
436 __method_precondition_m4_do_navigate2[rover1,waypoint4,waypoint3,waypoint6]
437 navigate[rover1,waypoint4,waypoint6]
438 visit[waypoint6]
453 navigate[rover1,waypoint6,waypoint8]
454 unvisit[waypoint6]
455 unvisit[waypoint4]
456 communicate_rock_data1[rover1,general,waypoint4,waypoint8,waypoint7]
458 __method_precondition_m1_do_navigate1[rover1,waypoint8]
459 nop[]
474 __method_precondition_m6_empty_store[rover1store]
475 drop[rover1,rover1store]
476 sample_rock[rover1,rover1store,waypoint8]
478 __method_precondition_m1_do_navigate1[rover1,waypoint8]
479 communicate_rock_data2[rover1,general,waypoint8,waypoint7]
493 __method_precondition_m1_do_navigate1[rover0,waypoint3]
494 nop[]
495 calibrate[rover0,camera4,objective3,waypoint3]
516 __method_precondition_m1_do_navigate1[rover0,waypoint3]
517 nop[]
518 take_image[rover0,waypoint3,objective0,camera4,colour]
558 __method_precondition_m1_do_navigate1[rover0,waypoint3]
559 nop[]
560 communicate_image_data[rover0,general,objective0,colour,waypoint3,waypoint7]
584 __method_precondition_m1_do_navigate1[rover0,waypoint3]
585 nop[]
586 calibrate[rover0,camera4,objective3,waypoint3]
609 __method_precondition_m1_do_navigate1[rover0,waypoint3]
610 nop[]
611 take_image[rover0,waypoint3,objective2,camera4,low_res]
629 __method_precondition_m1_do_navigate1[rover0,waypoint3]
630 nop[]
631 communicate_image_data[rover0,general,objective2,low_res,waypoint3,waypoint7]
655 __method_precondition_m1_do_navigate1[rover0,waypoint3]
656 nop[]
657 calibrate[rover0,camera4,objective3,waypoint3]
678 __method_precondition_m1_do_navigate1[rover0,waypoint3]
679 nop[]
680 take_image[rover0,waypoint3,objective0,camera4,low_res]
698 __method_precondition_m1_do_navigate1[rover0,waypoint3]
699 nop[]
700 communicate_image_data[rover0,general,objective0,low_res,waypoint3,waypoint7]
root 0
697 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 698 699
696 m14_send_image_data_splitted_10[rover0,general,objective0,low_res] -> <_splitting_method_m14_send_image_data_splitted_10;m14_send_image_data_splitted_5[rover0,general,objective0,low_res,waypoint3];_splitting_method_m14_send_image_data_splitted_5;1;0,-1> 697 700
677 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 678 679
672 m13_get_image_data_splitted_2[rover0,objective0,camera4,low_res] -> _splitting_method_m13_get_image_data_splitted_2 677 680
654 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 655 656
647 m15_do_calibrate_splitted_8[rover0,camera4] -> <_splitting_method_m15_do_calibrate_splitted_8;m15_do_calibrate_splitted_1[rover0,camera4,waypoint3];_splitting_method_m15_do_calibrate_splitted_1;1;0,-1> 654 657
646 get_image_data[objective0,low_res] -> <<<m13_get_image_data;m13_get_image_data_splitted_9[rover0,low_res,objective0];_splitting_method_m13_get_image_data_splitted_9;0;-1,-2,1>;do_calibrate[rover0,camera4];m15_do_calibrate;0;-1,1,2>;send_image_data[rover0,objective0,low_res];m14_send_image_data;2;0,1,-1> 647 672 696
628 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 629 630
627 m14_send_image_data_splitted_10[rover0,general,objective2,low_res] -> <_splitting_method_m14_send_image_data_splitted_10;m14_send_image_data_splitted_5[rover0,general,objective2,low_res,waypoint3];_splitting_method_m14_send_image_data_splitted_5;1;0,-1> 628 631
608 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 609 610
601 m13_get_image_data_splitted_2[rover0,objective2,camera4,low_res] -> _splitting_method_m13_get_image_data_splitted_2 608 611
583 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 584 585
576 m15_do_calibrate_splitted_8[rover0,camera4] -> <_splitting_method_m15_do_calibrate_splitted_8;m15_do_calibrate_splitted_1[rover0,camera4,waypoint3];_splitting_method_m15_do_calibrate_splitted_1;1;0,-1> 583 586
575 get_image_data[objective2,low_res] -> <<m13_get_image_data;m13_get_image_data_splitted_9[rover0,low_res,objective2];<_splitting_method_m13_get_image_data_splitted_9;do_calibrate[rover0,camera4];m15_do_calibrate;0;-1,1>;0;-1,-2,1>;send_image_data[rover0,objective2,low_res];m14_send_image_data;2;0,1,-1> 576 601 627
557 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 558 559
556 m14_send_image_data_splitted_10[rover0,general,objective0,colour] -> <_splitting_method_m14_send_image_data_splitted_10;m14_send_image_data_splitted_5[rover0,general,objective0,colour,waypoint3];_splitting_method_m14_send_image_data_splitted_5;1;0,-1> 557 560
515 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 516 517
510 m13_get_image_data_splitted_2[rover0,objective0,camera4,colour] -> _splitting_method_m13_get_image_data_splitted_2 515 518
492 do_navigate1[rover0,waypoint3] -> m0_do_navigate1 493 494
485 m15_do_calibrate_splitted_8[rover0,camera4] -> <_splitting_method_m15_do_calibrate_splitted_8;m15_do_calibrate_splitted_1[rover0,camera4,waypoint3];_splitting_method_m15_do_calibrate_splitted_1;1;0,-1> 492 495
482 get_image_data[objective0,colour] -> <<m13_get_image_data;m13_get_image_data_splitted_9[rover0,colour,objective0];<_splitting_method_m13_get_image_data_splitted_9;do_calibrate[rover0,camera4];m15_do_calibrate;0;-1,1>;0;-1,-2,1>;send_image_data[rover0,objective0,colour];m14_send_image_data;2;0,1,-1> 485 510 556
477 send_rock_data[rover1,waypoint8] -> m12_send_rock_data 478 479
473 empty_store[rover1store,rover1] -> m6_empty_store 474 475
457 do_navigate1[rover1,waypoint8] -> m0_do_navigate1 458 459
452 do_navigate2[rover1,waypoint6,waypoint8] -> m3_do_navigate2 453
435 do_navigate2[rover1,waypoint4,waypoint8] -> m4_do_navigate2 436 437 438 452 454
366 do_navigate1[rover1,waypoint8] -> m1_do_navigate1 367 368 435 455
347 m11_send_rock_data_splitted_11[rover1,general,waypoint4] -> <_splitting_method_m11_send_rock_data_splitted_11;m11_send_rock_data_splitted_6[rover1,general,waypoint4,waypoint8];_splitting_method_m11_send_rock_data_splitted_6;1;0,-1> 366 456
343 empty_store[rover1store,rover1] -> m6_empty_store 344 345
339 do_navigate2[rover1,waypoint5,waypoint4] -> m3_do_navigate2 340
328 do_navigate1[rover1,waypoint4] -> m1_do_navigate1 329 330 339 341
321 send_rock_data[rover1,waypoint5] -> m12_send_rock_data 322 323
317 empty_store[rover1store,rover1] -> m6_empty_store 318 319
301 do_navigate1[rover1,waypoint5] -> m0_do_navigate1 302 303
296 do_navigate2[rover1,waypoint4,waypoint5] -> m3_do_navigate2 297
287 do_navigate2[rover1,waypoint6,waypoint5] -> m4_do_navigate2 288 289 290 296 298
210 do_navigate1[rover1,waypoint5] -> m1_do_navigate1 211 212 287 299
186 m8_send_soil_data_splitted_12[rover1,general,waypoint6] -> <_splitting_method_m8_send_soil_data_splitted_12;m8_send_soil_data_splitted_7[rover1,general,waypoint6,waypoint5];_splitting_method_m8_send_soil_data_splitted_7;1;0,-1> 210 300
126 empty_store[rover1store,rover1] -> m5_empty_store 127 128
123 do_navigate2[rover1,waypoint4,waypoint6] -> m3_do_navigate2 124
91 do_navigate1[rover1,waypoint6] -> m1_do_navigate1 92 93 123 125
88 get_soil_data[waypoint6] -> <<m7_get_soil_data;m7_get_soil_data_splitted_4[rover1,waypoint6];_splitting_method_m7_get_soil_data_splitted_4;1;0,-1,-2,2>;send_soil_data[rover1,waypoint6];m8_send_soil_data;3;0,1,2,-1> 91 126 129 186
83 send_soil_data[rover0,waypoint3] -> m9_send_soil_data 84 85
78 empty_store[rover0store,rover0] -> m5_empty_store 79 80
74 do_navigate2[rover0,waypoint2,waypoint3] -> m3_do_navigate2 75
42 do_navigate2[rover0,waypoint1,waypoint3] -> m4_do_navigate2 43 44 45 74 76
10 do_navigate1[rover0,waypoint3] -> m1_do_navigate1 11 12 42 77
1 get_soil_data[waypoint3] -> <m7_get_soil_data;m7_get_soil_data_splitted_4[rover0,waypoint3];_splitting_method_m7_get_soil_data_splitted_4;1;0,-1,-2,2> 10 78 81 83
0 __top[] -> <<<<<<<__top_method;get_rock_data[waypoint8];m10_get_rock_data;4;0,1,2,3,-1,-2,-3,5,6,7>;m10_get_rock_data_splitted_3[rover1,waypoint8];_splitting_method_m10_get_rock_data_splitted_3;5;0,1,2,3,4,-1,-2,6,7,8,9>;get_rock_data[waypoint4];m10_get_rock_data;3;0,1,2,-1,-2,-3,4,5,6,7,8,9,10>;m10_get_rock_data_splitted_3[rover1,waypoint4];_splitting_method_m10_get_rock_data_splitted_3;4;0,1,2,3,-1,-2,5,6,7,8,9,10,11,12>;send_rock_data[rover1,waypoint4];m11_send_rock_data;6;0,1,2,3,4,5,-1,7,8,9,10,11,12,13>;get_rock_data[waypoint5];m10_get_rock_data;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11,12,13>;m10_get_rock_data_splitted_3[rover1,waypoint5];_splitting_method_m10_get_rock_data_splitted_3;3;0,1,2,-1,-2,4,5,6,7,8,9,10,11,12,13,14,15> 1 88 301 317 320 321 328 343 346 347 457 473 476 477 482 575 646
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.242361 MEMPEAK_KBS 3220

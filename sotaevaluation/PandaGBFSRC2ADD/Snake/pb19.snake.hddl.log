pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
TUUP sort_for_px0y0
TUUP sort_for_px0y1
TUUP sort_for_px0y2
TUUP sort_for_px0y3
TUUP sort_for_px0y4
TUUP sort_for_px1y0
TUUP sort_for_px1y1
TUUP sort_for_px1y2
TUUP sort_for_px1y3
TUUP sort_for_px1y4
TUUP sort_for_px2y0
TUUP sort_for_px2y1
TUUP sort_for_px2y2
TUUP sort_for_px2y3
TUUP sort_for_px2y4
TUUP sort_for_px3y0
TUUP sort_for_px3y1
TUUP sort_for_px3y2
TUUP sort_for_px3y3
TUUP sort_for_px3y4
TUUP sort_for_px4y0
TUUP sort_for_px4y1
TUUP sort_for_px4y2
TUUP sort_for_px4y3
TUUP sort_for_px4y4
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/386/386.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/386/386.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.273ms
Contains 0.01ms
Restrict 0.053ms
MPrep 0.056ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           8 (__method_precondition_hunt_all_split)
 ---> Disabling potentially consistent extension checking for action:           5 (__method_precondition_move-long-snake)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [6612] grounded tasks and [251] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           8 (move-short-snake)
 ---> Disabling potentially consistent extension checking for action:           7 (move-long-snake)
Returning from runGpg().
TDG done.
Calculated [7119] grounded tasks and [5140] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 5693 tasks, 3102 methods.
Grounded PG:
Input was [5568, 5693], output was [5568, 251].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
1653 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 123 S 0 SC 0 SM 0 NSM 0 I 0 P 2753 S 1162 A 125 M 3102
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/386/386.sas.
- State has 123 bits divided into 123 mutex groups.
- Domain contains 3915 actions.
- Domain contains 4040 tasks.
- Domain contains 3102 methods.
- The initial state contains 22 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 3980
- The problem is cyclic
- Number of cyclic SCCs: 4
- Number of cyclic SCCs of size 1: 1
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (2 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
   1s visitime    0.00s generated nodes      5016 nodes/sec    4041 cur h   52 mod.depth   14 inserts       169 dups         0 size       169 hash fail      0 hash buckets    169
Search Results
- Search time 1.40 seconds
- Visited list time 0.00 seconds
- Visited list inserts 193
- Visited list pruned 0
- Visited list contains 193
- Visited list hash collisions 0
- Visited list used hash buckets 193
- Generated 5726 search nodes
  Calculated heuristic for 5526 nodes
  One modifications 96
  Effectless actions 104
- including 96 one modification actions
- including 0 one modification methods
- and       104 progressions of effectless actions
- Generated 3941 nodes per second
- Final fringe contains 126 nodes
- Status: Solved
- Found solution of length 53
- Total costs of actions: 11
==>
172 __method_precondition_hunt_all_split[viper,px2y0,px2y3,px1y0]
903 __method_precondition_move-long-snake[viper,px2y3,px1y3,px0y0,px1y0]
904 move-long[viper,px1y3,px2y3,px0y0,px1y0]
956 __method_precondition_move-long-snake[viper,px0y2,px1y2,px0y1,px0y0]
957 move-long[viper,px1y2,px1y3,px0y1,px0y0]
1013 __method_precondition_move-long-snake[viper,px2y1,px1y1,px0y2,px0y1]
1014 move-long[viper,px1y1,px1y2,px0y2,px0y1]
1069 __method_precondition_move-long-snake[viper,px2y0,px1y0,px0y3,px0y2]
1070 move-long[viper,px1y0,px1y1,px0y3,px0y2]
1091 __noop
1092 strike[viper,px1y0,px2y0]
1849 __method_precondition_hunt_all_split[viper,px4y4,px2y0,px4y3]
5464 __method_precondition_move-long-snake[viper,px2y0,px2y1,px0y4,px0y3]
5465 move-long[viper,px2y1,px2y0,px0y4,px0y3]
5514 __method_precondition_move-long-snake[viper,px1y2,px2y2,px1y4,px0y4]
5515 move-long[viper,px2y2,px2y1,px1y4,px0y4]
5598 __method_precondition_move-long-snake[viper,px2y2,px3y2,px2y4,px1y4]
5599 move-long[viper,px3y2,px2y2,px2y4,px1y4]
5643 __method_precondition_move-long-snake[viper,px3y2,px4y2,px2y3,px2y4]
5644 move-long[viper,px4y2,px3y2,px2y3,px2y4]
5703 __method_precondition_move-long-snake[viper,px4y2,px4y3,px1y3,px2y3]
5704 move-long[viper,px4y3,px4y2,px1y3,px2y3]
5716 __noop
5717 strike[viper,px4y3,px4y4]
5723 __method_precondition_hunt_done[]
root 0
5722 hunt[] -> hunt_done 5723
5715 move[viper,px4y3,px4y3] -> move-base 5716
5702 move-long-snake_splitted_2[viper,px4y3,px4y2] -> _splitting_method_move-long-snake_splitted_2 5703 5704
5658 move[viper,px4y2,px4y3] -> move-long-snake 5702 5715
5642 move-long-snake_splitted_2[viper,px4y2,px3y2] -> _splitting_method_move-long-snake_splitted_2 5643 5644
5602 move[viper,px3y2,px4y3] -> move-long-snake 5642 5658
5597 move-long-snake_splitted_2[viper,px3y2,px2y2] -> _splitting_method_move-long-snake_splitted_2 5598 5599
5543 move[viper,px2y2,px4y3] -> move-long-snake 5597 5602
5513 move-long-snake_splitted_2[viper,px2y2,px2y1] -> _splitting_method_move-long-snake_splitted_2 5514 5515
5489 move[viper,px2y1,px4y3] -> move-long-snake 5513 5543
5463 move-long-snake_splitted_2[viper,px2y1,px2y0] -> _splitting_method_move-long-snake_splitted_2 5464 5465
5340 move[viper,px2y0,px4y3] -> move-long-snake 5463 5489
1848 _splitting_method_hunt_all_splitted_1_splitted_3[viper,px4y3,px4y4] -> _splitting_method__splitting_method_hunt_all_splitted_1_splitted_3 1849 5340
1833 hunt_all_splitted_1[viper] -> _splitting_method_hunt_all_splitted_1 1848 5717
1100 hunt[] -> hunt_all 1833 5722
1090 move[viper,px1y0,px1y0] -> move-base 1091
1068 move-long-snake_splitted_2[viper,px1y0,px1y1] -> _splitting_method_move-long-snake_splitted_2 1069 1070
1034 move[viper,px1y1,px1y0] -> move-long-snake 1068 1090
1012 move-long-snake_splitted_2[viper,px1y1,px1y2] -> _splitting_method_move-long-snake_splitted_2 1013 1014
978 move[viper,px1y2,px1y0] -> move-long-snake 1012 1034
955 move-long-snake_splitted_2[viper,px1y2,px1y3] -> _splitting_method_move-long-snake_splitted_2 956 957
923 move[viper,px1y3,px1y0] -> move-long-snake 955 978
902 move-long-snake_splitted_2[viper,px1y3,px2y3] -> _splitting_method_move-long-snake_splitted_2 903 904
871 move[viper,px2y3,px1y0] -> move-long-snake 902 923
171 _splitting_method_hunt_all_splitted_1_splitted_3[viper,px1y0,px2y0] -> _splitting_method__splitting_method_hunt_all_splitted_1_splitted_3 172 871
3 hunt_all_splitted_1[viper] -> _splitting_method_hunt_all_splitted_1 171 1092
2 hunt[] -> hunt_all 3 1100
0 __top[] -> __top_method 2
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 2.33008 MEMPEAK_KBS 3788

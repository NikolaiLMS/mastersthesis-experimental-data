pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
TUUP sort_for_px0y0
TUUP sort_for_px0y1
TUUP sort_for_px0y2
TUUP sort_for_px1y0
TUUP sort_for_px1y1
TUUP sort_for_px1y2
TUUP sort_for_px2y0
TUUP sort_for_px2y1
TUUP sort_for_px2y2
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/384/384.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/384/384.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.152ms
Contains 0.012ms
Restrict 0.034ms
MPrep 0.018ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           5 (__method_precondition_move-long-snake)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [1042] grounded tasks and [94] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           8 (move-short-snake)
 ---> Disabling potentially consistent extension checking for action:           7 (move-long-snake)
Returning from runGpg().
TDG done.
Calculated [1152] grounded tasks and [860] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 909 tasks, 517 methods.
Grounded PG:
Input was [862, 909], output was [862, 94].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
237 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 53 S 0 SC 0 SM 0 NSM 0 I 0 P 422 S 203 A 47 M 517
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/384/384.sas.
- State has 53 bits divided into 53 mutex groups.
- Domain contains 625 actions.
- Domain contains 672 tasks.
- Domain contains 517 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 656
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 1
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.004 seconds
- Visited list time 5e-05 seconds
- Visited list inserts 11
- Visited list pruned 0
- Visited list contains 11
- Visited list hash collisions 0
- Visited list used hash buckets 11
- Generated 78 search nodes
  Calculated heuristic for 51 nodes
  One modifications 12
  Effectless actions 15
- including 12 one modification actions
- including 0 one modification methods
- and       15 progressions of effectless actions
- Generated 12750 nodes per second
- Final fringe contains 21 nodes
- Status: Solved
- Found solution of length 19
- Total costs of actions: 4
==>
13 __method_precondition_hunt_all_split[viper,px0y0,px2y2,px0y1]
31 __method_precondition_move-short-snake[viper,px2y2,px2y1]
32 move-short[viper,px2y1,px2y2]
35 __method_precondition_move-short-snake[viper,px2y1,px1y1]
36 move-short[viper,px1y1,px2y1]
46 __method_precondition_move-short-snake[viper,px1y1,px0y1]
47 move-short[viper,px0y1,px1y1]
62 __noop
63 strike[viper,px0y1,px0y0]
75 __method_precondition_hunt_done[]
root 0
74 hunt[] -> hunt_done 75
61 move[viper,px0y1,px0y1] -> move-base 62
45 move[viper,px1y1,px0y1] -> move-short-snake 46 47 61
34 move[viper,px2y1,px0y1] -> move-short-snake 35 36 45
30 move[viper,px2y2,px0y1] -> move-short-snake 31 32 34
12 _splitting_method_hunt_all_splitted_1_splitted_3[viper,px0y1,px0y0] -> _splitting_method__splitting_method_hunt_all_splitted_1_splitted_3 13 30
3 hunt_all_splitted_1[viper] -> _splitting_method_hunt_all_splitted_1 12 63
2 hunt[] -> hunt_all 3 74
0 __top[] -> __top_method 2
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.175781 MEMPEAK_KBS 932

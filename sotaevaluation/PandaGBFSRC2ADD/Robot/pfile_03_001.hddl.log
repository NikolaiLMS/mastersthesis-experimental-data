pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/3/3.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/3/3.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.095ms
Contains 0.012ms
Restrict 0.019ms
MPrep 0.01ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [15] grounded tasks and [22] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [24] grounded tasks and [21] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 24 tasks, 21 methods.
Grounded PG:
Input was [15, 24], output was [15, 22].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 10 S 0 SC 0 SM 0 NSM 0 I 0 P 11 S 4 A 6 M 18
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/3/3.sas.
- State has 10 bits divided into 10 mutex groups.
- Domain contains 15 actions.
- Domain contains 21 tasks.
- Domain contains 18 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 20
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.001 seconds
- Visited list time 6.2e-05 seconds
- Visited list inserts 31
- Visited list pruned 5
- Visited list contains 26
- Visited list hash collisions 5
- Visited list used hash buckets 26
- Generated 135 search nodes
  Calculated heuristic for 105 nodes
  One modifications 17
  Effectless actions 13
- including 17 one modification actions
- including 0 one modification methods
- and       13 progressions of effectless actions
- Generated 105000 nodes per second
- Final fringe contains 4 nodes
- Status: Solved
- Found solution of length 26
- Total costs of actions: 7
==>
7 move[c,r1,d01]
27 open[r1,r3,d13]
48 move[r1,r3,d13]
55 __method_precondition_achieve-goals-pickup_split[r3,o1]
97 pickup[o1,r3]
109 move[r3,r1,d13]
118 move[r1,r2,d12]
124 __method_precondition_release-putdown_abstract_base[o1]
125 __method_precondition_release-putdown_abstract_split[r2,o1]
126 putdown[o1,r2]
130 __noop
root 0
129 achieve-goals[] -> finished 130
123 release[] -> <<release-putdown_abstract;release-putdown_abstract_splitted_2[o1];_splitting_method_release-putdown_abstract_splitted_2;1;0,-1,2,3>;putdown_abstract[];newMethod23;2;0,1,-1,3> 124 125 126 129
117 move_abstract[] -> newMethod24 118
112 release[] -> release-move 117 123
108 move_abstract[] -> newMethod24 109
101 release[] -> release-move 108 112
96 pickup_abstract[o1] -> newMethod22 97
54 achieve-goals[] -> <achieve-goals-pickup;achieve-goals-pickup_splitted_1[o1];_splitting_method_achieve-goals-pickup_splitted_1;0;-1,1,2> 55 96 101
47 move_abstract[] -> newMethod24 48
31 achieve-goals[] -> achieve-goals-move 47 54
26 open_abstract[] -> newMethod25 27
16 achieve-goals[] -> achieve-goals-open 26 31
6 move_abstract[] -> newMethod24 7
3 achieve-goals[] -> achieve-goals-move 6 16
0 __top[] -> __top_method 3
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.11084 MEMPEAK_KBS 932

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/356/356.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/356/356.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.423ms
Contains 0.227ms
Restrict 0.17ms
MPrep 0.171ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
 ---> Disabling potentially consistent extension checking for action:           15 (__method_precondition_m1_serve_base_base)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [4369] grounded tasks and [205] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
 ---> Disabling potentially consistent extension checking for action:           8 (m1_serve)
Returning from runGpg().
TDG done.
Calculated [5301] grounded tasks and [3061] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 3500 tasks, 3061 methods.
Grounded PG:
Input was [2568, 3500], output was [2568, 205].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
204 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 153 S 0 SC 0 SM 0 NSM 0 I 0 P 2245 S 17 A 269 M 2398
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/356/356.sas.
- State has 153 bits divided into 153 mutex groups.
- Domain contains 2262 actions.
- Domain contains 2531 tasks.
- Domain contains 2398 methods.
- The initial state contains 46 set bits.
- The initial task is "__top[]".
- State-based goal contains 13 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 2531
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (1 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 1.118 seconds
- Visited list time 0.005045 seconds
- Visited list inserts 697
- Visited list pruned 340
- Visited list contains 357
- Visited list hash collisions 340
- Visited list used hash buckets 357
- Generated 8781 search nodes
  Calculated heuristic for 4059 nodes
  One modifications 2311
  Effectless actions 2411
- including 2311 one modification actions
- including 0 one modification methods
- and       2411 progressions of effectless actions
- Generated 3630 nodes per second
- Final fringe contains 2488 nodes
- Status: Solved
- Found solution of length 118
- Total costs of actions: 65
==>
12 __method_precondition_m0_serve_base_base[child13,sandw7]
44 make_sandwich_no_gluten[sandw7,bread3,content10]
326 put_on_tray[sandw7,tray1]
327 move_tray[tray1,kitchen,table2]
328 serve_sandwich_no_gluten[sandw7,child1,tray1,table2]
329 move_tray[tray1,table2,kitchen]
1121 __method_precondition_m0_serve_base_base[child13,sandw5]
1338 make_sandwich[sandw5,bread8,content3]
1789 put_on_tray[sandw5,tray3]
1790 move_tray[tray3,kitchen,table3]
1791 serve_sandwich[sandw5,child2,tray3,table3]
1792 move_tray[tray3,table3,kitchen]
4016 __method_precondition_m0_serve_base_base[child13,sandw13]
4468 make_sandwich[sandw13,bread13,content7]
5265 put_on_tray[sandw13,tray1]
5266 move_tray[tray1,kitchen,table3]
5267 serve_sandwich[sandw13,child3,tray1,table3]
5268 move_tray[tray1,table3,kitchen]
5560 __method_precondition_m0_serve_base_base[child13,sandw3]
6815 make_sandwich_no_gluten[sandw3,bread5,content6]
6860 put_on_tray[sandw3,tray3]
6861 move_tray[tray3,kitchen,table3]
6862 serve_sandwich_no_gluten[sandw3,child4,tray3,table3]
6863 move_tray[tray3,table3,kitchen]
7163 __method_precondition_m0_serve_base_base[child13,sandw8]
7572 make_sandwich[sandw8,bread7,content9]
7655 put_on_tray[sandw8,tray2]
7656 move_tray[tray2,kitchen,table2]
7657 serve_sandwich[sandw8,child5,tray2,table2]
7658 move_tray[tray2,table2,kitchen]
7682 __method_precondition_m0_serve_base_base[child13,sandw9]
7753 make_sandwich[sandw9,bread4,content8]
7783 put_on_tray[sandw9,tray2]
7784 move_tray[tray2,kitchen,table1]
7785 serve_sandwich[sandw9,child6,tray2,table1]
7786 move_tray[tray2,table1,kitchen]
7824 __method_precondition_m0_serve_base_base[child13,sandw4]
7839 make_sandwich[sandw4,bread2,content1]
7916 put_on_tray[sandw4,tray1]
7917 move_tray[tray1,kitchen,table3]
7918 serve_sandwich[sandw4,child7,tray1,table3]
7919 move_tray[tray1,table3,kitchen]
7930 __method_precondition_m0_serve_base_base[child13,sandw14]
7964 make_sandwich_no_gluten[sandw14,bread11,content4]
7992 put_on_tray[sandw14,tray2]
7993 move_tray[tray2,kitchen,table1]
7994 serve_sandwich_no_gluten[sandw14,child8,tray2,table1]
7995 move_tray[tray2,table1,kitchen]
8255 __method_precondition_m0_serve_base_base[child13,sandw17]
8378 make_sandwich[sandw17,bread10,content5]
8424 put_on_tray[sandw17,tray2]
8425 move_tray[tray2,kitchen,table1]
8426 serve_sandwich[sandw17,child9,tray2,table1]
8427 move_tray[tray2,table1,kitchen]
8446 __method_precondition_m0_serve_base_base[child13,sandw15]
8497 make_sandwich[sandw15,bread9,content13]
8542 put_on_tray[sandw15,tray3]
8543 move_tray[tray3,kitchen,table3]
8544 serve_sandwich[sandw15,child10,tray3,table3]
8545 move_tray[tray3,table3,kitchen]
8547 __method_precondition_m0_serve_base_base[child13,sandw6]
8615 make_sandwich[sandw6,bread6,content12]
8641 put_on_tray[sandw6,tray2]
8642 move_tray[tray2,kitchen,table1]
8643 serve_sandwich[sandw6,child11,tray2,table1]
8644 move_tray[tray2,table1,kitchen]
8669 __method_precondition_m0_serve_base_base[child13,sandw12]
8695 make_sandwich_no_gluten[sandw12,bread1,content11]
8703 put_on_tray[sandw12,tray2]
8704 move_tray[tray2,kitchen,table1]
8705 serve_sandwich_no_gluten[sandw12,child12,tray2,table1]
8706 move_tray[tray2,table1,kitchen]
8734 __method_precondition_m0_serve_base_base[child13,sandw2]
8741 make_sandwich_no_gluten[sandw2,bread12,content2]
8776 put_on_tray[sandw2,tray3]
8777 move_tray[tray3,kitchen,table1]
8778 serve_sandwich_no_gluten[sandw2,child13,tray3,table1]
8779 move_tray[tray3,table1,kitchen]
root 0
8775 m0_serve_splitted_5[sandw2,kitchen,kitchen,child13,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw2,child13,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 8776 8777 8778 8779
8740 m0_serve_splitted_1[sandw2] -> _splitting_method_m0_serve_splitted_1 8741
8733 serve[child13] -> m0_serve 8734 8740 8775
8702 m0_serve_splitted_5[sandw12,kitchen,kitchen,child12,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw12,child12,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 8703 8704 8705 8706
8694 m0_serve_splitted_1[sandw12] -> _splitting_method_m0_serve_splitted_1 8695
8668 serve[child12] -> m0_serve 8669 8694 8702
8640 m1_serve_splitted_6[sandw6,kitchen,kitchen,child11,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw6,child11,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8641 8642 8643 8644
8614 m1_serve_splitted_2[sandw6] -> _splitting_method_m1_serve_splitted_2 8615
8546 serve[child11] -> m1_serve 8547 8614 8640
8541 m1_serve_splitted_6[sandw15,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw15,child10,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8542 8543 8544 8545
8496 m1_serve_splitted_2[sandw15] -> _splitting_method_m1_serve_splitted_2 8497
8445 serve[child10] -> m1_serve 8446 8496 8541
8423 m1_serve_splitted_6[sandw17,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw17,child9,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8424 8425 8426 8427
8377 m1_serve_splitted_2[sandw17] -> _splitting_method_m1_serve_splitted_2 8378
8254 serve[child9] -> m1_serve 8255 8377 8423
7991 m0_serve_splitted_5[sandw14,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw14,child8,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 7992 7993 7994 7995
7963 m0_serve_splitted_1[sandw14] -> _splitting_method_m0_serve_splitted_1 7964
7929 serve[child8] -> m0_serve 7930 7963 7991
7915 m1_serve_splitted_6[sandw4,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw4,child7,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 7916 7917 7918 7919
7838 m1_serve_splitted_2[sandw4] -> _splitting_method_m1_serve_splitted_2 7839
7823 serve[child7] -> m1_serve 7824 7838 7915
7782 m1_serve_splitted_6[sandw9,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw9,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 7783 7784 7785 7786
7752 m1_serve_splitted_2[sandw9] -> _splitting_method_m1_serve_splitted_2 7753
7681 serve[child6] -> m1_serve 7682 7752 7782
7654 m1_serve_splitted_6[sandw8,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw8,child5,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 7655 7656 7657 7658
7571 m1_serve_splitted_2[sandw8] -> _splitting_method_m1_serve_splitted_2 7572
7162 serve[child5] -> m1_serve 7163 7571 7654
6859 m0_serve_splitted_5[sandw3,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw3,child4,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 6860 6861 6862 6863
6814 m0_serve_splitted_1[sandw3] -> _splitting_method_m0_serve_splitted_1 6815
5559 serve[child4] -> m0_serve 5560 6814 6859
5264 m1_serve_splitted_6[sandw13,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw13,child3,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 5265 5266 5267 5268
4467 m1_serve_splitted_2[sandw13] -> _splitting_method_m1_serve_splitted_2 4468
4015 serve[child3] -> m1_serve 4016 4467 5264
1788 m1_serve_splitted_6[sandw5,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw5,child2,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 1789 1790 1791 1792
1337 m1_serve_splitted_2[sandw5] -> _splitting_method_m1_serve_splitted_2 1338
1120 serve[child2] -> m1_serve 1121 1337 1788
325 m0_serve_splitted_5[sandw7,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw7,child1,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 326 327 328 329
43 m0_serve_splitted_1[sandw7] -> _splitting_method_m0_serve_splitted_1 44
11 serve[child1] -> m0_serve 12 43 325
0 __top[] -> __top_method 11 1120 4015 5559 7162 7681 7823 7929 8254 8445 8546 8668 8733
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 1.37012 MEMPEAK_KBS 3784

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/410/410.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/410/410.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.22ms
Contains 0.035ms
Restrict 0.03ms
MPrep 0.035ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [75] grounded tasks and [37] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [119] grounded tasks and [72] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 72 tasks, 41 methods.
Grounded PG:
Input was [49, 72], output was [47, 31].
Grounded TDG:
Input was [41, 47], output was [40, 47].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
9 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 17 S 0 SC 0 SM 0 NSM 0 I 0 P 18 S 14 A 15 M 32
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/410/410.sas.
- State has 17 bits divided into 17 mutex groups.
- Domain contains 32 actions.
- Domain contains 47 tasks.
- Domain contains 32 methods.
- The initial state contains 5 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 47
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 3
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.001 seconds
- Visited list time 9.4e-05 seconds
- Visited list inserts 27
- Visited list pruned 0
- Visited list contains 27
- Visited list hash collisions 0
- Visited list used hash buckets 27
- Generated 103 search nodes
  Calculated heuristic for 64 nodes
  One modifications 19
  Effectless actions 20
- including 19 one modification actions
- including 0 one modification methods
- and       20 progressions of effectless actions
- Generated 64000 nodes per second
- Final fringe contains 10 nodes
- Status: Solved
- Found solution of length 56
- Total costs of actions: 15
==>
3 __method_precondition_m_construct_factory[last_factory,resource_1,last_location]
10 __method_precondition_m_construct_factory[factory_1,resource_0,location_1]
13 produce-without-demands[resource_0,factory_0,location_0]
16 __method_precondition_m_deliver_resource[resource_0,location_0]
19 __method_precondition_m_goto_split[location_0,location_1]
20 pickup[resource_0,location_0]
28 __method_precondition_m_goto_split[location_0,location_1]
29 move[location_0,location_1]
31 __method_precondition_m_already_there[location_1]
32 drop[resource_0,location_1]
33 construct[factory_1,resource_0,location_1]
45 __method_precondition_m_factory_already_constructed[factory_1,location_1]
48 produce-without-demands[resource_0,factory_0,location_0]
51 __method_precondition_m_deliver_resource[resource_0,location_0]
59 __method_precondition_m_already_there[location_1]
60 move[location_1,location_0]
64 __method_precondition_m_goto_split[location_0,location_1]
65 pickup[resource_0,location_0]
73 __method_precondition_m_goto_split[location_0,location_1]
74 move[location_0,location_1]
76 __method_precondition_m_already_there[location_1]
77 drop[resource_0,location_1]
78 produce[resource_1,resource_0,factory_1,location_1]
81 __method_precondition_m_deliver_resource[resource_1,location_1]
84 __method_precondition_m_already_there[location_1]
85 pickup[resource_1,location_1]
90 __method_precondition_m_already_there[location_1]
91 move[location_1,last_location]
98 __method_precondition_m_goto_split[last_location,location_1]
99 drop[resource_1,last_location]
100 construct[last_factory,resource_1,last_location]
root 0
97 goto[last_location] -> m_already_there 98
89 m_goto_splitted_4[] -> _splitting_method_m_goto_splitted_4 90 91
88 goto[last_location] -> m_goto 89 97
83 goto[location_1] -> m_already_there 84
80 m_deliver_resource_splitted_1[resource_1] -> _splitting_method_m_deliver_resource_splitted_1 81 83 85
75 goto[location_1] -> m_already_there 76
72 m_goto_splitted_4[] -> _splitting_method_m_goto_splitted_4 73 74
68 goto[location_1] -> m_goto 72 75
63 goto[location_0] -> m_already_there 64
58 m_goto_splitted_4[] -> _splitting_method_m_goto_splitted_4 59 60
54 goto[location_0] -> m_goto 58 63
50 m_deliver_resource_splitted_1[resource_0] -> _splitting_method_m_deliver_resource_splitted_1 51 54 65
47 get_resource[resource_0,location_1] -> <<<<<m_get_resource;m_get_resource_splitted_3[resource_0];_splitting_method_m_get_resource_splitted_3;0;-1,1,2>;_splitting_method_m_get_resource_splitted_3_splitted_6[factory_0];_splitting_method__splitting_method_m_get_resource_splitted_3_splitted_6;0;-1,1,2>;construct_factory[factory_0,location_0];m_factory_already_constructed;0;1,2>;produce_resource[resource_0];m_produce_resource;0;-1,1>;deliver_resource[resource_0,location_1];m_deliver_resource;1;0,-1,-2,-3> 48 50 68 77
44 produce_resource[resource_1] -> m_get_and_produce_resource 45 47 78
30 goto[location_1] -> m_already_there 31
27 m_goto_splitted_4[] -> _splitting_method_m_goto_splitted_4 28 29
23 goto[location_1] -> m_goto 27 30
18 goto[location_0] -> m_already_there 19
15 m_deliver_resource_splitted_1[resource_0] -> _splitting_method_m_deliver_resource_splitted_1 16 18 20
12 get_resource[resource_0,location_1] -> <<<<<m_get_resource;m_get_resource_splitted_3[resource_0];_splitting_method_m_get_resource_splitted_3;0;-1,1,2>;_splitting_method_m_get_resource_splitted_3_splitted_6[factory_0];_splitting_method__splitting_method_m_get_resource_splitted_3_splitted_6;0;-1,1,2>;construct_factory[factory_0,location_0];m_factory_already_constructed;0;1,2>;produce_resource[resource_0];m_produce_resource;0;-1,1>;deliver_resource[resource_0,location_1];m_deliver_resource;1;0,-1,-2,-3> 13 15 23 32
9 construct_factory[factory_1,location_1] -> m_construct_factory 10 12 33
7 _splitting_method_m_get_resource_splitted_3_splitted_6[factory_1] -> _splitting_method__splitting_method_m_get_resource_splitted_3_splitted_6 9
5 get_resource[resource_1,last_location] -> <<m_get_resource;deliver_resource[resource_1,last_location];m_deliver_resource;2;0,1,-1,-2,-3>;m_get_resource_splitted_3[resource_1];_splitting_method_m_get_resource_splitted_3;0;-1,1,2,3,4> 7 44 80 88 99
2 construct_factory[last_factory,last_location] -> m_construct_factory 3 5 100
0 __top[] -> __top_method 2
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.130859 MEMPEAK_KBS 932

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
TUUP sort_for_b1
TUUP sort_for_b2
TUUP sort_for_b3
TUUP sort_for_b4
TUUP sort_for_b5
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/822/822.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/822/822.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.703ms
Contains 0.081ms
Restrict 0.118ms
MPrep 0.096ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [489] grounded tasks and [86] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [605] grounded tasks and [553] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 426 tasks, 421 methods.
Grounded PG:
Input was [332, 426], output was [206, 68].
Grounded TDG:
Input was [421, 206], output was [289, 206].
Grounded PG:
Input was [200, 68], output was [182, 62].
Grounded TDG:
Input was [283, 182], output was [265, 182].
Grounded PG:
Input was [181, 62], output was [181, 61].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 56 S 0 SC 0 SM 0 NSM 0 I 0 P 117 S 63 A 73 M 252
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/822/822.sas.
- State has 56 bits divided into 56 mutex groups.
- Domain contains 180 actions.
- Domain contains 253 tasks.
- Domain contains 252 methods.
- The initial state contains 15 set bits.
- The initial task is "__top[]".
- State-based goal contains 6 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 247
- The problem is cyclic
- Number of cyclic SCCs: 6
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.013 seconds
- Visited list time 0.001008 seconds
- Visited list inserts 249
- Visited list pruned 27
- Visited list contains 222
- Visited list hash collisions 27
- Visited list used hash buckets 222
- Generated 888 search nodes
  Calculated heuristic for 756 nodes
  One modifications 80
  Effectless actions 52
- including 80 one modification actions
- including 0 one modification methods
- and       52 progressions of effectless actions
- Generated 58153 nodes per second
- Final fringe contains 28 nodes
- Status: Solved
- Found solution of length 96
- Total costs of actions: 23
==>
8 mark_done[b4]
28 __method_precondition_unstack-block[b2,b1]
33 unstack[b2,b1,arm1]
41 __method_precondition_release-table[b2,arm1]
48 putdown[b2,arm1]
115 __method_precondition_unstack-block[b1,b3]
121 unstack[b1,b3,arm1]
127 __method_precondition_release-table[b1,arm1]
137 putdown[b1,arm1]
214 __method_precondition_unstack-block[b3,b5]
224 unstack[b3,b5,arm1]
231 __method_precondition_release-table[b3,arm1]
239 putdown[b3,arm1]
309 __method_precondition_unstack-block[b5,b4]
315 unstack[b5,b4,arm1]
318 __method_precondition_release-table-done[b5,arm1]
319 delete_goal_on_table[b5]
320 mark_done[b5]
326 putdown[b5,arm1]
345 __method_precondition_pickup-ready-block[b3,b4]
357 pickup[b3,arm1]
377 __method_precondition_release-stack[b3,b4,arm1]
378 delete_goal_on[b3,b4]
379 mark_done[b3]
387 stack[b3,b4,arm1]
552 __method_precondition_pickup-ready-block[b2,b3]
558 pickup[b2,arm1]
592 __method_precondition_release-stack[b2,b3,arm1]
593 delete_goal_on[b2,b3]
594 mark_done[b2]
596 stack[b2,b3,arm1]
762 __method_precondition_pickup-ready-block[b1,b5]
779 pickup[b1,arm1]
827 __method_precondition_release-stack[b1,b5,arm1]
828 delete_goal_on[b1,b5]
829 mark_done[b1]
834 stack[b1,b5,arm1]
840 __method_precondition_set_done[]
846 __method_precondition_set_done[]
852 __method_precondition_set_done[]
858 __method_precondition_set_done[]
867 __method_precondition_set_done[]
879 __method_precondition_set_done[]
root 0
878 achieve-goals[arm6] -> set_done 879
866 achieve-goals[arm5] -> set_done 867
857 achieve-goals[arm4] -> set_done 858
851 achieve-goals[arm3] -> set_done 852
845 achieve-goals[arm2] -> set_done 846
839 achieve-goals[arm1] -> set_done 840
833 stack_abstract[b1,b5] -> newMethod15 834
826 release-stack_splitted_5[arm1] -> _splitting_method_release-stack_splitted_5 827 828 829 833
784 release[arm1] -> release-stack 826 839
778 acquire_abstract[b1,arm1] -> newMethod13 779
761 pickup-ready-block_splitted_3[arm1] -> <_splitting_method_pickup-ready-block_splitted_3;_splitting_method_pickup-ready-block_splitted_3_splitted_9[b1];_splitting_method__splitting_method_pickup-ready-block_splitted_3_splitted_9;0;-1,1> 762 778
605 achieve-goals[arm1] -> pickup-ready-block 761 784
595 stack_abstract[b2,b3] -> newMethod15 596
591 release-stack_splitted_5[arm1] -> _splitting_method_release-stack_splitted_5 592 593 594 595
563 release[arm1] -> release-stack 591 605
557 acquire_abstract[b2,arm1] -> newMethod13 558
551 pickup-ready-block_splitted_3[arm1] -> <_splitting_method_pickup-ready-block_splitted_3;_splitting_method_pickup-ready-block_splitted_3_splitted_9[b2];_splitting_method__splitting_method_pickup-ready-block_splitted_3_splitted_9;0;-1,1> 552 557
391 achieve-goals[arm1] -> pickup-ready-block 551 563
386 stack_abstract[b3,b4] -> newMethod15 387
376 release-stack_splitted_5[arm1] -> _splitting_method_release-stack_splitted_5 377 378 379 386
362 release[arm1] -> release-stack 376 391
356 acquire_abstract[b3,arm1] -> newMethod13 357
344 pickup-ready-block_splitted_3[arm1] -> <_splitting_method_pickup-ready-block_splitted_3;_splitting_method_pickup-ready-block_splitted_3_splitted_9[b3];_splitting_method__splitting_method_pickup-ready-block_splitted_3_splitted_9;0;-1,1> 345 356
332 achieve-goals[arm1] -> pickup-ready-block 344 362
325 putdown_abstract[b5] -> newMethod14 326
317 release[arm1] -> <release-table-done;release-table-done_splitted_6[arm1];_splitting_method_release-table-done_splitted_6;0;-1,-2,-3,-4,1> 318 319 320 325 332
314 acquire_abstract[b5,arm1] -> newMethod16 315
308 unstack-block_splitted_4[arm1] -> <_splitting_method_unstack-block_splitted_4;_splitting_method_unstack-block_splitted_4_splitted_10[b5];_splitting_method__splitting_method_unstack-block_splitted_4_splitted_10;0;-1,1> 309 314
244 achieve-goals[arm1] -> unstack-block 308 317
238 putdown_abstract[b3] -> newMethod14 239
230 release-table_splitted_7[arm1] -> _splitting_method_release-table_splitted_7 231 238
225 release[arm1] -> release-table 230 244
223 acquire_abstract[b3,arm1] -> newMethod16 224
213 _splitting_method_unstack-block_splitted_4_splitted_10[b3] -> _splitting_method__splitting_method_unstack-block_splitted_4_splitted_10 214
210 unstack-block_splitted_4[arm1] -> _splitting_method_unstack-block_splitted_4 213 223
142 achieve-goals[arm1] -> unstack-block 210 225
136 putdown_abstract[b1] -> newMethod14 137
126 release-table_splitted_7[arm1] -> _splitting_method_release-table_splitted_7 127 136
123 release[arm1] -> release-table 126 142
120 acquire_abstract[b1,arm1] -> newMethod16 121
114 _splitting_method_unstack-block_splitted_4_splitted_10[b1] -> _splitting_method__splitting_method_unstack-block_splitted_4_splitted_10 115
112 unstack-block_splitted_4[arm1] -> _splitting_method_unstack-block_splitted_4 114 120
53 achieve-goals[arm1] -> unstack-block 112 123
47 putdown_abstract[b2] -> newMethod14 48
40 release-table_splitted_7[arm1] -> _splitting_method_release-table_splitted_7 41 47
34 release[arm1] -> release-table 40 53
32 acquire_abstract[b2,arm1] -> newMethod16 33
27 _splitting_method_unstack-block_splitted_4_splitted_10[b2] -> _splitting_method__splitting_method_unstack-block_splitted_4_splitted_10 28
20 unstack-block_splitted_4[arm1] -> _splitting_method_unstack-block_splitted_4 27 32
13 achieve-goals[arm1] -> unstack-block 20 34
7 mark-done-table_splitted_1[] -> _splitting_method_mark-done-table_splitted_1 8
2 achieve-goals[arm1] -> mark-done-table 7 13
0 __top[] -> __top_method 2 845 851 857 866 878
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.178223 MEMPEAK_KBS 932

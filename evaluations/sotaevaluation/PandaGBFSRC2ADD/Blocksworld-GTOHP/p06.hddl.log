pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/166/166.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/166/166.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.806ms
Contains 0.119ms
Restrict 0.119ms
MPrep 0.107ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           8 (__method_precondition_m5_do_move)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [162] grounded tasks and [99] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [238] grounded tasks and [150] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 238 tasks, 150 methods.
Grounded PG:
Input was [162, 238], output was [162, 99].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
12 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 96 S 0 SC 0 SM 0 NSM 0 I 0 P 63 S 87 A 67 M 141
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/166/166.sas.
- State has 96 bits divided into 96 mutex groups.
- Domain contains 150 actions.
- Domain contains 217 tasks.
- Domain contains 141 methods.
- The initial state contains 42 set bits.
- The initial task is "__top[]".
- State-based goal contains 11 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 203
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.006 seconds
- Visited list time 0.000595 seconds
- Visited list inserts 124
- Visited list pruned 0
- Visited list contains 124
- Visited list hash collisions 0
- Visited list used hash buckets 124
- Generated 538 search nodes
  Calculated heuristic for 273 nodes
  One modifications 88
  Effectless actions 177
- including 88 one modification actions
- including 0 one modification methods
- and       177 progressions of effectless actions
- Generated 45500 nodes per second
- Final fringe contains 2 nodes
- Status: Solved
- Found solution of length 219
- Total costs of actions: 79
==>
3 __method_precondition_m1_do_put_on[]
6 __method_precondition_m7_do_clear[b14,b1]
10 __method_precondition_m7_do_clear[b1,b7]
15 __method_precondition_m7_do_clear[b7,b15]
17 __method_precondition_m6_do_clear[b15]
18 nop[]
19 unstack[b15,b7]
20 put-down[b15]
21 unstack[b7,b1]
22 put-down[b7]
23 unstack[b1,b14]
24 put-down[b1]
27 __method_precondition_m6_do_clear[b7]
28 nop[]
32 __method_precondition_m6_do_clear[b7]
33 nop[]
36 __method_precondition_m4_do_move[b14,b7]
37 pick-up[b14]
38 stack[b14,b7]
42 __method_precondition_m1_do_put_on[]
44 __method_precondition_m6_do_clear[b15]
45 nop[]
48 __method_precondition_m6_do_clear[b14]
49 nop[]
53 __method_precondition_m6_do_clear[b14]
54 nop[]
60 __method_precondition_m4_do_move[b15,b14]
61 pick-up[b15]
62 stack[b15,b14]
66 __method_precondition_m1_do_put_on[]
68 __method_precondition_m6_do_clear[b5]
69 nop[]
72 __method_precondition_m6_do_clear[b15]
73 nop[]
76 __method_precondition_m6_do_clear[b15]
77 nop[]
82 __method_precondition_m5_do_move[b5,b15]
85 unstack[b5,b11]
86 stack[b5,b15]
89 __method_precondition_m1_do_put_on[]
91 __method_precondition_m6_do_clear[b1]
92 nop[]
96 __method_precondition_m6_do_clear[b5]
97 nop[]
119 __method_precondition_m6_do_clear[b5]
120 nop[]
124 __method_precondition_m4_do_move[b1,b5]
125 pick-up[b1]
126 stack[b1,b5]
130 __method_precondition_m1_do_put_on[]
158 __method_precondition_m7_do_clear[b8,b9]
164 __method_precondition_m7_do_clear[b9,b6]
171 __method_precondition_m7_do_clear[b6,b2]
179 __method_precondition_m7_do_clear[b2,b4]
187 __method_precondition_m7_do_clear[b4,b3]
193 __method_precondition_m6_do_clear[b3]
194 nop[]
195 unstack[b3,b4]
196 put-down[b3]
197 unstack[b4,b2]
198 put-down[b4]
199 unstack[b2,b6]
200 put-down[b2]
201 unstack[b6,b9]
202 put-down[b6]
203 unstack[b9,b8]
204 put-down[b9]
207 __method_precondition_m6_do_clear[b1]
208 nop[]
212 __method_precondition_m6_do_clear[b1]
213 nop[]
217 __method_precondition_m4_do_move[b8,b1]
218 pick-up[b8]
219 stack[b8,b1]
223 __method_precondition_m1_do_put_on[]
229 __method_precondition_m6_do_clear[b2]
230 nop[]
235 __method_precondition_m7_do_clear[b13,b12]
238 __method_precondition_m6_do_clear[b12]
239 nop[]
240 unstack[b12,b13]
241 put-down[b12]
247 __method_precondition_m2_do_on_table[b13]
248 unstack[b13,b10]
249 put-down[b13]
251 __method_precondition_m4_do_move[b2,b13]
252 pick-up[b2]
253 stack[b2,b13]
257 __method_precondition_m1_do_put_on[]
267 __method_precondition_m6_do_clear[b9]
268 nop[]
271 __method_precondition_m6_do_clear[b2]
272 nop[]
276 __method_precondition_m6_do_clear[b2]
277 nop[]
281 __method_precondition_m4_do_move[b9,b2]
282 pick-up[b9]
283 stack[b9,b2]
287 __method_precondition_m1_do_put_on[]
315 __method_precondition_m6_do_clear[b12]
316 nop[]
323 __method_precondition_m6_do_clear[b6]
324 nop[]
328 __method_precondition_m6_do_clear[b6]
329 nop[]
332 __method_precondition_m4_do_move[b12,b6]
333 pick-up[b12]
334 stack[b12,b6]
338 __method_precondition_m1_do_put_on[]
361 __method_precondition_m6_do_clear[b3]
362 nop[]
365 __method_precondition_m6_do_clear[b12]
366 nop[]
369 __method_precondition_m6_do_clear[b12]
370 nop[]
374 __method_precondition_m4_do_move[b3,b12]
375 pick-up[b3]
376 stack[b3,b12]
380 __method_precondition_m1_do_put_on[]
407 __method_precondition_m6_do_clear[b4]
408 nop[]
412 __method_precondition_m6_do_clear[b3]
413 nop[]
416 __method_precondition_m6_do_clear[b3]
417 nop[]
425 __method_precondition_m4_do_move[b4,b3]
426 pick-up[b4]
427 stack[b4,b3]
431 __method_precondition_m1_do_put_on[]
459 __method_precondition_m3_do_on_table[b11]
460 nop[]
464 __method_precondition_m6_do_clear[b4]
465 nop[]
473 __method_precondition_m6_do_clear[b4]
474 nop[]
478 __method_precondition_m4_do_move[b11,b4]
479 pick-up[b11]
480 stack[b11,b4]
484 __method_precondition_m1_do_put_on[]
513 __method_precondition_m6_do_clear[b10]
514 nop[]
517 __method_precondition_m3_do_on_table[b11]
518 nop[]
522 __method_precondition_m3_do_on_table[b11]
523 nop[]
533 __method_precondition_m4_do_move[b10,b11]
534 pick-up[b10]
535 stack[b10,b11]
root 0
532 do_move[b10,b11] -> m4_do_move 533 534 535
521 do_on_table[b11] -> m3_do_on_table 522 523
516 do_clear[b11] -> m6_do_clear 517 518
512 do_clear[b10] -> m6_do_clear 513 514
483 do_put_on[b10,b11] -> m1_do_put_on 484 512 516 521 532
477 do_move[b11,b4] -> m4_do_move 478 479 480
472 do_on_table[b4] -> m3_do_on_table 473 474
463 do_clear[b4] -> m6_do_clear 464 465
458 do_clear[b11] -> m6_do_clear 459 460
430 do_put_on[b11,b4] -> m1_do_put_on 431 458 463 472 477
424 do_move[b4,b3] -> m4_do_move 425 426 427
415 do_on_table[b3] -> m3_do_on_table 416 417
411 do_clear[b3] -> m6_do_clear 412 413
406 do_clear[b4] -> m6_do_clear 407 408
379 do_put_on[b4,b3] -> m1_do_put_on 380 406 411 415 424
373 do_move[b3,b12] -> m4_do_move 374 375 376
368 do_on_table[b12] -> m3_do_on_table 369 370
364 do_clear[b12] -> m6_do_clear 365 366
360 do_clear[b3] -> m6_do_clear 361 362
337 do_put_on[b3,b12] -> m1_do_put_on 338 360 364 368 373
331 do_move[b12,b6] -> m4_do_move 332 333 334
327 do_on_table[b6] -> m3_do_on_table 328 329
322 do_clear[b6] -> m6_do_clear 323 324
314 do_clear[b12] -> m6_do_clear 315 316
286 do_put_on[b12,b6] -> m1_do_put_on 287 314 322 327 331
280 do_move[b9,b2] -> m4_do_move 281 282 283
275 do_on_table[b2] -> m3_do_on_table 276 277
270 do_clear[b2] -> m6_do_clear 271 272
266 do_clear[b9] -> m6_do_clear 267 268
256 do_put_on[b9,b2] -> m1_do_put_on 257 266 270 275 280
250 do_move[b2,b13] -> m4_do_move 251 252 253
246 do_on_table[b13] -> <m2_do_on_table;m2_do_on_table_splitted_2[b13];_splitting_method_m2_do_on_table_splitted_2;1;0,-1,2> 247 248 249
237 do_clear[b12] -> m6_do_clear 238 239
234 do_clear[b13] -> m7_do_clear 235 237 240 241
228 do_clear[b2] -> m6_do_clear 229 230
222 do_put_on[b2,b13] -> m1_do_put_on 223 228 234 246 250
216 do_move[b8,b1] -> m4_do_move 217 218 219
211 do_on_table[b1] -> m3_do_on_table 212 213
206 do_clear[b1] -> m6_do_clear 207 208
192 do_clear[b3] -> m6_do_clear 193 194
186 do_clear[b4] -> m7_do_clear 187 192 195 196
178 do_clear[b2] -> m7_do_clear 179 186 197 198
170 do_clear[b6] -> m7_do_clear 171 178 199 200
163 do_clear[b9] -> m7_do_clear 164 170 201 202
157 do_clear[b8] -> m7_do_clear 158 163 203 204
129 do_put_on[b8,b1] -> m1_do_put_on 130 157 206 211 216
123 do_move[b1,b5] -> m4_do_move 124 125 126
118 do_on_table[b5] -> m3_do_on_table 119 120
95 do_clear[b5] -> m6_do_clear 96 97
90 do_clear[b1] -> m6_do_clear 91 92
88 do_put_on[b1,b5] -> m1_do_put_on 89 90 95 118 123
84 m5_do_move_splitted_1[b5] -> _splitting_method_m5_do_move_splitted_1 85
81 do_move[b5,b15] -> m5_do_move 82 84 86
75 do_on_table[b15] -> m3_do_on_table 76 77
71 do_clear[b15] -> m6_do_clear 72 73
67 do_clear[b5] -> m6_do_clear 68 69
65 do_put_on[b5,b15] -> m1_do_put_on 66 67 71 75 81
59 do_move[b15,b14] -> m4_do_move 60 61 62
52 do_on_table[b14] -> m3_do_on_table 53 54
47 do_clear[b14] -> m6_do_clear 48 49
43 do_clear[b15] -> m6_do_clear 44 45
41 do_put_on[b15,b14] -> m1_do_put_on 42 43 47 52 59
35 do_move[b14,b7] -> m4_do_move 36 37 38
31 do_on_table[b7] -> m3_do_on_table 32 33
26 do_clear[b7] -> m6_do_clear 27 28
16 do_clear[b15] -> m6_do_clear 17 18
14 do_clear[b7] -> m7_do_clear 15 16 19 20
9 do_clear[b1] -> m7_do_clear 10 14 21 22
5 do_clear[b14] -> m7_do_clear 6 9 23 24
2 do_put_on[b14,b7] -> m1_do_put_on 3 5 26 31 35
0 __top[] -> __top_method 2 41 65 88 129 222 256 286 337 379 430 483
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.279785 MEMPEAK_KBS 932

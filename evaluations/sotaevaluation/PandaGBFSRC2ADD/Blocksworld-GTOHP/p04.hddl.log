pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/182/182.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/182/182.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.585ms
Contains 0.08ms
Restrict 0.086ms
MPrep 0.079ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [114] grounded tasks and [73] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [166] grounded tasks and [104] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 166 tasks, 104 methods.
Grounded PG:
Input was [114, 166], output was [114, 73].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
8 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 67 S 0 SC 0 SM 0 NSM 0 I 0 P 45 S 61 A 46 M 98
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/182/182.sas.
- State has 67 bits divided into 67 mutex groups.
- Domain contains 106 actions.
- Domain contains 152 tasks.
- Domain contains 98 methods.
- The initial state contains 30 set bits.
- The initial task is "__top[]".
- State-based goal contains 7 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 143
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.012 seconds
- Visited list time 0.001436 seconds
- Visited list inserts 288
- Visited list pruned 1
- Visited list contains 287
- Visited list hash collisions 1
- Visited list used hash buckets 287
- Generated 1328 search nodes
  Calculated heuristic for 644 nodes
  One modifications 206
  Effectless actions 478
- including 206 one modification actions
- including 0 one modification methods
- and       478 progressions of effectless actions
- Generated 53666 nodes per second
- Final fringe contains 63 nodes
- Status: Solved
- Found solution of length 170
- Total costs of actions: 62
==>
3 __method_precondition_m1_do_put_on[]
6 __method_precondition_m7_do_clear[b10,b3]
10 __method_precondition_m7_do_clear[b3,b8]
13 __method_precondition_m7_do_clear[b8,b11]
17 __method_precondition_m7_do_clear[b11,b6]
20 __method_precondition_m7_do_clear[b6,b7]
21 __method_precondition_m6_do_clear[b7]
22 nop[]
23 unstack[b7,b6]
24 put-down[b7]
25 unstack[b6,b11]
26 put-down[b6]
27 unstack[b11,b8]
28 put-down[b11]
29 unstack[b8,b3]
30 put-down[b8]
31 unstack[b3,b10]
32 put-down[b3]
35 __method_precondition_m6_do_clear[b6]
36 nop[]
40 __method_precondition_m6_do_clear[b6]
41 nop[]
45 __method_precondition_m5_do_move[b10,b6]
47 unstack[b10,b1]
48 stack[b10,b6]
52 __method_precondition_m1_do_put_on[]
55 __method_precondition_m7_do_clear[b5,b4]
59 __method_precondition_m7_do_clear[b4,b9]
63 __method_precondition_m7_do_clear[b9,b2]
66 __method_precondition_m6_do_clear[b2]
67 nop[]
68 unstack[b2,b9]
69 put-down[b2]
70 unstack[b9,b4]
71 put-down[b9]
72 unstack[b4,b5]
73 put-down[b4]
76 __method_precondition_m6_do_clear[b10]
77 nop[]
81 __method_precondition_m6_do_clear[b10]
82 nop[]
86 __method_precondition_m4_do_move[b5,b10]
87 pick-up[b5]
88 stack[b5,b10]
92 __method_precondition_m1_do_put_on[]
98 __method_precondition_m6_do_clear[b2]
99 nop[]
110 __method_precondition_m6_do_clear[b5]
111 nop[]
115 __method_precondition_m6_do_clear[b5]
116 nop[]
122 __method_precondition_m4_do_move[b2,b5]
123 pick-up[b2]
124 stack[b2,b5]
128 __method_precondition_m1_do_put_on[]
142 __method_precondition_m6_do_clear[b9]
143 nop[]
152 __method_precondition_m6_do_clear[b2]
153 nop[]
163 __method_precondition_m6_do_clear[b2]
164 nop[]
176 __method_precondition_m4_do_move[b9,b2]
177 pick-up[b9]
178 stack[b9,b2]
182 __method_precondition_m1_do_put_on[]
205 __method_precondition_m6_do_clear[b1]
206 nop[]
223 __method_precondition_m6_do_clear[b9]
224 nop[]
228 __method_precondition_m6_do_clear[b9]
229 nop[]
250 __method_precondition_m4_do_move[b1,b9]
251 pick-up[b1]
252 stack[b1,b9]
256 __method_precondition_m1_do_put_on[]
314 __method_precondition_m6_do_clear[b11]
315 nop[]
323 __method_precondition_m6_do_clear[b1]
324 nop[]
354 __method_precondition_m6_do_clear[b1]
355 nop[]
371 __method_precondition_m4_do_move[b11,b1]
372 pick-up[b11]
373 stack[b11,b1]
376 __method_precondition_m0_do_put_on[b10,b6]
377 nop[]
381 __method_precondition_m0_do_put_on[b5,b10]
382 nop[]
391 __method_precondition_m0_do_put_on[b2,b5]
392 nop[]
429 __method_precondition_m0_do_put_on[b9,b2]
430 nop[]
444 __method_precondition_m0_do_put_on[b1,b9]
445 nop[]
463 __method_precondition_m0_do_put_on[b11,b1]
464 nop[]
499 __method_precondition_m1_do_put_on[]
789 __method_precondition_m3_do_on_table[b4]
790 nop[]
851 __method_precondition_m6_do_clear[b11]
852 nop[]
870 __method_precondition_m6_do_clear[b11]
871 nop[]
951 __method_precondition_m4_do_move[b4,b11]
952 pick-up[b4]
953 stack[b4,b11]
957 __method_precondition_m1_do_put_on[]
958 __method_precondition_m6_do_clear[b7]
959 nop[]
1219 __method_precondition_m3_do_on_table[b4]
1220 nop[]
1263 __method_precondition_m3_do_on_table[b4]
1264 nop[]
1323 __method_precondition_m4_do_move[b7,b4]
1324 pick-up[b7]
1325 stack[b7,b4]
root 0
1322 do_move[b7,b4] -> m4_do_move 1323 1324 1325
1262 do_on_table[b4] -> m3_do_on_table 1263 1264
1218 do_clear[b4] -> m6_do_clear 1219 1220
956 do_put_on[b7,b4] -> <m1_do_put_on;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3,4> 957 958 959 1218 1262 1322
950 do_move[b4,b11] -> m4_do_move 951 952 953
869 do_on_table[b11] -> m3_do_on_table 870 871
850 do_clear[b11] -> m6_do_clear 851 852
788 do_clear[b4] -> m6_do_clear 789 790
498 do_put_on[b4,b11] -> m1_do_put_on 499 788 850 869 950
462 do_put_on[b11,b1] -> m0_do_put_on 463 464
443 do_put_on[b1,b9] -> m0_do_put_on 444 445
428 do_put_on[b9,b2] -> m0_do_put_on 429 430
390 do_put_on[b2,b5] -> m0_do_put_on 391 392
380 do_put_on[b5,b10] -> m0_do_put_on 381 382
375 do_put_on[b10,b6] -> m0_do_put_on 376 377
370 do_move[b11,b1] -> m4_do_move 371 372 373
353 do_on_table[b1] -> m3_do_on_table 354 355
322 do_clear[b1] -> m6_do_clear 323 324
313 do_clear[b11] -> m6_do_clear 314 315
255 do_put_on[b11,b1] -> m1_do_put_on 256 313 322 353 370
249 do_move[b1,b9] -> m4_do_move 250 251 252
227 do_on_table[b9] -> m3_do_on_table 228 229
222 do_clear[b9] -> m6_do_clear 223 224
204 do_clear[b1] -> m6_do_clear 205 206
181 do_put_on[b1,b9] -> m1_do_put_on 182 204 222 227 249
175 do_move[b9,b2] -> m4_do_move 176 177 178
162 do_on_table[b2] -> m3_do_on_table 163 164
151 do_clear[b2] -> m6_do_clear 152 153
141 do_clear[b9] -> m6_do_clear 142 143
127 do_put_on[b9,b2] -> m1_do_put_on 128 141 151 162 175
121 do_move[b2,b5] -> m4_do_move 122 123 124
114 do_on_table[b5] -> m3_do_on_table 115 116
109 do_clear[b5] -> m6_do_clear 110 111
97 do_clear[b2] -> m6_do_clear 98 99
91 do_put_on[b2,b5] -> m1_do_put_on 92 97 109 114 121
85 do_move[b5,b10] -> m4_do_move 86 87 88
80 do_on_table[b10] -> m3_do_on_table 81 82
75 do_clear[b10] -> m6_do_clear 76 77
65 do_clear[b2] -> m6_do_clear 66 67
62 do_clear[b9] -> m7_do_clear 63 65 68 69
58 do_clear[b4] -> m7_do_clear 59 62 70 71
54 do_clear[b5] -> m7_do_clear 55 58 72 73
51 do_put_on[b5,b10] -> m1_do_put_on 52 54 75 80 85
46 m5_do_move_splitted_1[b10] -> _splitting_method_m5_do_move_splitted_1 47
44 do_move[b10,b6] -> m5_do_move 45 46 48
39 do_on_table[b6] -> m3_do_on_table 40 41
34 do_clear[b6] -> m6_do_clear 35 36
19 do_clear[b6] -> <m7_do_clear;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3> 20 21 22 23 24
16 do_clear[b11] -> m7_do_clear 17 19 25 26
12 do_clear[b8] -> m7_do_clear 13 16 27 28
9 do_clear[b3] -> m7_do_clear 10 12 29 30
5 do_clear[b10] -> m7_do_clear 6 9 31 32
2 do_put_on[b10,b6] -> m1_do_put_on 3 5 34 39 44
0 __top[] -> __top_method 2 51 91 127 181 255 375 380 390 428 443 462 498 956
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.175293 MEMPEAK_KBS 932

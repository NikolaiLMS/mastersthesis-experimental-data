pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/305/305.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/305/305.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 57.914ms
Contains 14.329ms
Restrict 8.373ms
MPrep 5.358ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           5 (do_grind_untreated)
 ---> Disabling potentially consistent extension checking for action:           9 (do_saw_large)
 ---> Disabling potentially consistent extension checking for action:           10 (do_saw_medium)
 ---> Disabling potentially consistent extension checking for action:           8 (do_plane_untreated)
 ---> Disabling potentially consistent extension checking for action:           7 (do_plane)
 ---> Disabling potentially consistent extension checking for action:           11 (do_saw_small)
 ---> Disabling potentially consistent extension checking for action:           4 (do_grind)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [128325] grounded tasks and [2552] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           114 (method16)
 ---> Disabling potentially consistent extension checking for action:           110 (method14)
 ---> Disabling potentially consistent extension checking for action:           103 (method11)
Returning from runGpg().
TDG done.
Calculated [182744] grounded tasks and [1132879] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 182360 tasks, 1118354 methods.
Grounded PG:
Input was [128325, 182360], output was [128325, 2552].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 1417 S 0 SC 0 SM 0 NSM 0 I 0 P 128325 S 0 A 46473 M 1110792
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/305/305.sas.
- State has 1417 bits divided into 1417 mutex groups.
- Domain contains 128325 actions.
- Domain contains 174798 tasks.
- Domain contains 1110792 methods.
- The initial state contains 111 set bits.
- The initial task is "__top[]".
- State-based goal contains 290 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 174798
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (1664 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
 363s visitime    0.02s generated nodes      5025 nodes/sec      13 cur h 1288 mod.depth    6 inserts       173 dups         0 size       173 hash fail      0 hash buckets    173
 675s visitime    0.05s generated nodes     10045 nodes/sec      14 cur h 1288 mod.depth    6 inserts       711 dups       364 size       347 hash fail    364 hash buckets    347
 980s visitime    0.10s generated nodes     15046 nodes/sec      15 cur h 1288 mod.depth    6 inserts      1866 dups      1356 size       510 hash fail   1356 hash buckets    510
1254s visitime    0.13s generated nodes     20078 nodes/sec      16 cur h 1288 mod.depth    7 inserts      2102 dups      1356 size       746 hash fail   1356 hash buckets    746
1475s visitime    0.15s generated nodes     25085 nodes/sec      17 cur h 1288 mod.depth    7 inserts      2243 dups      1356 size       887 hash fail   1356 hash buckets    887
1695s visitime    0.20s generated nodes     30088 nodes/sec      17 cur h 1288 mod.depth    7 inserts      3280 dups      2254 size      1026 hash fail   2254 hash buckets   1026
Caught SIGTERM signal!

RUNWATCH_RESULT TIMEOUT RETVAL 33280 TIME_SECS 1801 MEMPEAK_KBS 3860

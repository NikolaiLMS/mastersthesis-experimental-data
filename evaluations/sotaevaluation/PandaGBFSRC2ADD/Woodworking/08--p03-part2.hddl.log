pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/317/317.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/317/317.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.303ms
Contains 0.089ms
Restrict 0.23ms
MPrep 0.204ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           10 (do_saw_medium)
 ---> Disabling potentially consistent extension checking for action:           9 (do_saw_large)
 ---> Disabling potentially consistent extension checking for action:           2 (cut_board_small)
 ---> Disabling potentially consistent extension checking for action:           11 (do_saw_small)
 ---> Disabling potentially consistent extension checking for action:           4 (do_grind)
 ---> Disabling potentially consistent extension checking for action:           5 (do_grind_untreated)
 ---> Disabling potentially consistent extension checking for action:           7 (do_plane)
 ---> Disabling potentially consistent extension checking for action:           8 (do_plane_untreated)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [434] grounded tasks and [140] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [896] grounded tasks and [1440] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 885 tasks, 1355 methods.
Grounded PG:
Input was [434, 885], output was [434, 140].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 76 S 0 SC 0 SM 0 NSM 0 I 0 P 434 S 0 A 287 M 1191
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/317/317.sas.
- State has 76 bits divided into 76 mutex groups.
- Domain contains 434 actions.
- Domain contains 721 tasks.
- Domain contains 1191 methods.
- The initial state contains 11 set bits.
- The initial task is "__top[]".
- State-based goal contains 14 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 721
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.01 seconds
- Visited list time 0.00015 seconds
- Visited list inserts 37
- Visited list pruned 2
- Visited list contains 35
- Visited list hash collisions 2
- Visited list used hash buckets 35
- Generated 205 search nodes
  Calculated heuristic for 182 nodes
  One modifications 23
  Effectless actions 0
- including 23 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 18200 nodes per second
- Final fringe contains 54 nodes
- Status: Solved
- Found solution of length 34
- Total costs of actions: 9
==>
42 do_saw_large[b3,p8,mahogany,smooth,s3,s1,s2,s0,large,natural,untreated]
44 do_glaze[p8,glazer0,mauve,untreated,untreated,glazed,natural]
105 do_saw_medium[b3,p7,mahogany,smooth,s3,s2,s1,medium,natural,untreated]
116 do_grind[p7,smooth,natural,untreated,untreated,verysmooth,natural]
124 do_immersion_varnish[p7,immersion_varnisher0,mauve,verysmooth,untreated,untreated,varnished,natural]
166 do_saw_small[b3,p6,mahogany,smooth,s3,s2,small,natural,untreated]
177 do_immersion_varnish[p6,immersion_varnisher0,natural,smooth,untreated,untreated,varnished,natural]
183 do_plane[p5,rough,blue,glazed,smooth,untreated,natural]
203 do_spray_varnish[p5,spray_varnisher0,mauve,smooth,untreated,untreated,varnished,natural]
root 0
202 method12_splitted_3[p5,mauve,untreated] -> <_splitting_method_method12_splitted_3;do_colour[p5,mauve,spray_varnisher0,untreated];method1;0;-1> 203
182 method12_splitted_8[p5,rough,smooth,untreated] -> <_splitting_method_method12_splitted_8;grindNplane[p5,rough,blue,glazed,smooth,natural,untreated];method7;0;-1> 183
178 __top_method_splitted_11[p5,rough,smooth] -> <_splitting_method___top_method_splitted_11;process[p5,mauve,rough,smooth];method12;0;-1,-2> 182 202
176 do_colour[p6,natural,immersion_varnisher0,untreated] -> method0 177
173 method11_splitted_2[p6,natural,untreated] -> _splitting_method_method11_splitted_2 176
165 do_saw[b3,p6,mahogany,smooth] -> method5 166
161 cut_and_saw[b3,p6,mahogany,smooth] -> method10 165
158 method11_splitted_7[p6,smooth] -> _splitting_method_method11_splitted_7 161
155 process[p6,natural,smooth,smooth] -> method11 158 173
138 __top_method_splitted_14[p6] -> _splitting_method___top_method_splitted_14 155
123 do_colour[p7,mauve,immersion_varnisher0,untreated] -> method0 124
121 method14_splitted_4[p7,mauve,untreated] -> _splitting_method_method14_splitted_4 123
115 grindNplane[p7,smooth,natural,untreated,verysmooth,natural,untreated] -> method3 116
111 method14_splitted_9[p7,smooth,verysmooth,untreated] -> _splitting_method_method14_splitted_9 115
104 do_saw[b3,p7,mahogany,smooth] -> method8 105
103 cut_and_saw[b3,p7,mahogany,smooth] -> method10 104
100 method14_splitted_12[p7,smooth] -> _splitting_method_method14_splitted_12 103
86 process[p7,mauve,smooth,verysmooth] -> method14 100 111 121
50 __top_method_splitted_1[p7] -> _splitting_method___top_method_splitted_1 86
43 method11_splitted_2[p8,mauve,untreated] -> <_splitting_method_method11_splitted_2;do_colour[p8,mauve,glazer0,untreated];method2;0;-1> 44
41 cut_and_saw[b3,p8,mahogany,smooth] -> <method10;do_saw[b3,p8,mahogany,smooth];method9;0;-1> 42
33 method11_splitted_7[p8,smooth] -> _splitting_method_method11_splitted_7 41
30 process[p8,mauve,smooth,smooth] -> method11 33 43
17 __top_method_splitted_6[p8] -> _splitting_method___top_method_splitted_6 30
0 __top[] -> __top_method 17 50 138 178
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.231445 MEMPEAK_KBS 932

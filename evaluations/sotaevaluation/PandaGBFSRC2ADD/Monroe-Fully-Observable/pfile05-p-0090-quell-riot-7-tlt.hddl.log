pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/649/649.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/649/649.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.782ms
Contains 0.138ms
Restrict 0.245ms
MPrep 0.295ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           67 (SHOP_methodm_get_out_unload_precondition)
 ---> Disabling potentially consistent extension checking for action:           60 (SHOP_methodm_get_to_person_drives_themself_precondition)
 ---> Disabling potentially consistent extension checking for action:           61 (SHOP_methodm_get_to_vehicle_gets_driven_precondition)
 ---> Disabling potentially consistent extension checking for action:           62 (SHOP_methodm_get_to_as_cargo_precondition)
 ---> Disabling potentially consistent extension checking for action:           63 (SHOP_methodm_get_to_with_ambulance_precondition)
 ---> Disabling potentially consistent extension checking for action:           4 (climb_in)
 ---> Disabling potentially consistent extension checking for action:           3 (navegate_vehicle)
 ---> Disabling potentially consistent extension checking for action:           65 (SHOP_methodm_get_in_ambulatory_person_precondition)
 ---> Disabling potentially consistent extension checking for action:           7 (unload)
 ---> Disabling potentially consistent extension checking for action:           64 (SHOP_methodm_drive_to_precondition)
 ---> Disabling potentially consistent extension checking for action:           5 (climb_out)
 ---> Disabling potentially consistent extension checking for action:           8 (treat)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [127052] grounded tasks and [2566] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           35 (m_get_in_ambulatory_person)
 ---> Disabling potentially consistent extension checking for action:           44 (_splitting_method_m_get_to_as_cargo_splitted_7)
 ---> Disabling potentially consistent extension checking for action:           36 (m_get_in_load_in)
 ---> Disabling potentially consistent extension checking for action:           38 (m_get_out_unload)
 ---> Disabling potentially consistent extension checking for action:           46 (_splitting_method_m_get_to_with_ambulance_splitted_8)
 ---> Disabling potentially consistent extension checking for action:           29 (m_emt_treat)
 ---> Disabling potentially consistent extension checking for action:           87 (_splitting_method_m_tow_to_splitted_17)
 ---> Disabling potentially consistent extension checking for action:           41 (m_get_to_person_drives_themself)
 ---> Disabling potentially consistent extension checking for action:           43 (m_get_to_vehicle_gets_driven)
 ---> Disabling potentially consistent extension checking for action:           45 (m_get_to_as_cargo)
 ---> Disabling potentially consistent extension checking for action:           3 (m_block_road)
 ---> Disabling potentially consistent extension checking for action:           58 (m_provide_temp_heat_local_electricity)
 ---> Disabling potentially consistent extension checking for action:           31 (m_fix_water_main)
 ---> Disabling potentially consistent extension checking for action:           47 (m_get_to_with_ambulance)
Returning from runGpg().
TDG done.
Calculated [144906] grounded tasks and [126019] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 74498 tasks, 62096 methods.
Grounded PG:
Input was [63382, 74498], output was [63382, 2511].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 927 S 0 SC 0 SM 0 NSM 0 I 0 P 63382 S 0 A 4048 M 55028
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/649/649.sas.
- State has 927 bits divided into 927 mutex groups.
- Domain contains 63382 actions.
- Domain contains 67430 tasks.
- Domain contains 55028 methods.
- The initial state contains 342 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 67418
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (43 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.917 seconds
- Visited list time 0.001257 seconds
- Visited list inserts 77
- Visited list pruned 0
- Visited list contains 77
- Visited list hash collisions 0
- Visited list used hash buckets 77
- Generated 1103 search nodes
  Calculated heuristic for 891 nodes
  One modifications 15
  Effectless actions 197
- including 15 one modification actions
- including 0 one modification methods
- and       197 progressions of effectless actions
- Generated 971 nodes per second
- Final fringe contains 43 nodes
- Status: Solved
- Found solution of length 41
- Total costs of actions: 18
==>
900 SHOP_methodm_quell_riot_precondition[rochester_general,rochester]
903 p_1Call[]
906 p_2Call[]
925 SHOP_methodm_get_to_person_drives_themself_precondition[pu1,rochester_general,pvan1,strong]
944 SHOP_methodm_drive_to_precondition[pvan1,strong,pu1]
950 p_3Navegate_vehicle[]
976 SHOP_methodm_get_to_as_cargo_precondition[pu2,rochester_general,park_ridge,pvan1]
983 SHOP_methodm_get_to_vehicle_gets_driven_precondition[pvan1,park_ridge,rochester_general,pu1]
1007 SHOP_methodm_drive_to_precondition[pvan1,rochester_general,pu1]
1010 p_4Navegate_vehicle[]
1013 SHOP_methodm_get_in_ambulatory_person_precondition[pu2,park_ridge,pvan1]
1039 p_5Climb_in[]
1045 SHOP_methodm_get_to_vehicle_gets_driven_precondition[pvan1,rochester_general,park_ridge,pu1]
1067 SHOP_methodm_drive_to_precondition[pvan1,park_ridge,pu1]
1071 p_6Navegate_vehicle[]
1099 p_7Climb_out[]
1100 set_up_barricades[pu1]
1101 set_up_barricades[pu2]
root 0
1098 cclimb_out[pu2,pvan1,rochester_general] -> prefix_7 1099
1077 get_out[pu2,pvan1] -> m_get_out_ambulatory_person 1098
1070 cnavegate_vehicle[pu1,pvan1,rochester_general,park_ridge] -> prefix_6 1071
1066 drive_to[pu1,pvan1,rochester_general] -> m_drive_to 1067 1070
1044 m_get_to_vehicle_gets_driven_splitted_6[pvan1,rochester_general,pu1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 1045
1041 get_to[pvan1,rochester_general] -> m_get_to_vehicle_gets_driven 1044 1066
1038 cclimb_in[pu2,pvan1,park_ridge] -> prefix_5 1039
1012 get_in[pu2,pvan1] -> m_get_in_ambulatory_person 1013 1038
1009 cnavegate_vehicle[pu1,pvan1,park_ridge,rochester_general] -> prefix_4 1010
1006 drive_to[pu1,pvan1,park_ridge] -> m_drive_to 1007 1009
982 m_get_to_vehicle_gets_driven_splitted_6[pvan1,park_ridge,pu1] -> _splitting_method_m_get_to_vehicle_gets_driven_splitted_6 983
980 get_to[pvan1,park_ridge] -> m_get_to_vehicle_gets_driven 982 1006
975 m_get_to_as_cargo_splitted_7[pvan1,pu2,rochester_general] -> _splitting_method_m_get_to_as_cargo_splitted_7 976 980
956 get_to[pu2,rochester_general] -> m_get_to_as_cargo 975 1012 1041 1077
949 cnavegate_vehicle[pu1,pvan1,rochester_general,strong] -> prefix_3 950
943 drive_to[pu1,pvan1,rochester_general] -> m_drive_to 944 949
924 m_get_to_person_drives_themself_splitted_5[pu1,rochester_general,pvan1] -> _splitting_method_m_get_to_person_drives_themself_splitted_5 925
908 get_to[pu1,rochester_general] -> m_get_to_person_drives_themself 924 943
905 ccall[police_chief] -> prefix_2 906
902 ccall[ebs] -> prefix_1 903
899 quell_riot[rochester_general] -> <m_quell_riot;m_quell_riot_splitted_12[rochester_general];<_splitting_method_m_quell_riot_splitted_12;declare_curfew[rochester];m_declare_curfew;1;0,-1,-2>;0;-1,-2,-3,1,2,3,4> 900 902 905 908 956 1100 1101
36 tlt[] -> m_tlt_quell_riot 899
0 __top[] -> __top_method 36
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 21.3691 MEMPEAK_KBS 3788

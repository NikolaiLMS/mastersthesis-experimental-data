pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/641/641.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/641/641.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.697ms
Contains 0.136ms
Restrict 0.25ms
MPrep 0.25ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           4 (climb_in)
 ---> Disabling potentially consistent extension checking for action:           60 (SHOP_methodm_get_out_unload_precondition)
 ---> Disabling potentially consistent extension checking for action:           53 (SHOP_methodm_get_to_person_drives_themself_precondition)
 ---> Disabling potentially consistent extension checking for action:           54 (SHOP_methodm_get_to_vehicle_gets_driven_precondition)
 ---> Disabling potentially consistent extension checking for action:           55 (SHOP_methodm_get_to_as_cargo_precondition)
 ---> Disabling potentially consistent extension checking for action:           56 (SHOP_methodm_get_to_with_ambulance_precondition)
 ---> Disabling potentially consistent extension checking for action:           3 (navegate_vehicle)
 ---> Disabling potentially consistent extension checking for action:           57 (SHOP_methodm_drive_to_precondition)
 ---> Disabling potentially consistent extension checking for action:           5 (climb_out)
 ---> Disabling potentially consistent extension checking for action:           58 (SHOP_methodm_get_in_ambulatory_person_precondition)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [127045] grounded tasks and [2558] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           17 (m_drive_to)
 ---> Disabling potentially consistent extension checking for action:           25 (m_get_in_load_in)
 ---> Disabling potentially consistent extension checking for action:           27 (m_get_out_unload)
 ---> Disabling potentially consistent extension checking for action:           33 (_splitting_method_m_get_to_as_cargo_splitted_7)
 ---> Disabling potentially consistent extension checking for action:           35 (_splitting_method_m_get_to_with_ambulance_splitted_8)
 ---> Disabling potentially consistent extension checking for action:           18 (m_emt_treat)
 ---> Disabling potentially consistent extension checking for action:           76 (_splitting_method_m_tow_to_splitted_17)
 ---> Disabling potentially consistent extension checking for action:           30 (m_get_to_person_drives_themself)
 ---> Disabling potentially consistent extension checking for action:           32 (m_get_to_vehicle_gets_driven)
 ---> Disabling potentially consistent extension checking for action:           34 (m_get_to_as_cargo)
 ---> Disabling potentially consistent extension checking for action:           3 (m_block_road)
 ---> Disabling potentially consistent extension checking for action:           36 (m_get_to_with_ambulance)
 ---> Disabling potentially consistent extension checking for action:           47 (m_provide_temp_heat_local_electricity)
 ---> Disabling potentially consistent extension checking for action:           20 (m_fix_water_main)
Returning from runGpg().
TDG done.
Calculated [137522] grounded tasks and [118635] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 68435 tasks, 56033 methods.
Grounded PG:
Input was [63375, 68435], output was [63375, 2503].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 919 S 0 SC 0 SM 0 NSM 0 I 0 P 63375 S 0 A 4041 M 55014
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/641/641.sas.
- State has 919 bits divided into 919 mutex groups.
- Domain contains 63375 actions.
- Domain contains 67416 tasks.
- Domain contains 55014 methods.
- The initial state contains 341 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 67404
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (45 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 2.561 seconds
- Visited list time 0.000183 seconds
- Visited list inserts 10
- Visited list pruned 0
- Visited list contains 10
- Visited list hash collisions 0
- Visited list used hash buckets 10
- Generated 573 search nodes
  Calculated heuristic for 262 nodes
  One modifications 0
  Effectless actions 311
- including 0 one modification actions
- including 0 one modification methods
- and       311 progressions of effectless actions
- Generated 102 nodes per second
- Final fringe contains 249 nodes
- Status: Solved
- Found solution of length 12
- Total costs of actions: 7
==>
499 SHOP_methodm_quell_riot_precondition[strong,rochester]
500 call[ebs]
501 call[police_chief]
507 SHOP_methodm_get_to_already_there_precondition[pu2,strong]
555 SHOP_methodm_get_to_already_there_precondition[pu1,strong]
556 set_up_barricades[pu2]
557 set_up_barricades[pu1]
root 0
554 get_to[pu1,strong] -> m_get_to_already_there 555
506 get_to[pu2,strong] -> m_get_to_already_there 507
498 quell_riot[strong] -> <<m_quell_riot;m_quell_riot_splitted_12[strong];_splitting_method_m_quell_riot_splitted_12;0;-1,-2,1,2,3,4>;declare_curfew[rochester];m_declare_curfew;1;0,-1,-2,2,3,4,5> 499 500 501 506 554 556 557
11 tlt[] -> m_tlt_quell_riot 498
0 __top[] -> __top_method 11
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 23.5813 MEMPEAK_KBS 3944

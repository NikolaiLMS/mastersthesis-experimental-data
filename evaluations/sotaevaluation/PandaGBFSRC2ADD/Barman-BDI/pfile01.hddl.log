pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/328/328.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/328/328.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.418ms
Contains 0.06ms
Restrict 0.062ms
MPrep 0.066ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [172] grounded tasks and [61] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [287] grounded tasks and [188] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 257 tasks, 180 methods.
Grounded PG:
Input was [150, 257], output was [150, 61].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
22 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 45 S 0 SC 0 SM 0 NSM 0 I 0 P 64 S 46 A 55 M 128
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/328/328.sas.
- State has 45 bits divided into 45 mutex groups.
- Domain contains 110 actions.
- Domain contains 165 tasks.
- Domain contains 128 methods.
- The initial state contains 22 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 165
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.002 seconds
- Visited list time 0.00033 seconds
- Visited list inserts 86
- Visited list pruned 2
- Visited list contains 84
- Visited list hash collisions 2
- Visited list used hash buckets 84
- Generated 365 search nodes
  Calculated heuristic for 262 nodes
  One modifications 26
  Effectless actions 77
- including 26 one modification actions
- including 0 one modification methods
- and       77 progressions of effectless actions
- Generated 131000 nodes per second
- Final fringe contains 17 nodes
- Status: Solved
- Found solution of length 92
- Total costs of actions: 14
==>
3 __method_precondition_MakeAndPourCocktail[shot2,cocktail1]
7 __method_precondition_CleanShakerNull[shaker1]
12 __method_precondition_AddIngredientToEmptyShaker_base[shaker1]
21 __method_precondition_AddIngredientToShot_base_base[shot2,ingredient2]
29 __method_precondition_CleanShotNull[shot2]
42 __method_precondition_PickUp[right,shot2]
64 __method_precondition_HandEmptyNull[right]
82 __method_precondition_OnTableNull[shot2]
83 grasp[right,shot2]
88 __method_precondition_HandEmptyNull[left]
89 fill-shot[shot2,ingredient2,right,left,dispenser2]
94 __method_precondition_EmptyHand[right,shot2]
95 pour-shot-to-clean-shaker[shot2,ingredient2,shaker1,right,level1,level1]
100 __method_precondition_AddIngredientToUsedShaker_base[shaker1]
105 __method_precondition_AddIngredientToShot_base_base[shot2,ingredient1]
111 __method_precondition_CleanEmptyShot_base[shot2]
115 __method_precondition_EmptyHand[right,shot2]
120 __method_precondition_CleanEmptyShot_split[shot2,right,ingredient2,left]
125 __method_precondition_HandEmptyNull[left]
126 clean-shot[shot2,ingredient2,right,left]
131 __method_precondition_EmptyHand[right,shot2]
137 __method_precondition_HandEmptyNull[left]
138 fill-shot[shot2,ingredient1,right,left,dispenser1]
143 __method_precondition_EmptyHand[right,shot2]
144 pour-shot-to-used-shaker[shot2,ingredient1,shaker1,right,level1,level1]
150 __method_precondition_PickUp[left,shaker1]
158 __method_precondition_HandEmptyNull[left]
163 __method_precondition_OnTableNull[shaker1]
164 grasp[left,shaker1]
166 __method_precondition_EmptyHand[right,shot2]
167 drop[right,shot2]
168 shake[cocktail1,ingredient2,ingredient1,shaker1,left,right]
178 __method_precondition_CleanEmptyShot_base[shot2]
183 __method_precondition_PickUp[right,shot2]
226 __method_precondition_HandEmptyNull[right]
270 __method_precondition_OnTableNull[shot2]
271 grasp[right,shot2]
274 __method_precondition_CleanEmptyShot_split[shot2,right,ingredient1,left]
277 __method_precondition_HoldingNull[left,shaker1]
278 drop[left,shaker1]
279 clean-shot[shot2,ingredient1,right,left]
288 __method_precondition_PickUp[left,shaker1]
350 __method_precondition_HandEmptyNull[left]
358 __method_precondition_OnTableNull[shaker1]
359 grasp[left,shaker1]
361 __method_precondition_pour_shaker_to_shot_action[shaker1,shot2,cocktail1,level1,left,level1]
362 pour-shaker-to-shot[cocktail1,shot2,left,shaker1,level1,level1]
root 0
360 DoPourShakerToShot[shaker1,shot2,cocktail1] -> pour_shaker_to_shot_action 361 362
357 AchieveOnTable[shaker1] -> OnTableNull 358
349 AchieveHandEmpty[left] -> HandEmptyNull 350
287 AchieveHolding[left,shaker1] -> PickUp 288 349 357 359
284 MakeAndPourCocktail_splitted_8[shaker1] -> _splitting_method_MakeAndPourCocktail_splitted_8 287
276 AchieveHandEmpty[left] -> EmptyHand 277 278
273 CleanEmptyShot_splitted_4[shot2,right] -> _splitting_method_CleanEmptyShot_splitted_4 274 276 279
269 AchieveOnTable[shot2] -> OnTableNull 270
225 AchieveHandEmpty[right] -> HandEmptyNull 226
182 AchieveHolding[right,shot2] -> PickUp 183 225 269 271
180 CleanEmptyShot_splitted_13[shot2] -> _splitting_method_CleanEmptyShot_splitted_13 182 273
177 AchieveCleanShot[shot2] -> CleanEmptyShot 178 180
165 AchieveHandEmpty[right] -> EmptyHand 166 167
162 AchieveOnTable[shaker1] -> OnTableNull 163
157 AchieveHandEmpty[left] -> HandEmptyNull 158
149 AchieveHolding[left,shaker1] -> PickUp 150 157 162 164
146 MakeCocktail_splitted_14[shaker1,cocktail1,ingredient2,ingredient1] -> <_splitting_method_MakeCocktail_splitted_14;MakeCocktail_splitted_5[cocktail1,ingredient2,ingredient1,shaker1,left];_splitting_method_MakeCocktail_splitted_5;1;0,-1,-2> 149 165 168
142 AchieveHolding[right,shot2] -> HoldingNull 143
140 _splitting_method_AddIngredientToUsedShaker_splitted_16_splitted_21[shot2,ingredient1,shaker1] -> <_splitting_method__splitting_method_AddIngredientToUsedShaker_splitted_16_splitted_21;AddIngredientToUsedShaker_splitted_7[shot2,ingredient1,shaker1,right];_splitting_method_AddIngredientToUsedShaker_splitted_7;1;0,-1> 142 144
136 AchieveHandEmpty[left] -> HandEmptyNull 137
130 AchieveHolding[right,shot2] -> HoldingNull 131
129 AddIngredientToShot_splitted_22[shot2,ingredient1] -> <<_splitting_method_AddIngredientToShot_splitted_22;AddIngredientToShot_splitted_17[right,shot2,ingredient1];_splitting_method_AddIngredientToShot_splitted_17;1;0,-1,-2>;AddIngredientToShot_splitted_9[shot2,ingredient1,right,left];_splitting_method_AddIngredientToShot_splitted_9;2;0,1,-1> 130 136 138
124 AchieveHandEmpty[left] -> HandEmptyNull 125
119 CleanEmptyShot_splitted_4[shot2,right] -> _splitting_method_CleanEmptyShot_splitted_4 120 124 126
114 AchieveHolding[right,shot2] -> HoldingNull 115
113 CleanEmptyShot_splitted_13[shot2] -> _splitting_method_CleanEmptyShot_splitted_13 114 119
110 AchieveCleanShot[shot2] -> CleanEmptyShot 111 113
104 AchieveContainsShotIngredient[shot2,ingredient1] -> AddIngredientToShot 105 110 129
102 AddIngredientToUsedShaker_splitted_16[ingredient1,shaker1] -> _splitting_method_AddIngredientToUsedShaker_splitted_16 104 140
99 AchieveContainsShakerIngredient[shaker1,ingredient1] -> AddIngredientToUsedShaker 100 102
93 AchieveHolding[right,shot2] -> HoldingNull 94
91 _splitting_method_AddIngredientToEmptyShaker_splitted_15_splitted_20[shot2,ingredient2,shaker1] -> <_splitting_method__splitting_method_AddIngredientToEmptyShaker_splitted_15_splitted_20;AddIngredientToEmptyShaker_splitted_6[shot2,ingredient2,shaker1,right];_splitting_method_AddIngredientToEmptyShaker_splitted_6;1;0,-1> 93 95
87 AchieveHandEmpty[left] -> HandEmptyNull 88
81 AchieveOnTable[shot2] -> OnTableNull 82
63 AchieveHandEmpty[right] -> HandEmptyNull 64
41 AchieveHolding[right,shot2] -> PickUp 42 63 81 83
36 AddIngredientToShot_splitted_22[shot2,ingredient2] -> <<_splitting_method_AddIngredientToShot_splitted_22;AddIngredientToShot_splitted_17[right,shot2,ingredient2];_splitting_method_AddIngredientToShot_splitted_17;1;0,-1,-2>;AddIngredientToShot_splitted_9[shot2,ingredient2,right,left];_splitting_method_AddIngredientToShot_splitted_9;2;0,1,-1> 41 87 89
28 AchieveCleanShot[shot2] -> CleanShotNull 29
20 AchieveContainsShotIngredient[shot2,ingredient2] -> AddIngredientToShot 21 28 36
14 AddIngredientToEmptyShaker_splitted_15[ingredient2,shaker1] -> _splitting_method_AddIngredientToEmptyShaker_splitted_15 20 91
11 AchieveContainsShakerIngredient[shaker1,ingredient2] -> AddIngredientToEmptyShaker 12 14
6 AchieveCleanShaker[shaker1] -> CleanShakerNull 7
5 AchieveContainsShakerCocktail[shaker1,cocktail1] -> <<MakeCocktail;MakeCocktail_splitted_23[shaker1,cocktail1];_splitting_method_MakeCocktail_splitted_23;1;0,-1,-2>;MakeCocktail_splitted_19[shaker1,cocktail1,ingredient2];_splitting_method_MakeCocktail_splitted_19;2;0,1,-1,-2> 6 11 99 146
2 AchieveContainsShotCocktail[shot2,cocktail1] -> MakeAndPourCocktail 3 5 177 284 360
0 __top[] -> __top_method 2
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.383789 MEMPEAK_KBS 932

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/362/362.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/362/362.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.898ms
Contains 0.312ms
Restrict 0.221ms
MPrep 0.24ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           15 (__method_precondition_m1_serve_base_base)
 ---> Disabling potentially consistent extension checking for action:           13 (__method_precondition_m0_serve_base_base)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [6648] grounded tasks and [237] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
 ---> Disabling potentially consistent extension checking for action:           4 (m0_serve)
 ---> Disabling potentially consistent extension checking for action:           8 (m1_serve)
Returning from runGpg().
TDG done.
Calculated [7904] grounded tasks and [4441] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 5006 tasks, 4441 methods.
Grounded PG:
Input was [3750, 5006], output was [3750, 237].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
280 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 177 S 0 SC 0 SM 0 NSM 0 I 0 P 3318 S 20 A 356 M 3541
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/362/362.sas.
- State has 177 bits divided into 177 mutex groups.
- Domain contains 3338 actions.
- Domain contains 3694 tasks.
- Domain contains 3541 methods.
- The initial state contains 53 set bits.
- The initial task is "__top[]".
- State-based goal contains 15 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 3694
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (2 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
   1s visitime    0.00s generated nodes      5010 nodes/sec    2813 cur h  224 mod.depth   14 inserts       352 dups       162 size       190 hash fail    162 hash buckets    190
   2s visitime    0.01s generated nodes     10032 nodes/sec    3573 cur h  195 mod.depth   37 inserts       670 dups       288 size       382 hash fail    288 hash buckets    382
Search Results
- Search time 3.75 seconds
- Visited list time 0.01 seconds
- Visited list inserts 1171
- Visited list pruned 576
- Visited list contains 595
- Visited list hash collisions 576
- Visited list used hash buckets 595
- Generated 16189 search nodes
  Calculated heuristic for 7594 nodes
  One modifications 3844
  Effectless actions 4751
- including 3844 one modification actions
- including 0 one modification methods
- and       4751 progressions of effectless actions
- Generated 2023 nodes per second
- Final fringe contains 4825 nodes
- Status: Solved
- Found solution of length 136
- Total costs of actions: 75
==>
12 __method_precondition_m0_serve_base_base[child15,sandw19]
118 make_sandwich[sandw19,bread4,content13]
934 put_on_tray[sandw19,tray3]
935 move_tray[tray3,kitchen,table1]
936 serve_sandwich[sandw19,child1,tray3,table1]
937 move_tray[tray3,table1,kitchen]
1532 __method_precondition_m0_serve_base_base[child15,sandw14]
4604 make_sandwich_no_gluten[sandw14,bread7,content3]
5120 put_on_tray[sandw14,tray2]
5121 move_tray[tray2,kitchen,table2]
5122 serve_sandwich_no_gluten[sandw14,child2,tray2,table2]
5123 move_tray[tray2,table2,kitchen]
5498 __method_precondition_m0_serve_base_base[child15,sandw8]
6599 make_sandwich_no_gluten[sandw8,bread6,content4]
6874 put_on_tray[sandw8,tray1]
6875 move_tray[tray1,kitchen,table2]
6876 serve_sandwich_no_gluten[sandw8,child3,tray1,table2]
6877 move_tray[tray1,table2,kitchen]
7348 __method_precondition_m0_serve_base_base[child15,sandw10]
7946 make_sandwich[sandw10,bread8,content8]
8409 put_on_tray[sandw10,tray2]
8410 move_tray[tray2,kitchen,table1]
8411 serve_sandwich[sandw10,child4,tray2,table1]
8412 move_tray[tray2,table1,kitchen]
10781 __method_precondition_m0_serve_base_base[child15,sandw17]
11376 make_sandwich_no_gluten[sandw17,bread3,content14]
11515 put_on_tray[sandw17,tray2]
11516 move_tray[tray2,kitchen,table2]
11517 serve_sandwich_no_gluten[sandw17,child5,tray2,table2]
11518 move_tray[tray2,table2,kitchen]
11917 __method_precondition_m0_serve_base_base[child15,sandw13]
12191 make_sandwich[sandw13,bread5,content1]
12399 put_on_tray[sandw13,tray1]
12400 move_tray[tray1,kitchen,table1]
12401 serve_sandwich[sandw13,child6,tray1,table1]
12402 move_tray[tray1,table1,kitchen]
12507 __method_precondition_m0_serve_base_base[child15,sandw2]
14805 make_sandwich[sandw2,bread1,content6]
14876 put_on_tray[sandw2,tray3]
14877 move_tray[tray3,kitchen,table1]
14878 serve_sandwich[sandw2,child7,tray3,table1]
14879 move_tray[tray3,table1,kitchen]
14891 __method_precondition_m0_serve_base_base[child15,sandw18]
14946 make_sandwich[sandw18,bread15,content2]
15040 put_on_tray[sandw18,tray2]
15041 move_tray[tray2,kitchen,table3]
15042 serve_sandwich[sandw18,child8,tray2,table3]
15043 move_tray[tray2,table3,kitchen]
15060 __method_precondition_m0_serve_base_base[child15,sandw15]
15082 make_sandwich[sandw15,bread10,content11]
15184 put_on_tray[sandw15,tray3]
15185 move_tray[tray3,kitchen,table3]
15186 serve_sandwich[sandw15,child9,tray3,table3]
15187 move_tray[tray3,table3,kitchen]
15214 __method_precondition_m0_serve_base_base[child15,sandw20]
15256 make_sandwich_no_gluten[sandw20,bread13,content15]
15280 put_on_tray[sandw20,tray1]
15281 move_tray[tray1,kitchen,table2]
15282 serve_sandwich_no_gluten[sandw20,child10,tray1,table2]
15283 move_tray[tray1,table2,kitchen]
15426 __method_precondition_m0_serve_base_base[child15,sandw16]
15671 make_sandwich_no_gluten[sandw16,bread9,content9]
15715 put_on_tray[sandw16,tray2]
15716 move_tray[tray2,kitchen,table3]
15717 serve_sandwich_no_gluten[sandw16,child11,tray2,table3]
15718 move_tray[tray2,table3,kitchen]
15746 __method_precondition_m0_serve_base_base[child15,sandw1]
15800 make_sandwich[sandw1,bread11,content7]
15854 put_on_tray[sandw1,tray3]
15855 move_tray[tray3,kitchen,table2]
15856 serve_sandwich[sandw1,child12,tray3,table2]
15857 move_tray[tray3,table2,kitchen]
15883 __method_precondition_m0_serve_base_base[child15,sandw6]
15962 make_sandwich[sandw6,bread2,content12]
15972 put_on_tray[sandw6,tray2]
15973 move_tray[tray2,kitchen,table2]
15974 serve_sandwich[sandw6,child13,tray2,table2]
15975 move_tray[tray2,table2,kitchen]
16005 __method_precondition_m0_serve_base_base[child15,sandw3]
16037 make_sandwich[sandw3,bread14,content5]
16096 put_on_tray[sandw3,tray1]
16097 move_tray[tray1,kitchen,table2]
16098 serve_sandwich[sandw3,child14,tray1,table2]
16099 move_tray[tray1,table2,kitchen]
16113 __method_precondition_m0_serve_base_base[child15,sandw4]
16154 make_sandwich_no_gluten[sandw4,bread12,content10]
16179 put_on_tray[sandw4,tray2]
16180 move_tray[tray2,kitchen,table2]
16181 serve_sandwich_no_gluten[sandw4,child15,tray2,table2]
16182 move_tray[tray2,table2,kitchen]
root 0
16178 m0_serve_splitted_5[sandw4,kitchen,kitchen,child15,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw4,child15,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 16179 16180 16181 16182
16153 m0_serve_splitted_1[sandw4] -> _splitting_method_m0_serve_splitted_1 16154
16112 serve[child15] -> m0_serve 16113 16153 16178
16095 m1_serve_splitted_6[sandw3,kitchen,kitchen,child14,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw3,child14,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 16096 16097 16098 16099
16036 m1_serve_splitted_2[sandw3] -> _splitting_method_m1_serve_splitted_2 16037
16004 serve[child14] -> m1_serve 16005 16036 16095
15971 m1_serve_splitted_6[sandw6,kitchen,kitchen,child13,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw6,child13,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 15972 15973 15974 15975
15961 m1_serve_splitted_2[sandw6] -> _splitting_method_m1_serve_splitted_2 15962
15882 serve[child13] -> m1_serve 15883 15961 15971
15853 m1_serve_splitted_6[sandw1,kitchen,kitchen,child12,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw1,child12,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 15854 15855 15856 15857
15799 m1_serve_splitted_2[sandw1] -> _splitting_method_m1_serve_splitted_2 15800
15745 serve[child12] -> m1_serve 15746 15799 15853
15714 m0_serve_splitted_5[sandw16,kitchen,kitchen,child11,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw16,child11,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 15715 15716 15717 15718
15670 m0_serve_splitted_1[sandw16] -> _splitting_method_m0_serve_splitted_1 15671
15425 serve[child11] -> m0_serve 15426 15670 15714
15279 m0_serve_splitted_5[sandw20,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw20,child10,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 15280 15281 15282 15283
15255 m0_serve_splitted_1[sandw20] -> _splitting_method_m0_serve_splitted_1 15256
15213 serve[child10] -> m0_serve 15214 15255 15279
15183 m1_serve_splitted_6[sandw15,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw15,child9,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 15184 15185 15186 15187
15081 m1_serve_splitted_2[sandw15] -> _splitting_method_m1_serve_splitted_2 15082
15059 serve[child9] -> m1_serve 15060 15081 15183
15039 m1_serve_splitted_6[sandw18,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw18,child8,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 15040 15041 15042 15043
14945 m1_serve_splitted_2[sandw18] -> _splitting_method_m1_serve_splitted_2 14946
14890 serve[child8] -> m1_serve 14891 14945 15039
14875 m1_serve_splitted_6[sandw2,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw2,child7,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 14876 14877 14878 14879
14804 m1_serve_splitted_2[sandw2] -> _splitting_method_m1_serve_splitted_2 14805
12506 serve[child7] -> m1_serve 12507 14804 14875
12398 m1_serve_splitted_6[sandw13,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw13,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 12399 12400 12401 12402
12190 m1_serve_splitted_2[sandw13] -> _splitting_method_m1_serve_splitted_2 12191
11916 serve[child6] -> m1_serve 11917 12190 12398
11514 m0_serve_splitted_5[sandw17,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw17,child5,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 11515 11516 11517 11518
11375 m0_serve_splitted_1[sandw17] -> _splitting_method_m0_serve_splitted_1 11376
10780 serve[child5] -> m0_serve 10781 11375 11514
8408 m1_serve_splitted_6[sandw10,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw10,child4,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8409 8410 8411 8412
7945 m1_serve_splitted_2[sandw10] -> _splitting_method_m1_serve_splitted_2 7946
7347 serve[child4] -> m1_serve 7348 7945 8408
6873 m0_serve_splitted_5[sandw8,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw8,child3,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 6874 6875 6876 6877
6598 m0_serve_splitted_1[sandw8] -> _splitting_method_m0_serve_splitted_1 6599
5497 serve[child3] -> m0_serve 5498 6598 6873
5119 m0_serve_splitted_5[sandw14,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw14,child2,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 5120 5121 5122 5123
4603 m0_serve_splitted_1[sandw14] -> _splitting_method_m0_serve_splitted_1 4604
1531 serve[child2] -> m0_serve 1532 4603 5119
933 m1_serve_splitted_6[sandw19,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw19,child1,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 934 935 936 937
117 m1_serve_splitted_2[sandw19] -> _splitting_method_m1_serve_splitted_2 118
11 serve[child1] -> m1_serve 12 117 933
0 __top[] -> __top_method 11 1531 5497 7347 10780 11916 12506 14890 15059 15213 15425 15745 15882 16004 16112
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 4.54395 MEMPEAK_KBS 3768

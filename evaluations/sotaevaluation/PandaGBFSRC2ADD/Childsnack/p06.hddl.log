pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/358/358.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/358/358.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.422ms
Contains 0.225ms
Restrict 0.171ms
MPrep 0.176ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
 ---> Disabling potentially consistent extension checking for action:           15 (__method_precondition_m1_serve_base_base)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [4369] grounded tasks and [205] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
 ---> Disabling potentially consistent extension checking for action:           8 (m1_serve)
Returning from runGpg().
TDG done.
Calculated [5301] grounded tasks and [3061] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 3500 tasks, 3061 methods.
Grounded PG:
Input was [2568, 3500], output was [2568, 205].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
204 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 153 S 0 SC 0 SM 0 NSM 0 I 0 P 2245 S 17 A 269 M 2398
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/358/358.sas.
- State has 153 bits divided into 153 mutex groups.
- Domain contains 2262 actions.
- Domain contains 2531 tasks.
- Domain contains 2398 methods.
- The initial state contains 46 set bits.
- The initial task is "__top[]".
- State-based goal contains 13 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 2531
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (1 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.997 seconds
- Visited list time 0.004761 seconds
- Visited list inserts 697
- Visited list pruned 340
- Visited list contains 357
- Visited list hash collisions 340
- Visited list used hash buckets 357
- Generated 8629 search nodes
  Calculated heuristic for 4059 nodes
  One modifications 2311
  Effectless actions 2259
- including 2311 one modification actions
- including 0 one modification methods
- and       2259 progressions of effectless actions
- Generated 4071 nodes per second
- Final fringe contains 2336 nodes
- Status: Solved
- Found solution of length 118
- Total costs of actions: 65
==>
12 __method_precondition_m1_serve_base_base[child13,sandw7]
44 make_sandwich_no_gluten[sandw7,bread8,content11]
326 put_on_tray[sandw7,tray1]
327 move_tray[tray1,kitchen,table3]
328 serve_sandwich_no_gluten[sandw7,child1,tray1,table3]
329 move_tray[tray1,table3,kitchen]
1121 __method_precondition_m1_serve_base_base[child13,sandw15]
1304 make_sandwich_no_gluten[sandw15,bread10,content7]
1442 put_on_tray[sandw15,tray1]
1443 move_tray[tray1,kitchen,table2]
1444 serve_sandwich_no_gluten[sandw15,child2,tray1,table2]
1445 move_tray[tray1,table2,kitchen]
1604 __method_precondition_m1_serve_base_base[child13,sandw6]
2101 make_sandwich_no_gluten[sandw6,bread3,content3]
2218 put_on_tray[sandw6,tray3]
2219 move_tray[tray3,kitchen,table2]
2220 serve_sandwich_no_gluten[sandw6,child3,tray3,table2]
2221 move_tray[tray3,table2,kitchen]
2513 __method_precondition_m1_serve_base_base[child13,sandw11]
2529 make_sandwich[sandw11,bread7,content8]
2960 put_on_tray[sandw11,tray2]
2961 move_tray[tray2,kitchen,table1]
2962 serve_sandwich[sandw11,child4,tray2,table1]
2963 move_tray[tray2,table1,kitchen]
4264 __method_precondition_m1_serve_base_base[child13,sandw12]
5607 make_sandwich[sandw12,bread4,content6]
5693 put_on_tray[sandw12,tray1]
5694 move_tray[tray1,kitchen,table2]
5695 serve_sandwich[sandw12,child5,tray1,table2]
5696 move_tray[tray1,table2,kitchen]
5744 __method_precondition_m1_serve_base_base[child13,sandw2]
7858 make_sandwich[sandw2,bread1,content2]
7904 put_on_tray[sandw2,tray1]
7905 move_tray[tray1,kitchen,table2]
7906 serve_sandwich[sandw2,child6,tray1,table2]
7907 move_tray[tray1,table2,kitchen]
7945 __method_precondition_m1_serve_base_base[child13,sandw4]
7974 make_sandwich[sandw4,bread6,content4]
8041 put_on_tray[sandw4,tray2]
8042 move_tray[tray2,kitchen,table1]
8043 serve_sandwich[sandw4,child7,tray2,table1]
8044 move_tray[tray2,table1,kitchen]
8051 __method_precondition_m1_serve_base_base[child13,sandw17]
8149 make_sandwich[sandw17,bread13,content13]
8168 put_on_tray[sandw17,tray2]
8169 move_tray[tray2,kitchen,table2]
8170 serve_sandwich[sandw17,child8,tray2,table2]
8171 move_tray[tray2,table2,kitchen]
8180 __method_precondition_m1_serve_base_base[child13,sandw13]
8268 make_sandwich[sandw13,bread9,content10]
8277 put_on_tray[sandw13,tray3]
8278 move_tray[tray3,kitchen,table1]
8279 serve_sandwich[sandw13,child9,tray3,table1]
8280 move_tray[tray3,table1,kitchen]
8291 __method_precondition_m1_serve_base_base[child13,sandw14]
8339 make_sandwich[sandw14,bread12,content5]
8385 put_on_tray[sandw14,tray1]
8386 move_tray[tray1,kitchen,table1]
8387 serve_sandwich[sandw14,child10,tray1,table1]
8388 move_tray[tray1,table1,kitchen]
8413 __method_precondition_m1_serve_base_base[child13,sandw10]
8440 make_sandwich_no_gluten[sandw10,bread5,content9]
8453 put_on_tray[sandw10,tray1]
8454 move_tray[tray1,kitchen,table3]
8455 serve_sandwich_no_gluten[sandw10,child11,tray1,table3]
8456 move_tray[tray1,table3,kitchen]
8477 __method_precondition_m1_serve_base_base[child13,sandw1]
8486 make_sandwich_no_gluten[sandw1,bread11,content12]
8522 put_on_tray[sandw1,tray3]
8523 move_tray[tray3,kitchen,table3]
8524 serve_sandwich_no_gluten[sandw1,child12,tray3,table3]
8525 move_tray[tray3,table3,kitchen]
8545 __method_precondition_m1_serve_base_base[child13,sandw3]
8557 make_sandwich[sandw3,bread2,content1]
8624 put_on_tray[sandw3,tray3]
8625 move_tray[tray3,kitchen,table2]
8626 serve_sandwich[sandw3,child13,tray3,table2]
8627 move_tray[tray3,table2,kitchen]
root 0
8623 m1_serve_splitted_6[sandw3,kitchen,kitchen,child13,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw3,child13,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8624 8625 8626 8627
8556 m1_serve_splitted_2[sandw3] -> _splitting_method_m1_serve_splitted_2 8557
8544 serve[child13] -> m1_serve 8545 8556 8623
8521 m0_serve_splitted_5[sandw1,kitchen,kitchen,child12,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw1,child12,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 8522 8523 8524 8525
8485 m0_serve_splitted_1[sandw1] -> _splitting_method_m0_serve_splitted_1 8486
8476 serve[child12] -> m0_serve 8477 8485 8521
8452 m0_serve_splitted_5[sandw10,kitchen,kitchen,child11,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw10,child11,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 8453 8454 8455 8456
8439 m0_serve_splitted_1[sandw10] -> _splitting_method_m0_serve_splitted_1 8440
8412 serve[child11] -> m0_serve 8413 8439 8452
8384 m1_serve_splitted_6[sandw14,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw14,child10,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8385 8386 8387 8388
8338 m1_serve_splitted_2[sandw14] -> _splitting_method_m1_serve_splitted_2 8339
8290 serve[child10] -> m1_serve 8291 8338 8384
8276 m1_serve_splitted_6[sandw13,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw13,child9,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8277 8278 8279 8280
8267 m1_serve_splitted_2[sandw13] -> _splitting_method_m1_serve_splitted_2 8268
8179 serve[child9] -> m1_serve 8180 8267 8276
8167 m1_serve_splitted_6[sandw17,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw17,child8,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8168 8169 8170 8171
8148 m1_serve_splitted_2[sandw17] -> _splitting_method_m1_serve_splitted_2 8149
8050 serve[child8] -> m1_serve 8051 8148 8167
8040 m1_serve_splitted_6[sandw4,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw4,child7,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8041 8042 8043 8044
7973 m1_serve_splitted_2[sandw4] -> _splitting_method_m1_serve_splitted_2 7974
7944 serve[child7] -> m1_serve 7945 7973 8040
7903 m1_serve_splitted_6[sandw2,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw2,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 7904 7905 7906 7907
7857 m1_serve_splitted_2[sandw2] -> _splitting_method_m1_serve_splitted_2 7858
5743 serve[child6] -> m1_serve 5744 7857 7903
5692 m1_serve_splitted_6[sandw12,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw12,child5,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 5693 5694 5695 5696
5606 m1_serve_splitted_2[sandw12] -> _splitting_method_m1_serve_splitted_2 5607
4263 serve[child5] -> m1_serve 4264 5606 5692
2959 m1_serve_splitted_6[sandw11,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw11,child4,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 2960 2961 2962 2963
2528 m1_serve_splitted_2[sandw11] -> _splitting_method_m1_serve_splitted_2 2529
2512 serve[child4] -> m1_serve 2513 2528 2959
2217 m0_serve_splitted_5[sandw6,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw6,child3,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 2218 2219 2220 2221
2100 m0_serve_splitted_1[sandw6] -> _splitting_method_m0_serve_splitted_1 2101
1603 serve[child3] -> m0_serve 1604 2100 2217
1441 m0_serve_splitted_5[sandw15,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw15,child2,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 1442 1443 1444 1445
1303 m0_serve_splitted_1[sandw15] -> _splitting_method_m0_serve_splitted_1 1304
1120 serve[child2] -> m0_serve 1121 1303 1441
325 m0_serve_splitted_5[sandw7,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw7,child1,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 326 327 328 329
43 m0_serve_splitted_1[sandw7] -> _splitting_method_m0_serve_splitted_1 44
11 serve[child1] -> m0_serve 12 43 325
0 __top[] -> __top_method 11 1120 1603 2512 4263 5743 7944 8050 8179 8290 8412 8476 8544
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 1.26953 MEMPEAK_KBS 3712

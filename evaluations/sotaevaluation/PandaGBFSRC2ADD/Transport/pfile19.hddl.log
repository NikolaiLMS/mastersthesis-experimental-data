pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/235/235.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/235/235.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.605ms
Contains 0.078ms
Restrict 0.102ms
MPrep 0.092ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [278] grounded tasks and [107] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [402] grounded tasks and [401] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 402 tasks, 401 methods.
Grounded PG:
Input was [278, 402], output was [278, 107].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 76 S 0 SC 0 SM 0 NSM 0 I 0 P 278 S 0 A 124 M 401
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/235/235.sas.
- State has 76 bits divided into 76 mutex groups.
- Domain contains 278 actions.
- Domain contains 402 tasks.
- Domain contains 401 methods.
- The initial state contains 15 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 380
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.738 seconds
- Visited list time 0.015948 seconds
- Visited list inserts 2418
- Visited list pruned 752
- Visited list contains 1666
- Visited list hash collisions 752
- Visited list used hash buckets 1666
- Generated 19380 search nodes
  Calculated heuristic for 11930 nodes
  One modifications 7098
  Effectless actions 352
- including 7098 one modification actions
- including 0 one modification methods
- and       352 progressions of effectless actions
- Generated 16165 nodes per second
- Final fringe contains 3949 nodes
- Status: Solved
- Found solution of length 155
- Total costs of actions: 66
==>
16 drive[truck_0,city_loc_11,city_loc_10]
17 drive[truck_0,city_loc_10,city_loc_2]
28 pick_up[truck_0,city_loc_2,package_6,capacity_2,capacity_3]
37 drive[truck_0,city_loc_2,city_loc_10]
38 drive[truck_0,city_loc_10,city_loc_11]
558 drop[truck_0,city_loc_11,package_6,capacity_2,capacity_3]
3301 noop[truck_0,city_loc_11]
3304 pick_up[truck_0,city_loc_11,package_2,capacity_2,capacity_3]
3311 drive[truck_0,city_loc_11,city_loc_10]
3321 drop[truck_0,city_loc_10,package_2,capacity_2,capacity_3]
3340 drive[truck_1,city_loc_1,city_loc_4]
3341 drive[truck_1,city_loc_4,city_loc_3]
3385 pick_up[truck_1,city_loc_3,package_5,capacity_2,capacity_3]
4059 drive[truck_1,city_loc_3,city_loc_4]
4060 drive[truck_1,city_loc_4,city_loc_0]
4061 drive[truck_1,city_loc_0,city_loc_8]
4062 drive[truck_1,city_loc_8,city_loc_5]
4074 drop[truck_1,city_loc_5,package_5,capacity_2,capacity_3]
4093 drive[truck_0,city_loc_10,city_loc_2]
4094 drive[truck_0,city_loc_2,city_loc_4]
4100 pick_up[truck_0,city_loc_4,package_7,capacity_2,capacity_3]
4116 drive[truck_0,city_loc_4,city_loc_2]
4117 drive[truck_0,city_loc_2,city_loc_10]
4125 drop[truck_0,city_loc_10,package_7,capacity_2,capacity_3]
17080 drive[truck_1,city_loc_5,city_loc_8]
17081 drive[truck_1,city_loc_8,city_loc_10]
17088 pick_up[truck_1,city_loc_10,package_1,capacity_2,capacity_3]
17106 drive[truck_1,city_loc_10,city_loc_2]
17107 drive[truck_1,city_loc_2,city_loc_4]
17108 drive[truck_1,city_loc_4,city_loc_3]
17118 drop[truck_1,city_loc_3,package_1,capacity_2,capacity_3]
17392 drive[truck_1,city_loc_3,city_loc_4]
17393 drive[truck_1,city_loc_4,city_loc_2]
17405 pick_up[truck_1,city_loc_2,package_8,capacity_2,capacity_3]
17411 drive[truck_1,city_loc_2,city_loc_4]
17412 drive[truck_1,city_loc_4,city_loc_7]
17424 drop[truck_1,city_loc_7,package_8,capacity_2,capacity_3]
17449 drive[truck_0,city_loc_10,city_loc_9]
17450 drive[truck_0,city_loc_9,city_loc_0]
17457 pick_up[truck_0,city_loc_0,package_4,capacity_2,capacity_3]
17465 drive[truck_0,city_loc_0,city_loc_8]
17466 drive[truck_0,city_loc_8,city_loc_5]
17516 drop[truck_0,city_loc_5,package_4,capacity_2,capacity_3]
18662 drive[truck_0,city_loc_5,city_loc_8]
18671 pick_up[truck_0,city_loc_8,package_0,capacity_2,capacity_3]
18678 drive[truck_0,city_loc_8,city_loc_10]
18679 drive[truck_0,city_loc_10,city_loc_11]
18873 drop[truck_0,city_loc_11,package_0,capacity_2,capacity_3]
19138 drive[truck_0,city_loc_11,city_loc_10]
19148 pick_up[truck_0,city_loc_10,package_9,capacity_2,capacity_3]
19153 drive[truck_0,city_loc_10,city_loc_8]
19161 drop[truck_0,city_loc_8,package_9,capacity_2,capacity_3]
19186 drive[truck_1,city_loc_7,city_loc_4]
19187 drive[truck_1,city_loc_4,city_loc_1]
19196 pick_up[truck_1,city_loc_1,package_10,capacity_2,capacity_3]
19211 drive[truck_1,city_loc_1,city_loc_4]
19212 drive[truck_1,city_loc_4,city_loc_0]
19220 drop[truck_1,city_loc_0,package_10,capacity_2,capacity_3]
19237 drive[truck_1,city_loc_0,city_loc_4]
19238 drive[truck_1,city_loc_4,city_loc_1]
19250 pick_up[truck_1,city_loc_1,package_3,capacity_2,capacity_3]
19365 drive[truck_1,city_loc_1,city_loc_4]
19366 drive[truck_1,city_loc_4,city_loc_0]
19367 drive[truck_1,city_loc_0,city_loc_8]
19368 drive[truck_1,city_loc_8,city_loc_5]
19378 drop[truck_1,city_loc_5,package_3,capacity_2,capacity_3]
root 0
19377 unload[truck_1,city_loc_5,package_3] -> m_unload_ordering_0 19378
19364 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 19365
19297 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 19364 19366
19260 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 19297 19367
19255 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 19260 19368
19249 load[truck_1,city_loc_1,package_3] -> m_load_ordering_0 19250
19236 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 19237
19229 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 19236 19238
19225 m_deliver_ordering_0_splitted_1[truck_1,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 19229 19249
19223 deliver[package_3,city_loc_5] -> m_deliver_ordering_0 19225 19255 19377
19219 unload[truck_1,city_loc_0,package_10] -> m_unload_ordering_0 19220
19210 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 19211
19204 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 19210 19212
19195 load[truck_1,city_loc_1,package_10] -> m_load_ordering_0 19196
19185 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 19186
19168 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 19185 19187
19164 m_deliver_ordering_0_splitted_1[truck_1,package_10] -> _splitting_method_m_deliver_ordering_0_splitted_1 19168 19195
19162 deliver[package_10,city_loc_0] -> m_deliver_ordering_0 19164 19204 19219
19160 unload[truck_0,city_loc_8,package_9] -> m_unload_ordering_0 19161
19152 get_to[truck_0,city_loc_8] -> m_drive_to_ordering_0 19153
19147 load[truck_0,city_loc_10,package_9] -> m_load_ordering_0 19148
19137 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 19138
19132 m_deliver_ordering_0_splitted_1[truck_0,package_9] -> _splitting_method_m_deliver_ordering_0_splitted_1 19137 19147
19130 deliver[package_9,city_loc_8] -> m_deliver_ordering_0 19132 19152 19160
18872 unload[truck_0,city_loc_11,package_0] -> m_unload_ordering_0 18873
18677 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 18678
18675 get_to[truck_0,city_loc_11] -> m_drive_to_via_ordering_0 18677 18679
18670 load[truck_0,city_loc_8,package_0] -> m_load_ordering_0 18671
18661 get_to[truck_0,city_loc_8] -> m_drive_to_ordering_0 18662
18464 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 18661 18670
18386 deliver[package_0,city_loc_11] -> m_deliver_ordering_0 18464 18675 18872
17515 unload[truck_0,city_loc_5,package_4] -> m_unload_ordering_0 17516
17464 get_to[truck_0,city_loc_8] -> m_drive_to_ordering_0 17465
17462 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 17464 17466
17456 load[truck_0,city_loc_0,package_4] -> m_load_ordering_0 17457
17448 get_to[truck_0,city_loc_9] -> m_drive_to_ordering_0 17449
17445 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 17448 17450
17439 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 17445 17456
17436 deliver[package_4,city_loc_5] -> m_deliver_ordering_0 17439 17462 17515
17423 unload[truck_1,city_loc_7,package_8] -> m_unload_ordering_0 17424
17410 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 17411
17408 get_to[truck_1,city_loc_7] -> m_drive_to_via_ordering_0 17410 17412
17404 load[truck_1,city_loc_2,package_8] -> m_load_ordering_0 17405
17391 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 17392
17151 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 17391 17393
17145 m_deliver_ordering_0_splitted_1[truck_1,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 17151 17404
17120 deliver[package_8,city_loc_7] -> m_deliver_ordering_0 17145 17408 17423
17117 unload[truck_1,city_loc_3,package_1] -> m_unload_ordering_0 17118
17105 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 17106
17100 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 17105 17107
17093 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 17100 17108
17087 load[truck_1,city_loc_10,package_1] -> m_load_ordering_0 17088
17079 get_to[truck_1,city_loc_8] -> m_drive_to_ordering_0 17080
8683 get_to[truck_1,city_loc_10] -> m_drive_to_via_ordering_0 17079 17081
7879 m_deliver_ordering_0_splitted_1[truck_1,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 8683 17087
4232 deliver[package_1,city_loc_3] -> m_deliver_ordering_0 7879 17093 17117
4124 unload[truck_0,city_loc_10,package_7] -> m_unload_ordering_0 4125
4115 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 4116
4109 get_to[truck_0,city_loc_10] -> m_drive_to_via_ordering_0 4115 4117
4099 load[truck_0,city_loc_4,package_7] -> m_load_ordering_0 4100
4092 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 4093
4086 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 4092 4094
4078 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 4086 4099
4076 deliver[package_7,city_loc_10] -> m_deliver_ordering_0 4078 4109 4124
4073 unload[truck_1,city_loc_5,package_5] -> m_unload_ordering_0 4074
4058 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 4059
3706 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 4058 4060
3408 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 3706 4061
3388 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 3408 4062
3384 load[truck_1,city_loc_3,package_5] -> m_load_ordering_0 3385
3339 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 3340
3334 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 3339 3341
3331 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 3334 3384
3324 deliver[package_5,city_loc_5] -> m_deliver_ordering_0 3331 3388 4073
3320 unload[truck_0,city_loc_10,package_2] -> m_unload_ordering_0 3321
3310 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 3311
3303 load[truck_0,city_loc_11,package_2] -> m_load_ordering_0 3304
3300 get_to[truck_0,city_loc_11] -> m_i_am_there_ordering_0 3301
3297 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 3300 3303
2732 deliver[package_2,city_loc_10] -> m_deliver_ordering_0 3297 3310 3320
557 unload[truck_0,city_loc_11,package_6] -> m_unload_ordering_0 558
36 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 37
31 get_to[truck_0,city_loc_11] -> m_drive_to_via_ordering_0 36 38
27 load[truck_0,city_loc_2,package_6] -> m_load_ordering_0 28
15 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 16
9 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 15 17
4 m_deliver_ordering_0_splitted_1[truck_0,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 9 27
2 deliver[package_6,city_loc_11] -> m_deliver_ordering_0 4 31 557
0 __top[] -> __top_method 2 2732 3324 4076 4232 17120 17436 18386 19130 19162 19223
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 1.10156 MEMPEAK_KBS 3756

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/231/231.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/231/231.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.465ms
Contains 0.063ms
Restrict 0.076ms
MPrep 0.068ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [255] grounded tasks and [103] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [397] grounded tasks and [406] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 397 tasks, 406 methods.
Grounded PG:
Input was [255, 397], output was [255, 103].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 78 S 0 SC 0 SM 0 NSM 0 I 0 P 255 S 0 A 142 M 406
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaGBFS_runwatchtime_timeout1800_2021-11-16_21:14:14/runwatch_log/231/231.sas.
- State has 78 bits divided into 78 mutex groups.
- Domain contains 255 actions.
- Domain contains 397 tasks.
- Domain contains 406 methods.
- The initial state contains 15 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 376
- The problem is cyclic
- Number of cyclic SCCs: 3
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
   1s visitime    0.05s generated nodes     60073 nodes/sec   58837 cur h  134 mod.depth   28 inserts      7065 dups      2997 size      4068 hash fail   2997 hash buckets   4068
   2s visitime    0.10s generated nodes    125170 nodes/sec   60120 cur h  134 mod.depth   29 inserts     14767 dups      6683 size      8084 hash fail   6684 hash buckets   8083
   3s visitime    0.14s generated nodes    190270 nodes/sec   61258 cur h  135 mod.depth   29 inserts     20993 dups      8990 size     12003 hash fail   8991 hash buckets  12002
   4s visitime    0.19s generated nodes    255393 nodes/sec   62018 cur h  135 mod.depth   30 inserts     27159 dups     11306 size     15853 hash fail  11310 hash buckets  15849
   5s visitime    0.25s generated nodes    320531 nodes/sec   62251 cur h  136 mod.depth   29 inserts     35744 dups     16073 size     19671 hash fail  16081 hash buckets  19663
   6s visitime    0.31s generated nodes    385649 nodes/sec   62372 cur h  136 mod.depth   30 inserts     43892 dups     20447 size     23445 hash fail  20463 hash buckets  23429
   7s visitime    0.36s generated nodes    455777 nodes/sec   62779 cur h  136 mod.depth   30 inserts     50274 dups     22815 size     27459 hash fail  22835 hash buckets  27439
   8s visitime    0.40s generated nodes    525890 nodes/sec   63169 cur h  135 mod.depth   31 inserts     56604 dups     25133 size     31471 hash fail  25156 hash buckets  31448
   9s visitime    0.45s generated nodes    596004 nodes/sec   63499 cur h  137 mod.depth   30 inserts     62773 dups     27333 size     35440 hash fail  27364 hash buckets  35409
  10s visitime    0.51s generated nodes    666131 nodes/sec   63769 cur h  137 mod.depth   30 inserts     69421 dups     30062 size     39359 hash fail  30103 hash buckets  39318
Search Results
- Search time 11.49 seconds
- Visited list time 0.56 seconds
- Visited list inserts 77000
- Visited list pruned 33768
- Visited list contains 43232
- Visited list hash collisions 33817
- Visited list used hash buckets 43183
- Generated 734790 search nodes
  Calculated heuristic for 328348 nodes
  One modifications 394599
  Effectless actions 11843
- including 394599 one modification actions
- including 0 one modification methods
- and       11843 progressions of effectless actions
- Generated 28571 nodes per second
- Final fringe contains 107327 nodes
- Status: Solved
- Found solution of length 133
- Total costs of actions: 57
==>
18 drive[truck_0,city_loc_5,city_loc_6]
24 pick_up[truck_0,city_loc_6,package_8,capacity_1,capacity_2]
39 drive[truck_0,city_loc_6,city_loc_3]
40 drive[truck_0,city_loc_3,city_loc_4]
41 drive[truck_0,city_loc_4,city_loc_0]
48 drop[truck_0,city_loc_0,package_8,capacity_1,capacity_2]
58 drive[truck_2,city_loc_2,city_loc_7]
66 pick_up[truck_2,city_loc_7,package_4,capacity_1,capacity_2]
68 drive[truck_2,city_loc_7,city_loc_2]
103 drop[truck_2,city_loc_2,package_4,capacity_1,capacity_2]
204 noop[truck_0,city_loc_0]
207 pick_up[truck_0,city_loc_0,package_0,capacity_1,capacity_2]
24230 drive[truck_0,city_loc_0,city_loc_4]
24231 drive[truck_0,city_loc_4,city_loc_3]
24232 drive[truck_0,city_loc_3,city_loc_6]
24233 drive[truck_0,city_loc_6,city_loc_7]
24234 drive[truck_0,city_loc_7,city_loc_2]
24241 drop[truck_0,city_loc_2,package_0,capacity_1,capacity_2]
734452 drive[truck_0,city_loc_2,city_loc_7]
734453 drive[truck_0,city_loc_7,city_loc_6]
734454 drive[truck_0,city_loc_6,city_loc_3]
734455 drive[truck_0,city_loc_3,city_loc_4]
734456 drive[truck_0,city_loc_4,city_loc_0]
734466 pick_up[truck_0,city_loc_0,package_3,capacity_1,capacity_2]
734542 drive[truck_0,city_loc_0,city_loc_4]
734543 drive[truck_0,city_loc_4,city_loc_3]
734544 drive[truck_0,city_loc_3,city_loc_6]
734545 drive[truck_0,city_loc_6,city_loc_7]
734546 drive[truck_0,city_loc_7,city_loc_1]
734553 drop[truck_0,city_loc_1,package_3,capacity_1,capacity_2]
734575 drive[truck_2,city_loc_2,city_loc_7]
734582 pick_up[truck_2,city_loc_7,package_7,capacity_1,capacity_2]
734603 drive[truck_2,city_loc_7,city_loc_5]
734604 drive[truck_2,city_loc_5,city_loc_3]
734605 drive[truck_2,city_loc_3,city_loc_4]
734606 drive[truck_2,city_loc_4,city_loc_0]
734616 drop[truck_2,city_loc_0,package_7,capacity_1,capacity_2]
734631 drive[truck_0,city_loc_1,city_loc_7]
734632 drive[truck_0,city_loc_7,city_loc_6]
734641 pick_up[truck_0,city_loc_6,package_2,capacity_1,capacity_2]
734653 drive[truck_0,city_loc_6,city_loc_7]
734654 drive[truck_0,city_loc_7,city_loc_2]
734663 drop[truck_0,city_loc_2,package_2,capacity_1,capacity_2]
734674 noop[truck_1,city_loc_4]
734679 pick_up[truck_1,city_loc_4,package_6,capacity_1,capacity_2]
734684 drive[truck_1,city_loc_4,city_loc_3]
734691 drop[truck_1,city_loc_3,package_6,capacity_1,capacity_2]
734701 noop[truck_1,city_loc_3]
734707 pick_up[truck_1,city_loc_3,package_5,capacity_1,capacity_2]
734714 drive[truck_1,city_loc_3,city_loc_4]
734715 drive[truck_1,city_loc_4,city_loc_0]
734722 drop[truck_1,city_loc_0,package_5,capacity_1,capacity_2]
734762 drive[truck_2,city_loc_0,city_loc_4]
734769 pick_up[truck_2,city_loc_4,package_1,capacity_1,capacity_2]
734779 drive[truck_2,city_loc_4,city_loc_3]
734780 drive[truck_2,city_loc_3,city_loc_6]
734788 drop[truck_2,city_loc_6,package_1,capacity_1,capacity_2]
root 0
734787 unload[truck_2,city_loc_6,package_1] -> m_unload_ordering_0 734788
734778 get_to[truck_2,city_loc_3] -> m_drive_to_ordering_0 734779
734775 get_to[truck_2,city_loc_6] -> m_drive_to_via_ordering_0 734778 734780
734768 load[truck_2,city_loc_4,package_1] -> m_load_ordering_0 734769
734761 get_to[truck_2,city_loc_4] -> m_drive_to_ordering_0 734762
734758 m_deliver_ordering_0_splitted_1[truck_2,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 734761 734768
734755 deliver[package_1,city_loc_6] -> m_deliver_ordering_0 734758 734775 734787
734721 unload[truck_1,city_loc_0,package_5] -> m_unload_ordering_0 734722
734713 get_to[truck_1,city_loc_4] -> m_drive_to_ordering_0 734714
734710 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 734713 734715
734706 load[truck_1,city_loc_3,package_5] -> m_load_ordering_0 734707
734700 get_to[truck_1,city_loc_3] -> m_i_am_there_ordering_0 734701
734696 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 734700 734706
734692 deliver[package_5,city_loc_0] -> m_deliver_ordering_0 734696 734710 734721
734690 unload[truck_1,city_loc_3,package_6] -> m_unload_ordering_0 734691
734683 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 734684
734678 load[truck_1,city_loc_4,package_6] -> m_load_ordering_0 734679
734673 get_to[truck_1,city_loc_4] -> m_i_am_there_ordering_0 734674
734667 m_deliver_ordering_0_splitted_1[truck_1,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 734673 734678
734664 deliver[package_6,city_loc_3] -> m_deliver_ordering_0 734667 734683 734690
734662 unload[truck_0,city_loc_2,package_2] -> m_unload_ordering_0 734663
734652 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 734653
734648 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 734652 734654
734640 load[truck_0,city_loc_6,package_2] -> m_load_ordering_0 734641
734630 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 734631
734626 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 734630 734632
734620 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 734626 734640
734619 deliver[package_2,city_loc_2] -> m_deliver_ordering_0 734620 734648 734662
734615 unload[truck_2,city_loc_0,package_7] -> m_unload_ordering_0 734616
734602 get_to[truck_2,city_loc_5] -> m_drive_to_ordering_0 734603
734598 get_to[truck_2,city_loc_3] -> m_drive_to_via_ordering_0 734602 734604
734591 get_to[truck_2,city_loc_4] -> m_drive_to_via_ordering_0 734598 734605
734586 get_to[truck_2,city_loc_0] -> m_drive_to_via_ordering_0 734591 734606
734581 load[truck_2,city_loc_7,package_7] -> m_load_ordering_0 734582
734574 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 734575
734569 m_deliver_ordering_0_splitted_1[truck_2,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 734574 734581
734557 deliver[package_7,city_loc_0] -> m_deliver_ordering_0 734569 734586 734615
734552 unload[truck_0,city_loc_1,package_3] -> m_unload_ordering_0 734553
734541 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 734542
734509 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 734541 734543
734494 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 734509 734544
734481 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 734494 734545
734471 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 734481 734546
734465 load[truck_0,city_loc_0,package_3] -> m_load_ordering_0 734466
734451 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 734452
258148 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 734451 734453
70911 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 258148 734454
24839 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 70911 734455
24331 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 24839 734456
24328 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 24331 734465
24245 deliver[package_3,city_loc_1] -> m_deliver_ordering_0 24328 734471 734552
24240 unload[truck_0,city_loc_2,package_0] -> m_unload_ordering_0 24241
24229 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 24230
9563 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 24229 24231
2007 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 9563 24232
367 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 2007 24233
214 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 367 24234
206 load[truck_0,city_loc_0,package_0] -> m_load_ordering_0 207
203 get_to[truck_0,city_loc_0] -> m_i_am_there_ordering_0 204
201 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 203 206
199 deliver[package_0,city_loc_2] -> m_deliver_ordering_0 201 214 24240
102 unload[truck_2,city_loc_2,package_4] -> m_unload_ordering_0 103
67 get_to[truck_2,city_loc_2] -> m_drive_to_ordering_0 68
65 load[truck_2,city_loc_7,package_4] -> m_load_ordering_0 66
57 get_to[truck_2,city_loc_7] -> m_drive_to_ordering_0 58
53 m_deliver_ordering_0_splitted_1[truck_2,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 57 65
49 deliver[package_4,city_loc_2] -> m_deliver_ordering_0 53 67 102
47 unload[truck_0,city_loc_0,package_8] -> m_unload_ordering_0 48
38 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 39
34 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 38 40
28 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 34 41
23 load[truck_0,city_loc_6,package_8] -> m_load_ordering_0 24
17 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 18
14 m_deliver_ordering_0_splitted_1[truck_0,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 17 23
2 deliver[package_8,city_loc_0] -> m_deliver_ordering_0 14 28 47
0 __top[] -> __top_method 2 49 199 24245 734557 734619 734664 734692 734755
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 11.7798 MEMPEAK_KBS 3880

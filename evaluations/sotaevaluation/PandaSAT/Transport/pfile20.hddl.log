pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/230/230.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/230/230.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.386ms
Contains 0.041ms
Restrict 0.087ms
MPrep 0.052ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [226] grounded tasks and [108] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [309] grounded tasks and [353] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 309 tasks, 353 methods.
Grounded PG:
Input was [226, 309], output was [226, 108].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 60 S 0 SC 0 SM 0 NSM 0 I 0 P 226 S 0 A 83 M 353
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/230/230.sas.
- State has 60 bits divided into 60 mutex groups.
- Domain contains 226 actions.
- Domain contains 309 tasks.
- Domain contains 353 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 283
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (5310)
Round 1: 5310 invariants remaining
Round 2: 1492 invariants remaining
Round 3: 526 invariants remaining
Round 4: 469 invariants remaining
Round 5: 345 invariants remaining
Round 6: 230 invariants remaining
Found 230 invariants in 1.18ms
Calculate SCCs...
- Number of SCCs: 283
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.041 ms
Computed PDT. Extracting leafs ... 6 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 7 of 7
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.066 ms
Computed PDT. Extracting leafs ... 18 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 43 of 43
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.259 ms
Computed PDT. Extracting leafs ... 30 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 211 of 211
Leaf Primitive Pruning: 84 of 84
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.856 ms
Computed PDT. Extracting leafs ... 42 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 212 of 444
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 232
Pruning: 741 of 741
Leaf Primitive Pruning: 444 of 444
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 1.99 ms
Computed PDT. Extracting leafs ... 54 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 189 of 1236
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 1047
Pruning: 697 of 1813
Leaf Primitive Pruning: 357 of 1236
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 2347 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 31 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 2.19ms SM: 0 M: 0 I: 0 SI: 230
[34mFormula: [m34946 decomposition 6303 state 7130 mutex
Formula has 4267 vars and 48379 clauses.
Formula time: 15.849ms
Starting solver
Solver time: 1.985ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 6[m
Computing PDT took: 2.924 ms
Computed PDT. Extracting leafs ... 66 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 234 of 2478
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 2244
Pruning: 1034 of 3373
Leaf Primitive Pruning: 604 of 2478
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 3852 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 43 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 3.161ms SM: 0 M: 0 I: 0 SI: 230
[34mFormula: [m135522 decomposition 10260 state 9890 mutex
Formula has 10759 vars and 204051 clauses.
Formula time: 38.988ms
Starting solver
Solver time: 0.536ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 7[m
Computing PDT took: 3.288 ms
Computed PDT. Extracting leafs ... 78 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 263 of 3850
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 3587
Pruning: 1262 of 5077
Leaf Primitive Pruning: 779 of 3850
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 6083 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 55 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 4.371ms SM: 0 M: 0 I: 0 SI: 230
[34mFormula: [m310351 decomposition 14711 state 12650 mutex
Formula has 20202 vars and 541763 clauses.
Formula time: 73.846ms
Starting solver
Solver time: 3.814ms
Solver state: [32mSAT[m
==>
0 drive[truck_1,city_loc_13,city_loc_1]
1 drive[truck_1,city_loc_1,city_loc_3]
2 pick_up[truck_1,city_loc_3,package_1,capacity_2,capacity_3]
3 drive[truck_1,city_loc_3,city_loc_5]
4 drive[truck_1,city_loc_5,city_loc_13]
5 drive[truck_1,city_loc_13,city_loc_1]
6 drive[truck_1,city_loc_1,city_loc_13]
7 drop[truck_1,city_loc_13,package_1,capacity_2,capacity_3]
8 drive[truck_1,city_loc_13,city_loc_5]
9 drive[truck_1,city_loc_5,city_loc_4]
10 drive[truck_1,city_loc_4,city_loc_6]
11 drive[truck_1,city_loc_6,city_loc_10]
12 pick_up[truck_1,city_loc_10,package_5,capacity_2,capacity_3]
13 drive[truck_1,city_loc_10,city_loc_6]
14 drive[truck_1,city_loc_6,city_loc_4]
15 drive[truck_1,city_loc_4,city_loc_5]
16 drive[truck_1,city_loc_5,city_loc_13]
17 drive[truck_1,city_loc_13,city_loc_1]
18 drop[truck_1,city_loc_1,package_5,capacity_2,capacity_3]
19 drive[truck_0,city_loc_4,city_loc_6]
20 drive[truck_0,city_loc_6,city_loc_10]
21 drive[truck_0,city_loc_10,city_loc_8]
22 pick_up[truck_0,city_loc_8,package_4,capacity_2,capacity_3]
23 drive[truck_0,city_loc_8,city_loc_10]
24 drive[truck_0,city_loc_10,city_loc_6]
25 drive[truck_0,city_loc_6,city_loc_4]
26 drive[truck_0,city_loc_4,city_loc_7]
27 drive[truck_0,city_loc_7,city_loc_1]
28 drop[truck_0,city_loc_1,package_4,capacity_2,capacity_3]
29 drive[truck_1,city_loc_1,city_loc_13]
30 drive[truck_1,city_loc_13,city_loc_1]
31 drive[truck_1,city_loc_1,city_loc_3]
32 pick_up[truck_1,city_loc_3,package_2,capacity_2,capacity_3]
33 drive[truck_1,city_loc_3,city_loc_1]
34 drive[truck_1,city_loc_1,city_loc_13]
35 drive[truck_1,city_loc_13,city_loc_1]
36 drive[truck_1,city_loc_1,city_loc_3]
37 drive[truck_1,city_loc_3,city_loc_2]
38 drop[truck_1,city_loc_2,package_2,capacity_2,capacity_3]
39 drive[truck_1,city_loc_2,city_loc_3]
40 drive[truck_1,city_loc_3,city_loc_5]
41 drive[truck_1,city_loc_5,city_loc_4]
42 pick_up[truck_1,city_loc_4,package_3,capacity_2,capacity_3]
43 drive[truck_1,city_loc_4,city_loc_5]
44 drive[truck_1,city_loc_5,city_loc_13]
45 drive[truck_1,city_loc_13,city_loc_1]
46 drive[truck_1,city_loc_1,city_loc_13]
47 drop[truck_1,city_loc_13,package_3,capacity_2,capacity_3]
48 drive[truck_0,city_loc_1,city_loc_7]
49 drive[truck_0,city_loc_7,city_loc_4]
50 drive[truck_0,city_loc_4,city_loc_6]
51 drive[truck_0,city_loc_6,city_loc_11]
52 pick_up[truck_0,city_loc_11,package_0,capacity_2,capacity_3]
53 drive[truck_0,city_loc_11,city_loc_6]
54 drive[truck_0,city_loc_6,city_loc_4]
55 drive[truck_0,city_loc_4,city_loc_5]
56 drive[truck_0,city_loc_5,city_loc_3]
57 drive[truck_0,city_loc_3,city_loc_2]
58 drop[truck_0,city_loc_2,package_0,capacity_2,capacity_3]
root 59
59 __top[] -> __top_method 60 70 83 95 107 118
60 deliver[package_1,city_loc_13] -> m_deliver_ordering_0 61 65 69
61 m_deliver_ordering_0_splitted_1[truck_1,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 62 64
62 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 63 1
63 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 0
64 load[truck_1,city_loc_3,package_1] -> m_load_ordering_0 2
65 get_to[truck_1,city_loc_13] -> m_drive_to_via_ordering_0 66 6
66 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 67 5
67 get_to[truck_1,city_loc_13] -> m_drive_to_via_ordering_0 68 4
68 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 3
69 unload[truck_1,city_loc_13,package_1] -> m_unload_ordering_0 7
70 deliver[package_5,city_loc_1] -> m_deliver_ordering_0 71 77 82
71 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 72 76
72 get_to[truck_1,city_loc_10] -> m_drive_to_via_ordering_0 73 11
73 get_to[truck_1,city_loc_6] -> m_drive_to_via_ordering_0 74 10
74 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 75 9
75 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 8
76 load[truck_1,city_loc_10,package_5] -> m_load_ordering_0 12
77 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 78 17
78 get_to[truck_1,city_loc_13] -> m_drive_to_via_ordering_0 79 16
79 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 80 15
80 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 81 14
81 get_to[truck_1,city_loc_6] -> m_drive_to_ordering_0 13
82 unload[truck_1,city_loc_1,package_5] -> m_unload_ordering_0 18
83 deliver[package_4,city_loc_1] -> m_deliver_ordering_0 84 89 94
84 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 85 88
85 get_to[truck_0,city_loc_8] -> m_drive_to_via_ordering_0 86 21
86 get_to[truck_0,city_loc_10] -> m_drive_to_via_ordering_0 87 20
87 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 19
88 load[truck_0,city_loc_8,package_4] -> m_load_ordering_0 22
89 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 90 27
90 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 91 26
91 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 92 25
92 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 93 24
93 get_to[truck_0,city_loc_10] -> m_drive_to_ordering_0 23
94 unload[truck_0,city_loc_1,package_4] -> m_unload_ordering_0 28
95 deliver[package_2,city_loc_2] -> m_deliver_ordering_0 96 101 106
96 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 97 100
97 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 98 31
98 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 99 30
99 get_to[truck_1,city_loc_13] -> m_drive_to_ordering_0 29
100 load[truck_1,city_loc_3,package_2] -> m_load_ordering_0 32
101 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 102 37
102 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 103 36
103 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 104 35
104 get_to[truck_1,city_loc_13] -> m_drive_to_via_ordering_0 105 34
105 get_to[truck_1,city_loc_1] -> m_drive_to_ordering_0 33
106 unload[truck_1,city_loc_2,package_2] -> m_unload_ordering_0 38
107 deliver[package_3,city_loc_13] -> m_deliver_ordering_0 108 113 117
108 m_deliver_ordering_0_splitted_1[truck_1,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 109 112
109 get_to[truck_1,city_loc_4] -> m_drive_to_via_ordering_0 110 41
110 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 111 40
111 get_to[truck_1,city_loc_3] -> m_drive_to_ordering_0 39
112 load[truck_1,city_loc_4,package_3] -> m_load_ordering_0 42
113 get_to[truck_1,city_loc_13] -> m_drive_to_via_ordering_0 114 46
114 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 115 45
115 get_to[truck_1,city_loc_13] -> m_drive_to_via_ordering_0 116 44
116 get_to[truck_1,city_loc_5] -> m_drive_to_ordering_0 43
117 unload[truck_1,city_loc_13,package_3] -> m_unload_ordering_0 47
118 deliver[package_0,city_loc_2] -> m_deliver_ordering_0 119 125 130
119 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 120 124
120 get_to[truck_0,city_loc_11] -> m_drive_to_via_ordering_0 121 51
121 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 122 50
122 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 123 49
123 get_to[truck_0,city_loc_7] -> m_drive_to_ordering_0 48
124 load[truck_0,city_loc_11,package_0] -> m_load_ordering_0 52
125 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 126 57
126 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 127 56
127 get_to[truck_0,city_loc_5] -> m_drive_to_via_ordering_0 128 55
128 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 129 54
129 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 53
130 unload[truck_0,city_loc_2,package_0] -> m_unload_ordering_0 58
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.202148 MEMPEAK_KBS 924

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/240/240.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/240/240.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.187ms
Contains 0.021ms
Restrict 0.029ms
MPrep 0.027ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [28] grounded tasks and [24] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [47] grounded tasks and [45] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 47 tasks, 45 methods.
Grounded PG:
Input was [28, 47], output was [28, 24].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 15 S 0 SC 0 SM 0 NSM 0 I 0 P 28 S 0 A 16 M 42
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/240/240.sas.
- State has 15 bits divided into 15 mutex groups.
- Domain contains 28 actions.
- Domain contains 44 tasks.
- Domain contains 42 methods.
- The initial state contains 5 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 42
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (315)
Round 1: 315 invariants remaining
Round 2: 138 invariants remaining
Round 3: 63 invariants remaining
Round 4: 42 invariants remaining
Round 5: 15 invariants remaining
Found 15 invariants in 0.144ms
Calculate SCCs...
- Number of SCCs: 42
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.062 ms
Computed PDT. Extracting leafs ... 9 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 10 of 10
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.086 ms
Computed PDT. Extracting leafs ... 15 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 45 of 45
Leaf Primitive Pruning: 16 of 16
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.178 ms
Computed PDT. Extracting leafs ... 21 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 21 of 72
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 51
Pruning: 119 of 119
Leaf Primitive Pruning: 72 of 72
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.158 ms
Computed PDT. Extracting leafs ... 27 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 18 of 132
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 114
Pruning: 59 of 197
Leaf Primitive Pruning: 32 of 132
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 324 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 16 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.07ms SM: 0 M: 0 I: 0 SI: 15
[34mFormula: [m1227 decomposition 758 state 240 mutex
Formula has 579 vars and 2225 clauses.
Formula time: 1.313ms
Starting solver
Solver time: 0.129ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_0,city_loc_1]
1 drive[truck_0,city_loc_1,city_loc_2]
2 pick_up[truck_0,city_loc_2,package_1,capacity_1,capacity_2]
3 drive[truck_0,city_loc_2,city_loc_1]
4 drive[truck_0,city_loc_1,city_loc_0]
5 drive[truck_0,city_loc_0,city_loc_1]
6 drop[truck_0,city_loc_1,package_1,capacity_1,capacity_2]
7 drive[truck_0,city_loc_1,city_loc_0]
8 drive[truck_0,city_loc_0,city_loc_1]
9 pick_up[truck_0,city_loc_1,package_0,capacity_1,capacity_2]
10 drive[truck_0,city_loc_1,city_loc_0]
11 drive[truck_0,city_loc_0,city_loc_0]
12 drive[truck_0,city_loc_0,city_loc_0]
13 drop[truck_0,city_loc_0,package_0,capacity_1,capacity_2]
14 drive[truck_0,city_loc_0,city_loc_1]
15 drive[truck_0,city_loc_1,city_loc_2]
16 pick_up[truck_0,city_loc_2,package_2,capacity_1,capacity_2]
17 drive[truck_0,city_loc_2,city_loc_1]
18 drive[truck_0,city_loc_1,city_loc_0]
19 drive[truck_0,city_loc_0,city_loc_0]
20 drop[truck_0,city_loc_0,package_2,capacity_1,capacity_2]
root 21
21 __top[] -> <<<__top_method;deliver[package_2,city_loc_0];m_deliver_ordering_0;2;0,1,-1,-2,-3>;deliver[package_1,city_loc_1];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4>;deliver[package_0,city_loc_0];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5,6> 22 26 29 30 34 37 38 42 45
22 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 23 25
23 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 24 1
24 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 0
25 load[truck_0,city_loc_2,package_1] -> m_load_ordering_0 2
26 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 27 5
27 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 28 4
28 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 3
29 unload[truck_0,city_loc_1,package_1] -> m_unload_ordering_0 6
30 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 31 33
31 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 32 8
32 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 7
33 load[truck_0,city_loc_1,package_0] -> m_load_ordering_0 9
34 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 35 12
35 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 36 11
36 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 10
37 unload[truck_0,city_loc_0,package_0] -> m_unload_ordering_0 13
38 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 39 41
39 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 40 15
40 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 14
41 load[truck_0,city_loc_2,package_2] -> m_load_ordering_0 16
42 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 43 19
43 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 44 18
44 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 17
45 unload[truck_0,city_loc_0,package_2] -> m_unload_ordering_0 20
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.03125 MEMPEAK_KBS 924

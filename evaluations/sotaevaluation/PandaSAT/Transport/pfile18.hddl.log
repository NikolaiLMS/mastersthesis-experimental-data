pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/244/244.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/244/244.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.548ms
Contains 0.075ms
Restrict 0.104ms
MPrep 0.071ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           2 (pick_up)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [270] grounded tasks and [106] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [381] grounded tasks and [401] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 381 tasks, 401 methods.
Grounded PG:
Input was [270, 381], output was [270, 106].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 68 S 0 SC 0 SM 0 NSM 0 I 0 P 270 S 0 A 111 M 401
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/244/244.sas.
- State has 68 bits divided into 68 mutex groups.
- Domain contains 270 actions.
- Domain contains 381 tasks.
- Domain contains 401 methods.
- The initial state contains 14 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 363
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.007ms.

Computing invariants [Rintanen]
Initial candidates build (6834)
Round 1: 6834 invariants remaining
Round 2: 3708 invariants remaining
Round 3: 987 invariants remaining
Round 4: 322 invariants remaining
Round 5: 162 invariants remaining
Found 162 invariants in 1.548ms
Calculate SCCs...
- Number of SCCs: 363
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.082 ms
Computed PDT. Extracting leafs ... 10 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 11 of 11
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.103 ms
Computed PDT. Extracting leafs ... 30 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 71 of 71
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.478 ms
Computed PDT. Extracting leafs ... 50 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 391 of 391
Leaf Primitive Pruning: 160 of 160
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 1.79 ms
Computed PDT. Extracting leafs ... 70 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 176 of 876
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 700
Pruning: 1407 of 1407
Leaf Primitive Pruning: 876 of 876
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 3.69 ms
Computed PDT. Extracting leafs ... 90 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 246 of 2328
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 2082
Pruning: 1078 of 3249
Leaf Primitive Pruning: 582 of 2328
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 4597 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 51 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 2.64ms SM: 0 M: 0 I: 0 SI: 162
[34mFormula: [m77400 decomposition 11821 state 8262 mutex
Formula has 8133 vars and 97483 clauses.
Formula time: 29.021ms
Starting solver
Solver time: 4.548ms
Solver state: [32mSAT[m
==>
0 drive[truck_1,city_loc_3,city_loc_9]
1 drive[truck_1,city_loc_9,city_loc_2]
2 pick_up[truck_1,city_loc_2,package_8,capacity_2,capacity_3]
3 drive[truck_1,city_loc_2,city_loc_9]
4 drive[truck_1,city_loc_9,city_loc_3]
5 drive[truck_1,city_loc_3,city_loc_9]
6 drop[truck_1,city_loc_9,package_8,capacity_2,capacity_3]
7 drive[truck_1,city_loc_9,city_loc_6]
8 drive[truck_1,city_loc_6,city_loc_0]
9 pick_up[truck_1,city_loc_0,package_4,capacity_2,capacity_3]
10 drive[truck_1,city_loc_0,city_loc_6]
11 drive[truck_1,city_loc_6,city_loc_9]
12 drive[truck_1,city_loc_9,city_loc_2]
13 drop[truck_1,city_loc_2,package_4,capacity_2,capacity_3]
14 drive[truck_1,city_loc_2,city_loc_7]
15 pick_up[truck_1,city_loc_7,package_9,capacity_2,capacity_3]
16 drive[truck_1,city_loc_7,city_loc_2]
17 drive[truck_1,city_loc_2,city_loc_6]
18 drive[truck_1,city_loc_6,city_loc_8]
19 drop[truck_1,city_loc_8,package_9,capacity_2,capacity_3]
20 drive[truck_1,city_loc_8,city_loc_6]
21 drive[truck_1,city_loc_6,city_loc_9]
22 pick_up[truck_1,city_loc_9,package_5,capacity_2,capacity_3]
23 drive[truck_1,city_loc_9,city_loc_2]
24 drive[truck_1,city_loc_2,city_loc_1]
25 drop[truck_1,city_loc_1,package_5,capacity_2,capacity_3]
26 drive[truck_1,city_loc_1,city_loc_0]
27 drive[truck_1,city_loc_0,city_loc_8]
28 pick_up[truck_1,city_loc_8,package_2,capacity_2,capacity_3]
29 drive[truck_1,city_loc_8,city_loc_6]
30 drive[truck_1,city_loc_6,city_loc_2]
31 drive[truck_1,city_loc_2,city_loc_5]
32 drop[truck_1,city_loc_5,package_2,capacity_2,capacity_3]
33 drive[truck_1,city_loc_5,city_loc_2]
34 drive[truck_1,city_loc_2,city_loc_9]
35 pick_up[truck_1,city_loc_9,package_6,capacity_2,capacity_3]
36 drive[truck_1,city_loc_9,city_loc_2]
37 drive[truck_1,city_loc_2,city_loc_1]
38 drop[truck_1,city_loc_1,package_6,capacity_2,capacity_3]
39 drive[truck_1,city_loc_1,city_loc_2]
40 drive[truck_1,city_loc_2,city_loc_5]
41 pick_up[truck_1,city_loc_5,package_1,capacity_2,capacity_3]
42 drive[truck_1,city_loc_5,city_loc_8]
43 drive[truck_1,city_loc_8,city_loc_6]
44 drive[truck_1,city_loc_6,city_loc_0]
45 drop[truck_1,city_loc_0,package_1,capacity_2,capacity_3]
46 drive[truck_0,city_loc_3,city_loc_3]
47 drive[truck_0,city_loc_3,city_loc_3]
48 pick_up[truck_0,city_loc_3,package_7,capacity_2,capacity_3]
49 drive[truck_0,city_loc_3,city_loc_9]
50 drive[truck_0,city_loc_9,city_loc_2]
51 drop[truck_0,city_loc_2,package_7,capacity_2,capacity_3]
52 drive[truck_1,city_loc_0,city_loc_7]
53 pick_up[truck_1,city_loc_7,package_0,capacity_2,capacity_3]
54 drive[truck_1,city_loc_7,city_loc_9]
55 drive[truck_1,city_loc_9,city_loc_2]
56 drive[truck_1,city_loc_2,city_loc_5]
57 drop[truck_1,city_loc_5,package_0,capacity_2,capacity_3]
58 drive[truck_0,city_loc_2,city_loc_9]
59 drive[truck_0,city_loc_9,city_loc_3]
60 pick_up[truck_0,city_loc_3,package_3,capacity_2,capacity_3]
61 drive[truck_0,city_loc_3,city_loc_9]
62 drive[truck_0,city_loc_9,city_loc_7]
63 drive[truck_0,city_loc_7,city_loc_9]
64 drop[truck_0,city_loc_9,package_3,capacity_2,capacity_3]
root 65
65 __top[] -> __top_method 66 75 84 92 100 109 117 126 134 142
66 deliver[package_8,city_loc_9] -> m_deliver_ordering_0 67 71 74
67 m_deliver_ordering_0_splitted_1[truck_1,package_8] -> _splitting_method_m_deliver_ordering_0_splitted_1 68 70
68 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 69 1
69 get_to[truck_1,city_loc_9] -> m_drive_to_ordering_0 0
70 load[truck_1,city_loc_2,package_8] -> m_load_ordering_0 2
71 get_to[truck_1,city_loc_9] -> m_drive_to_via_ordering_0 72 5
72 get_to[truck_1,city_loc_3] -> m_drive_to_via_ordering_0 73 4
73 get_to[truck_1,city_loc_9] -> m_drive_to_ordering_0 3
74 unload[truck_1,city_loc_9,package_8] -> m_unload_ordering_0 6
75 deliver[package_4,city_loc_2] -> m_deliver_ordering_0 76 80 83
76 m_deliver_ordering_0_splitted_1[truck_1,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 77 79
77 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 78 8
78 get_to[truck_1,city_loc_6] -> m_drive_to_ordering_0 7
79 load[truck_1,city_loc_0,package_4] -> m_load_ordering_0 9
80 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 81 12
81 get_to[truck_1,city_loc_9] -> m_drive_to_via_ordering_0 82 11
82 get_to[truck_1,city_loc_6] -> m_drive_to_ordering_0 10
83 unload[truck_1,city_loc_2,package_4] -> m_unload_ordering_0 13
84 deliver[package_9,city_loc_8] -> m_deliver_ordering_0 85 88 91
85 m_deliver_ordering_0_splitted_1[truck_1,package_9] -> _splitting_method_m_deliver_ordering_0_splitted_1 86 87
86 get_to[truck_1,city_loc_7] -> m_drive_to_ordering_0 14
87 load[truck_1,city_loc_7,package_9] -> m_load_ordering_0 15
88 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 89 18
89 get_to[truck_1,city_loc_6] -> m_drive_to_via_ordering_0 90 17
90 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 16
91 unload[truck_1,city_loc_8,package_9] -> m_unload_ordering_0 19
92 deliver[package_5,city_loc_1] -> m_deliver_ordering_0 93 97 99
93 m_deliver_ordering_0_splitted_1[truck_1,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 94 96
94 get_to[truck_1,city_loc_9] -> m_drive_to_via_ordering_0 95 21
95 get_to[truck_1,city_loc_6] -> m_drive_to_ordering_0 20
96 load[truck_1,city_loc_9,package_5] -> m_load_ordering_0 22
97 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 98 24
98 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 23
99 unload[truck_1,city_loc_1,package_5] -> m_unload_ordering_0 25
100 deliver[package_2,city_loc_5] -> m_deliver_ordering_0 101 105 108
101 m_deliver_ordering_0_splitted_1[truck_1,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 102 104
102 get_to[truck_1,city_loc_8] -> m_drive_to_via_ordering_0 103 27
103 get_to[truck_1,city_loc_0] -> m_drive_to_ordering_0 26
104 load[truck_1,city_loc_8,package_2] -> m_load_ordering_0 28
105 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 106 31
106 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 107 30
107 get_to[truck_1,city_loc_6] -> m_drive_to_ordering_0 29
108 unload[truck_1,city_loc_5,package_2] -> m_unload_ordering_0 32
109 deliver[package_6,city_loc_1] -> m_deliver_ordering_0 110 114 116
110 m_deliver_ordering_0_splitted_1[truck_1,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 111 113
111 get_to[truck_1,city_loc_9] -> m_drive_to_via_ordering_0 112 34
112 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 33
113 load[truck_1,city_loc_9,package_6] -> m_load_ordering_0 35
114 get_to[truck_1,city_loc_1] -> m_drive_to_via_ordering_0 115 37
115 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 36
116 unload[truck_1,city_loc_1,package_6] -> m_unload_ordering_0 38
117 deliver[package_1,city_loc_0] -> m_deliver_ordering_0 118 122 125
118 m_deliver_ordering_0_splitted_1[truck_1,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 119 121
119 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 120 40
120 get_to[truck_1,city_loc_2] -> m_drive_to_ordering_0 39
121 load[truck_1,city_loc_5,package_1] -> m_load_ordering_0 41
122 get_to[truck_1,city_loc_0] -> m_drive_to_via_ordering_0 123 44
123 get_to[truck_1,city_loc_6] -> m_drive_to_via_ordering_0 124 43
124 get_to[truck_1,city_loc_8] -> m_drive_to_ordering_0 42
125 unload[truck_1,city_loc_0,package_1] -> m_unload_ordering_0 45
126 deliver[package_7,city_loc_2] -> m_deliver_ordering_0 127 131 133
127 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 128 130
128 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 129 47
129 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 46
130 load[truck_0,city_loc_3,package_7] -> m_load_ordering_0 48
131 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 132 50
132 get_to[truck_0,city_loc_9] -> m_drive_to_ordering_0 49
133 unload[truck_0,city_loc_2,package_7] -> m_unload_ordering_0 51
134 deliver[package_0,city_loc_5] -> m_deliver_ordering_0 135 138 141
135 m_deliver_ordering_0_splitted_1[truck_1,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 136 137
136 get_to[truck_1,city_loc_7] -> m_drive_to_ordering_0 52
137 load[truck_1,city_loc_7,package_0] -> m_load_ordering_0 53
138 get_to[truck_1,city_loc_5] -> m_drive_to_via_ordering_0 139 56
139 get_to[truck_1,city_loc_2] -> m_drive_to_via_ordering_0 140 55
140 get_to[truck_1,city_loc_9] -> m_drive_to_ordering_0 54
141 unload[truck_1,city_loc_5,package_0] -> m_unload_ordering_0 57
142 deliver[package_3,city_loc_9] -> m_deliver_ordering_0 143 147 150
143 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 144 146
144 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 145 59
145 get_to[truck_0,city_loc_9] -> m_drive_to_ordering_0 58
146 load[truck_0,city_loc_3,package_3] -> m_load_ordering_0 60
147 get_to[truck_0,city_loc_9] -> m_drive_to_via_ordering_0 148 63
148 get_to[truck_0,city_loc_7] -> m_drive_to_via_ordering_0 149 62
149 get_to[truck_0,city_loc_9] -> m_drive_to_ordering_0 61
150 unload[truck_0,city_loc_9,package_3] -> m_unload_ordering_0 64
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.101562 MEMPEAK_KBS 924

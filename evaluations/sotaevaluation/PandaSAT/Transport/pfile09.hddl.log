pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/219/219.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/219/219.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.364ms
Contains 0.046ms
Restrict 0.064ms
MPrep 0.053ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [71] grounded tasks and [40] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [110] grounded tasks and [98] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 110 tasks, 98 methods.
Grounded PG:
Input was [71, 110], output was [71, 40].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 28 S 0 SC 0 SM 0 NSM 0 I 0 P 71 S 0 A 32 M 91
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/219/219.sas.
- State has 28 bits divided into 28 mutex groups.
- Domain contains 71 actions.
- Domain contains 103 tasks.
- Domain contains 91 methods.
- The initial state contains 9 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 101
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.005ms.

Computing invariants [Rintanen]
Initial candidates build (1134)
Round 1: 1134 invariants remaining
Round 2: 566 invariants remaining
Round 3: 177 invariants remaining
Round 4: 37 invariants remaining
Round 5: 30 invariants remaining
Found 30 invariants in 0.339ms
Calculate SCCs...
- Number of SCCs: 101
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.136 ms
Computed PDT. Extracting leafs ... 21 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 22 of 22
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.146 ms
Computed PDT. Extracting leafs ... 35 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 102 of 102
Leaf Primitive Pruning: 40 of 40
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.272 ms
Computed PDT. Extracting leafs ... 49 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 33 of 155
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 122
Pruning: 99 of 253
Leaf Primitive Pruning: 49 of 155
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 372 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 21 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.137ms SM: 0 M: 0 I: 0 SI: 30
[34mFormula: [m876 decomposition 1604 state 630 mutex
Formula has 988 vars and 3110 clauses.
Formula time: 1.870ms
Starting solver
Solver time: 0.033ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.246 ms
Computed PDT. Extracting leafs ... 63 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 32 of 253
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 221
Pruning: 125 of 391
Leaf Primitive Pruning: 65 of 253
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 383 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 36 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.266ms SM: 0 M: 0 I: 0 SI: 30
[34mFormula: [m1841 decomposition 2622 state 1080 mutex
Formula has 2407 vars and 8653 clauses.
Formula time: 3.025ms
Starting solver
Solver time: 0.303ms
Solver state: [32mSAT[m
==>
0 noop[truck_0,city_loc_4]
1 pick_up[truck_0,city_loc_4,package_0,capacity_2,capacity_3]
2 drive[truck_0,city_loc_4,city_loc_1]
3 drop[truck_0,city_loc_1,package_0,capacity_2,capacity_3]
4 drive[truck_0,city_loc_1,city_loc_4]
5 drive[truck_0,city_loc_4,city_loc_1]
6 pick_up[truck_0,city_loc_1,package_4,capacity_2,capacity_3]
7 drive[truck_0,city_loc_1,city_loc_4]
8 drive[truck_0,city_loc_4,city_loc_2]
9 drop[truck_0,city_loc_2,package_4,capacity_2,capacity_3]
10 drive[truck_0,city_loc_2,city_loc_4]
11 drive[truck_0,city_loc_4,city_loc_2]
12 pick_up[truck_0,city_loc_2,package_3,capacity_2,capacity_3]
13 drive[truck_0,city_loc_2,city_loc_4]
14 drive[truck_0,city_loc_4,city_loc_1]
15 drop[truck_0,city_loc_1,package_3,capacity_2,capacity_3]
16 drive[truck_0,city_loc_1,city_loc_4]
17 drive[truck_0,city_loc_4,city_loc_1]
18 pick_up[truck_0,city_loc_1,package_2,capacity_2,capacity_3]
19 drive[truck_0,city_loc_1,city_loc_4]
20 drive[truck_0,city_loc_4,city_loc_1]
21 drive[truck_0,city_loc_1,city_loc_4]
22 drop[truck_0,city_loc_4,package_2,capacity_2,capacity_3]
23 noop[truck_0,city_loc_4]
24 pick_up[truck_0,city_loc_4,package_5,capacity_2,capacity_3]
25 drive[truck_0,city_loc_4,city_loc_1]
26 drop[truck_0,city_loc_1,package_5,capacity_2,capacity_3]
27 drive[truck_0,city_loc_1,city_loc_4]
28 pick_up[truck_0,city_loc_4,package_1,capacity_2,capacity_3]
29 drive[truck_0,city_loc_4,city_loc_2]
30 drop[truck_0,city_loc_2,package_1,capacity_2,capacity_3]
31 drive[truck_0,city_loc_2,city_loc_4]
32 drive[truck_0,city_loc_4,city_loc_1]
33 pick_up[truck_0,city_loc_1,package_6,capacity_2,capacity_3]
34 drive[truck_0,city_loc_1,city_loc_4]
35 drive[truck_0,city_loc_4,city_loc_1]
36 drive[truck_0,city_loc_1,city_loc_4]
37 drop[truck_0,city_loc_4,package_6,capacity_2,capacity_3]
root 38
38 __top[] -> <<<<<<<__top_method;deliver[package_6,city_loc_4];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3>;deliver[package_5,city_loc_1];m_deliver_ordering_0;4;0,1,2,3,-1,-2,-3,5,6,7,8>;deliver[package_4,city_loc_2];m_deliver_ordering_0;1;0,-1,-2,-3,2,3,4,5,6,7,8,9,10>;deliver[package_3,city_loc_1];m_deliver_ordering_0;4;0,1,2,3,-1,-2,-3,5,6,7,8,9,10,11,12>;deliver[package_2,city_loc_4];m_deliver_ordering_0;7;0,1,2,3,4,5,6,-1,-2,-3,8,9,10,11,12,13,14>;deliver[package_1,city_loc_2];m_deliver_ordering_0;13;0,1,2,3,4,5,6,7,8,9,10,11,12,-1,-2,-3,14,15,16>;deliver[package_0,city_loc_1];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18> 39 42 43 44 48 50 51 55 57 58 62 65 66 69 70 71 74 75 76 80 83
39 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 40 41
40 get_to[truck_0,city_loc_4] -> m_i_am_there_ordering_0 0
41 load[truck_0,city_loc_4,package_0] -> m_load_ordering_0 1
42 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 2
43 unload[truck_0,city_loc_1,package_0] -> m_unload_ordering_0 3
44 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 45 47
45 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 46 5
46 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 4
47 load[truck_0,city_loc_1,package_4] -> m_load_ordering_0 6
48 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 49 8
49 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 7
50 unload[truck_0,city_loc_2,package_4] -> m_unload_ordering_0 9
51 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 52 54
52 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 53 11
53 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 10
54 load[truck_0,city_loc_2,package_3] -> m_load_ordering_0 12
55 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 56 14
56 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 13
57 unload[truck_0,city_loc_1,package_3] -> m_unload_ordering_0 15
58 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 59 61
59 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 60 17
60 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 16
61 load[truck_0,city_loc_1,package_2] -> m_load_ordering_0 18
62 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 63 21
63 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 64 20
64 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 19
65 unload[truck_0,city_loc_4,package_2] -> m_unload_ordering_0 22
66 m_deliver_ordering_0_splitted_1[truck_0,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 67 68
67 get_to[truck_0,city_loc_4] -> m_i_am_there_ordering_0 23
68 load[truck_0,city_loc_4,package_5] -> m_load_ordering_0 24
69 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 25
70 unload[truck_0,city_loc_1,package_5] -> m_unload_ordering_0 26
71 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 72 73
72 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 27
73 load[truck_0,city_loc_4,package_1] -> m_load_ordering_0 28
74 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 29
75 unload[truck_0,city_loc_2,package_1] -> m_unload_ordering_0 30
76 m_deliver_ordering_0_splitted_1[truck_0,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 77 79
77 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 78 32
78 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 31
79 load[truck_0,city_loc_1,package_6] -> m_load_ordering_0 33
80 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 81 36
81 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 82 35
82 get_to[truck_0,city_loc_4] -> m_drive_to_ordering_0 34
83 unload[truck_0,city_loc_4,package_6] -> m_unload_ordering_0 37
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.043457 MEMPEAK_KBS 924

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/233/233.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/233/233.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.265ms
Contains 0.031ms
Restrict 0.041ms
MPrep 0.035ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [45] grounded tasks and [35] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [76] grounded tasks and [71] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 76 tasks, 71 methods.
Grounded PG:
Input was [45, 76], output was [45, 35].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 23 S 0 SC 0 SM 0 NSM 0 I 0 P 45 S 0 A 26 M 66
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/233/233.sas.
- State has 23 bits divided into 23 mutex groups.
- Domain contains 45 actions.
- Domain contains 71 tasks.
- Domain contains 66 methods.
- The initial state contains 7 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 67
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.004ms.

Computing invariants [Rintanen]
Initial candidates build (759)
Round 1: 759 invariants remaining
Round 2: 332 invariants remaining
Round 3: 189 invariants remaining
Round 4: 48 invariants remaining
Round 5: 28 invariants remaining
Found 28 invariants in 0.239ms
Calculate SCCs...
- Number of SCCs: 67
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.083 ms
Computed PDT. Extracting leafs ... 15 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 16 of 16
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.109 ms
Computed PDT. Extracting leafs ... 25 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 65 of 65
Leaf Primitive Pruning: 22 of 22
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.184 ms
Computed PDT. Extracting leafs ... 35 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 42 of 96
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 54
Pruning: 171 of 171
Leaf Primitive Pruning: 96 of 96
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.258 ms
Computed PDT. Extracting leafs ... 45 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 32 of 203
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 171
Pruning: 112 of 324
Leaf Primitive Pruning: 51 of 203
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 492 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 25 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.139ms SM: 0 M: 0 I: 0 SI: 28
[34mFormula: [m1703 decomposition 1597 state 700 mutex
Formula has 1090 vars and 4000 clauses.
Formula time: 2.048ms
Starting solver
Solver time: 0.035ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 5[m
Computing PDT took: 0.313 ms
Computed PDT. Extracting leafs ... 55 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 35 of 345
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 310
Pruning: 128 of 516
Leaf Primitive Pruning: 59 of 345
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 591 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 36 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.279ms SM: 0 M: 0 I: 0 SI: 28
[34mFormula: [m4378 decomposition 2406 state 1008 mutex
Formula has 2532 vars and 11792 clauses.
Formula time: 3.423ms
Starting solver
Solver time: 0.361ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_4,city_loc_2]
1 pick_up[truck_0,city_loc_2,package_2,capacity_1,capacity_2]
2 noop[truck_0,city_loc_2]
3 drive[truck_0,city_loc_2,city_loc_4]
4 drive[truck_0,city_loc_4,city_loc_2]
5 drive[truck_0,city_loc_2,city_loc_4]
6 drop[truck_0,city_loc_4,package_2,capacity_1,capacity_2]
7 drive[truck_0,city_loc_4,city_loc_2]
8 drive[truck_0,city_loc_2,city_loc_1]
9 drive[truck_0,city_loc_1,city_loc_3]
10 pick_up[truck_0,city_loc_3,package_1,capacity_1,capacity_2]
11 drive[truck_0,city_loc_3,city_loc_1]
12 drive[truck_0,city_loc_1,city_loc_1]
13 drive[truck_0,city_loc_1,city_loc_2]
14 drive[truck_0,city_loc_2,city_loc_4]
15 drop[truck_0,city_loc_4,package_1,capacity_1,capacity_2]
16 drive[truck_0,city_loc_4,city_loc_2]
17 drive[truck_0,city_loc_2,city_loc_1]
18 drive[truck_0,city_loc_1,city_loc_3]
19 pick_up[truck_0,city_loc_3,package_0,capacity_1,capacity_2]
20 drive[truck_0,city_loc_3,city_loc_1]
21 drive[truck_0,city_loc_1,city_loc_2]
22 drive[truck_0,city_loc_2,city_loc_1]
23 drive[truck_0,city_loc_1,city_loc_0]
24 drop[truck_0,city_loc_0,package_0,capacity_1,capacity_2]
25 drive[truck_0,city_loc_0,city_loc_1]
26 drive[truck_0,city_loc_1,city_loc_2]
27 drive[truck_0,city_loc_2,city_loc_1]
28 pick_up[truck_0,city_loc_1,package_4,capacity_1,capacity_2]
29 drive[truck_0,city_loc_1,city_loc_2]
30 drive[truck_0,city_loc_2,city_loc_4]
31 drive[truck_0,city_loc_4,city_loc_2]
32 drop[truck_0,city_loc_2,package_4,capacity_1,capacity_2]
33 drive[truck_0,city_loc_2,city_loc_1]
34 drive[truck_0,city_loc_1,city_loc_3]
35 pick_up[truck_0,city_loc_3,package_3,capacity_1,capacity_2]
36 drive[truck_0,city_loc_3,city_loc_1]
37 drive[truck_0,city_loc_1,city_loc_2]
38 drive[truck_0,city_loc_2,city_loc_4]
39 drive[truck_0,city_loc_4,city_loc_2]
40 drop[truck_0,city_loc_2,package_3,capacity_1,capacity_2]
root 41
41 __top[] -> <<<<<__top_method;deliver[package_4,city_loc_2];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4>;deliver[package_3,city_loc_2];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3>;deliver[package_2,city_loc_4];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8>;deliver[package_1,city_loc_4];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5,6,7,8,9,10>;deliver[package_0,city_loc_0];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3,7,8,9,10,11,12> 42 45 49 50 55 59 60 65 69 70 75 78 79 83 87
42 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 43 44
43 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 0
44 load[truck_0,city_loc_2,package_2] -> m_load_ordering_0 1
45 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 46 5
46 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 47 4
47 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 48 3
48 get_to[truck_0,city_loc_2] -> m_i_am_there_ordering_0 2
49 unload[truck_0,city_loc_4,package_2] -> m_unload_ordering_0 6
50 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 51 54
51 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 52 9
52 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 53 8
53 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 7
54 load[truck_0,city_loc_3,package_1] -> m_load_ordering_0 10
55 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 56 14
56 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 57 13
57 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 58 12
58 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 11
59 unload[truck_0,city_loc_4,package_1] -> m_unload_ordering_0 15
60 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 61 64
61 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 62 18
62 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 63 17
63 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 16
64 load[truck_0,city_loc_3,package_0] -> m_load_ordering_0 19
65 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 66 23
66 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 67 22
67 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 68 21
68 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 20
69 unload[truck_0,city_loc_0,package_0] -> m_unload_ordering_0 24
70 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 71 74
71 get_to[truck_0,city_loc_1] -> m_drive_to_via_ordering_0 72 27
72 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 73 26
73 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 25
74 load[truck_0,city_loc_1,package_4] -> m_load_ordering_0 28
75 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 76 31
76 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 77 30
77 get_to[truck_0,city_loc_2] -> m_drive_to_ordering_0 29
78 unload[truck_0,city_loc_2,package_4] -> m_unload_ordering_0 32
79 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 80 82
80 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 81 34
81 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 33
82 load[truck_0,city_loc_3,package_3] -> m_load_ordering_0 35
83 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 84 39
84 get_to[truck_0,city_loc_4] -> m_drive_to_via_ordering_0 85 38
85 get_to[truck_0,city_loc_2] -> m_drive_to_via_ordering_0 86 37
86 get_to[truck_0,city_loc_1] -> m_drive_to_ordering_0 36
87 unload[truck_0,city_loc_2,package_3] -> m_unload_ordering_0 40
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.0556641 MEMPEAK_KBS 924

pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/212/212.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/212/212.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 0.404ms
Contains 0.054ms
Restrict 0.07ms
MPrep 0.051ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [80] grounded tasks and [46] reachable facts.
Running TDG.
Process actions without preconditions
Done.
Returning from runGpg().
TDG done.
Calculated [124] grounded tasks and [110] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 124 tasks, 110 methods.
Grounded PG:
Input was [80, 124], output was [80, 46].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
0 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 31 S 0 SC 0 SM 0 NSM 0 I 0 P 80 S 0 A 36 M 102
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/212/212.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 80 actions.
- Domain contains 116 tasks.
- Domain contains 102 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 114
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.005ms.

Computing invariants [Rintanen]
Initial candidates build (1395)
Round 1: 1395 invariants remaining
Round 2: 625 invariants remaining
Round 3: 149 invariants remaining
Round 4: 33 invariants remaining
Found 33 invariants in 0.387ms
Calculate SCCs...
- Number of SCCs: 114
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.169 ms
Computed PDT. Extracting leafs ... 24 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 25 of 25
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.171 ms
Computed PDT. Extracting leafs ... 40 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 121 of 121
Leaf Primitive Pruning: 48 of 48
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 0.315 ms
Computed PDT. Extracting leafs ... 56 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 32 of 190
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 158
Pruning: 117 of 309
Leaf Primitive Pruning: 55 of 190
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 457 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 25 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.114ms SM: 0 M: 0 I: 0 SI: 33
[34mFormula: [m1173 decomposition 2078 state 825 mutex
Formula has 1263 vars and 4076 clauses.
Formula time: 2.215ms
Starting solver
Solver time: 0.031ms
Solver state: [31mUNSAT[m


[33mGenerating formula for depth 4[m
Computing PDT took: 0.290 ms
Computed PDT. Extracting leafs ... 72 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 34 of 314
[34mPruning round [m2 Phase: 1
FF Pruning: removed 0 of 280
Pruning: 145 of 481
Leaf Primitive Pruning: 73 of 314
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 488 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 41 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 0.331ms SM: 0 M: 0 I: 0 SI: 33
[34mFormula: [m2561 decomposition 3296 state 1353 mutex
Formula has 3053 vars and 11286 clauses.
Formula time: 3.662ms
Starting solver
Solver time: 0.480ms
Solver state: [32mSAT[m
==>
0 drive[truck_0,city_loc_6,city_loc_6]
1 drive[truck_0,city_loc_6,city_loc_0]
2 pick_up[truck_0,city_loc_0,package_3,capacity_2,capacity_3]
3 drive[truck_0,city_loc_0,city_loc_6]
4 drive[truck_0,city_loc_6,city_loc_6]
5 drive[truck_0,city_loc_6,city_loc_3]
6 drop[truck_0,city_loc_3,package_3,capacity_2,capacity_3]
7 drive[truck_0,city_loc_3,city_loc_6]
8 drive[truck_0,city_loc_6,city_loc_6]
9 pick_up[truck_0,city_loc_6,package_0,capacity_2,capacity_3]
10 drive[truck_0,city_loc_6,city_loc_3]
11 drop[truck_0,city_loc_3,package_0,capacity_2,capacity_3]
12 drive[truck_0,city_loc_3,city_loc_6]
13 drive[truck_0,city_loc_6,city_loc_6]
14 pick_up[truck_0,city_loc_6,package_5,capacity_2,capacity_3]
15 drive[truck_0,city_loc_6,city_loc_0]
16 drop[truck_0,city_loc_0,package_5,capacity_2,capacity_3]
17 drive[truck_0,city_loc_0,city_loc_6]
18 drive[truck_0,city_loc_6,city_loc_3]
19 pick_up[truck_0,city_loc_3,package_1,capacity_2,capacity_3]
20 drive[truck_0,city_loc_3,city_loc_6]
21 drive[truck_0,city_loc_6,city_loc_6]
22 drive[truck_0,city_loc_6,city_loc_6]
23 drop[truck_0,city_loc_6,package_1,capacity_2,capacity_3]
24 drive[truck_0,city_loc_6,city_loc_3]
25 pick_up[truck_0,city_loc_3,package_4,capacity_2,capacity_3]
26 drive[truck_0,city_loc_3,city_loc_6]
27 drive[truck_0,city_loc_6,city_loc_6]
28 drive[truck_0,city_loc_6,city_loc_6]
29 drop[truck_0,city_loc_6,package_4,capacity_2,capacity_3]
30 drive[truck_0,city_loc_6,city_loc_6]
31 pick_up[truck_0,city_loc_6,package_6,capacity_2,capacity_3]
32 drive[truck_0,city_loc_6,city_loc_3]
33 drop[truck_0,city_loc_3,package_6,capacity_2,capacity_3]
34 drive[truck_0,city_loc_3,city_loc_6]
35 drive[truck_0,city_loc_6,city_loc_0]
36 pick_up[truck_0,city_loc_0,package_2,capacity_2,capacity_3]
37 drive[truck_0,city_loc_0,city_loc_6]
38 drive[truck_0,city_loc_6,city_loc_3]
39 drive[truck_0,city_loc_3,city_loc_6]
40 drop[truck_0,city_loc_6,package_2,capacity_2,capacity_3]
41 drive[truck_0,city_loc_6,city_loc_0]
42 pick_up[truck_0,city_loc_0,package_7,capacity_2,capacity_3]
43 drive[truck_0,city_loc_0,city_loc_6]
44 drive[truck_0,city_loc_6,city_loc_3]
45 drive[truck_0,city_loc_3,city_loc_6]
46 drop[truck_0,city_loc_6,package_7,capacity_2,capacity_3]
root 47
47 __top[] -> <<<<<<<<__top_method;deliver[package_7,city_loc_6];m_deliver_ordering_0;7;0,1,2,3,4,5,6,-1,-2,-3>;deliver[package_6,city_loc_3];m_deliver_ordering_0;5;0,1,2,3,4,-1,-2,-3,6,7,8,9>;deliver[package_5,city_loc_0];m_deliver_ordering_0;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11>;deliver[package_4,city_loc_6];m_deliver_ordering_0;6;0,1,2,3,4,5,-1,-2,-3,7,8,9,10,11,12,13>;deliver[package_3,city_loc_3];m_deliver_ordering_0;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15>;deliver[package_2,city_loc_6];m_deliver_ordering_0;14;0,1,2,3,4,5,6,7,8,9,10,11,12,13,-1,-2,-3,15,16,17>;deliver[package_1,city_loc_6];m_deliver_ordering_0;7;0,1,2,3,4,5,6,-1,-2,-3,8,9,10,11,12,13,14,15,16,17,18,19>;deliver[package_0,city_loc_3];m_deliver_ordering_0;3;0,1,2,-1,-2,-3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21> 48 52 55 56 60 61 62 66 67 68 72 75 76 79 82 83 86 87 88 92 95 96 99 102
48 m_deliver_ordering_0_splitted_1[truck_0,package_3] -> _splitting_method_m_deliver_ordering_0_splitted_1 49 51
49 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 50 1
50 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 0
51 load[truck_0,city_loc_0,package_3] -> m_load_ordering_0 2
52 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 53 5
53 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 54 4
54 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 3
55 unload[truck_0,city_loc_3,package_3] -> m_unload_ordering_0 6
56 m_deliver_ordering_0_splitted_1[truck_0,package_0] -> _splitting_method_m_deliver_ordering_0_splitted_1 57 59
57 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 58 8
58 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 7
59 load[truck_0,city_loc_6,package_0] -> m_load_ordering_0 9
60 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 10
61 unload[truck_0,city_loc_3,package_0] -> m_unload_ordering_0 11
62 m_deliver_ordering_0_splitted_1[truck_0,package_5] -> _splitting_method_m_deliver_ordering_0_splitted_1 63 65
63 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 64 13
64 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 12
65 load[truck_0,city_loc_6,package_5] -> m_load_ordering_0 14
66 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 15
67 unload[truck_0,city_loc_0,package_5] -> m_unload_ordering_0 16
68 m_deliver_ordering_0_splitted_1[truck_0,package_1] -> _splitting_method_m_deliver_ordering_0_splitted_1 69 71
69 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 70 18
70 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 17
71 load[truck_0,city_loc_3,package_1] -> m_load_ordering_0 19
72 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 73 22
73 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 74 21
74 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 20
75 unload[truck_0,city_loc_6,package_1] -> m_unload_ordering_0 23
76 m_deliver_ordering_0_splitted_1[truck_0,package_4] -> _splitting_method_m_deliver_ordering_0_splitted_1 77 78
77 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 24
78 load[truck_0,city_loc_3,package_4] -> m_load_ordering_0 25
79 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 80 28
80 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 81 27
81 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 26
82 unload[truck_0,city_loc_6,package_4] -> m_unload_ordering_0 29
83 m_deliver_ordering_0_splitted_1[truck_0,package_6] -> _splitting_method_m_deliver_ordering_0_splitted_1 84 85
84 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 30
85 load[truck_0,city_loc_6,package_6] -> m_load_ordering_0 31
86 get_to[truck_0,city_loc_3] -> m_drive_to_ordering_0 32
87 unload[truck_0,city_loc_3,package_6] -> m_unload_ordering_0 33
88 m_deliver_ordering_0_splitted_1[truck_0,package_2] -> _splitting_method_m_deliver_ordering_0_splitted_1 89 91
89 get_to[truck_0,city_loc_0] -> m_drive_to_via_ordering_0 90 35
90 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 34
91 load[truck_0,city_loc_0,package_2] -> m_load_ordering_0 36
92 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 93 39
93 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 94 38
94 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 37
95 unload[truck_0,city_loc_6,package_2] -> m_unload_ordering_0 40
96 m_deliver_ordering_0_splitted_1[truck_0,package_7] -> _splitting_method_m_deliver_ordering_0_splitted_1 97 98
97 get_to[truck_0,city_loc_0] -> m_drive_to_ordering_0 41
98 load[truck_0,city_loc_0,package_7] -> m_load_ordering_0 42
99 get_to[truck_0,city_loc_6] -> m_drive_to_via_ordering_0 100 45
100 get_to[truck_0,city_loc_3] -> m_drive_to_via_ordering_0 101 44
101 get_to[truck_0,city_loc_6] -> m_drive_to_ordering_0 43
102 unload[truck_0,city_loc_6,package_7] -> m_unload_ordering_0 46
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.227539 MEMPEAK_KBS 928

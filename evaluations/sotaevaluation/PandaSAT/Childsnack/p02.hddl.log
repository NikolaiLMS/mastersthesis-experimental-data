pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/375/375.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/375/375.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.089ms
Contains 0.146ms
Restrict 0.139ms
MPrep 0.14ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [2160] grounded tasks and [160] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
Returning from runGpg().
TDG done.
Calculated [2717] grounded tasks and [1587] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 1872 tasks, 1587 methods.
Grounded PG:
Input was [1315, 1872], output was [1315, 160].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
117 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 120 S 0 SC 0 SM 0 NSM 0 I 0 P 1123 S 13 A 167 M 1197
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/375/375.sas.
- State has 120 bits divided into 120 mutex groups.
- Domain contains 1136 actions.
- Domain contains 1303 tasks.
- Domain contains 1197 methods.
- The initial state contains 36 set bits.
- The initial task is "__top[]".
- State-based goal contains 10 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 1303
- The problem is acyclic

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.005ms.

Computing invariants [Rintanen]
Initial candidates build (21420)
Round 1: 21420 invariants remaining
Round 2: 10556 invariants remaining
Round 3: 1380 invariants remaining
Round 4: 161 invariants remaining
Found 161 invariants in 5.852ms
Calculate SCCs...
- Number of SCCs: 1303
- The problem is acyclic
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.065 ms
Computed PDT. Extracting leafs ... 10 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 11 of 11
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.395 ms
Computed PDT. Extracting leafs ... 30 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 401 of 401
Leaf Primitive Pruning: 130 of 130
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 5.73 ms
Computed PDT. Extracting leafs ... 60 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 4610
Pruning: 0 of 4881
Leaf Primitive Pruning: 0 of 4610
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 9133 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 21 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 1.21ms SM: 0 M: 0 I: 0 SI: 161
[34mFormula: [m136407 decomposition 35069 state 3381 mutex
Formula has 11827 vars and 174857 clauses.
Formula time: 47.125ms
Starting solver
Solver time: 4.355ms
Solver state: [32mSAT[m
==>
0 __method_precondition_m1_serve_base_base[child10,sandw7]
1 make_sandwich[sandw7,bread5,content4]
2 put_on_tray[sandw7,tray3]
3 move_tray[tray3,kitchen,table1]
4 serve_sandwich[sandw7,child1,tray3,table1]
5 move_tray[tray3,table1,kitchen]
6 __method_precondition_m1_serve_base_base[child10,sandw4]
7 make_sandwich_no_gluten[sandw4,bread8,content8]
8 put_on_tray[sandw4,tray1]
9 move_tray[tray1,kitchen,table1]
10 serve_sandwich_no_gluten[sandw4,child2,tray1,table1]
11 move_tray[tray1,table1,kitchen]
12 __method_precondition_m1_serve_base_base[child10,sandw3]
13 make_sandwich_no_gluten[sandw3,bread7,content2]
14 put_on_tray[sandw3,tray2]
15 move_tray[tray2,kitchen,table1]
16 serve_sandwich_no_gluten[sandw3,child3,tray2,table1]
17 move_tray[tray2,table1,kitchen]
18 __method_precondition_m1_serve_base_base[child10,sandw13]
19 make_sandwich[sandw13,bread9,content7]
20 put_on_tray[sandw13,tray1]
21 move_tray[tray1,kitchen,table3]
22 serve_sandwich[sandw13,child4,tray1,table3]
23 move_tray[tray1,table3,kitchen]
24 __method_precondition_m1_serve_base_base[child10,sandw5]
25 make_sandwich[sandw5,bread4,content3]
26 put_on_tray[sandw5,tray1]
27 move_tray[tray1,kitchen,table2]
28 serve_sandwich[sandw5,child5,tray1,table2]
29 move_tray[tray1,table2,kitchen]
30 __method_precondition_m1_serve_base_base[child10,sandw8]
31 make_sandwich[sandw8,bread10,content10]
32 put_on_tray[sandw8,tray1]
33 move_tray[tray1,kitchen,table2]
34 serve_sandwich[sandw8,child6,tray1,table2]
35 move_tray[tray1,table2,kitchen]
36 __method_precondition_m1_serve_base_base[child10,sandw2]
37 make_sandwich_no_gluten[sandw2,bread6,content5]
38 put_on_tray[sandw2,tray1]
39 move_tray[tray1,kitchen,table1]
40 serve_sandwich_no_gluten[sandw2,child7,tray1,table1]
41 move_tray[tray1,table1,kitchen]
42 __method_precondition_m1_serve_base_base[child10,sandw9]
43 make_sandwich[sandw9,bread3,content9]
44 put_on_tray[sandw9,tray3]
45 move_tray[tray3,kitchen,table2]
46 serve_sandwich[sandw9,child8,tray3,table2]
47 move_tray[tray3,table2,kitchen]
48 __method_precondition_m1_serve_base_base[child10,sandw1]
49 make_sandwich_no_gluten[sandw1,bread2,content6]
50 put_on_tray[sandw1,tray1]
51 move_tray[tray1,kitchen,table2]
52 serve_sandwich_no_gluten[sandw1,child9,tray1,table2]
53 move_tray[tray1,table2,kitchen]
54 __method_precondition_m1_serve_base_base[child10,sandw6]
55 make_sandwich[sandw6,bread1,content1]
56 put_on_tray[sandw6,tray2]
57 move_tray[tray2,kitchen,table1]
58 serve_sandwich[sandw6,child10,tray2,table1]
59 move_tray[tray2,table1,kitchen]
root 60
60 __top[] -> __top_method 61 64 67 70 73 76 79 82 85 88
61 serve[child1] -> m1_serve 0 62 63
62 m1_serve_splitted_2[sandw7] -> _splitting_method_m1_serve_splitted_2 1
63 m1_serve_splitted_6[sandw7,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw7,child1,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 2 3 4 5
64 serve[child2] -> m0_serve 6 65 66
65 m0_serve_splitted_1[sandw4] -> _splitting_method_m0_serve_splitted_1 7
66 m0_serve_splitted_5[sandw4,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw4,child2,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 8 9 10 11
67 serve[child3] -> m0_serve 12 68 69
68 m0_serve_splitted_1[sandw3] -> _splitting_method_m0_serve_splitted_1 13
69 m0_serve_splitted_5[sandw3,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw3,child3,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 14 15 16 17
70 serve[child4] -> m1_serve 18 71 72
71 m1_serve_splitted_2[sandw13] -> _splitting_method_m1_serve_splitted_2 19
72 m1_serve_splitted_6[sandw13,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw13,child4,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 20 21 22 23
73 serve[child5] -> m1_serve 24 74 75
74 m1_serve_splitted_2[sandw5] -> _splitting_method_m1_serve_splitted_2 25
75 m1_serve_splitted_6[sandw5,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw5,child5,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 26 27 28 29
76 serve[child6] -> m1_serve 30 77 78
77 m1_serve_splitted_2[sandw8] -> _splitting_method_m1_serve_splitted_2 31
78 m1_serve_splitted_6[sandw8,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw8,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 32 33 34 35
79 serve[child7] -> m0_serve 36 80 81
80 m0_serve_splitted_1[sandw2] -> _splitting_method_m0_serve_splitted_1 37
81 m0_serve_splitted_5[sandw2,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw2,child7,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 38 39 40 41
82 serve[child8] -> m1_serve 42 83 84
83 m1_serve_splitted_2[sandw9] -> _splitting_method_m1_serve_splitted_2 43
84 m1_serve_splitted_6[sandw9,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw9,child8,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 44 45 46 47
85 serve[child9] -> m0_serve 48 86 87
86 m0_serve_splitted_1[sandw1] -> _splitting_method_m0_serve_splitted_1 49
87 m0_serve_splitted_5[sandw1,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw1,child9,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 50 51 52 53
88 serve[child10] -> m1_serve 54 89 90
89 m1_serve_splitted_2[sandw6] -> _splitting_method_m1_serve_splitted_2 55
90 m1_serve_splitted_6[sandw6,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw6,child10,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 56 57 58 59
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 1.08289 MEMPEAK_KBS 3748

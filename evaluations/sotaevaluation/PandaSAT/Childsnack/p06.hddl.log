pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/358/358.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/358/358.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.467ms
Contains 0.213ms
Restrict 0.195ms
MPrep 0.18ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
 ---> Disabling potentially consistent extension checking for action:           15 (__method_precondition_m1_serve_base_base)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [4369] grounded tasks and [205] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
 ---> Disabling potentially consistent extension checking for action:           8 (m1_serve)
Returning from runGpg().
TDG done.
Calculated [5301] grounded tasks and [3061] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 3500 tasks, 3061 methods.
Grounded PG:
Input was [2568, 3500], output was [2568, 205].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
204 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 153 S 0 SC 0 SM 0 NSM 0 I 0 P 2245 S 17 A 269 M 2398
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/358/358.sas.
- State has 153 bits divided into 153 mutex groups.
- Domain contains 2262 actions.
- Domain contains 2531 tasks.
- Domain contains 2398 methods.
- The initial state contains 46 set bits.
- The initial task is "__top[]".
- State-based goal contains 13 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 2531
- The problem is acyclic

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.006ms.

Computing invariants [Rintanen]
Initial candidates build (34884)
Round 1: 34884 invariants remaining
Round 2: 17526 invariants remaining
Round 3: 2065 invariants remaining
Round 4: 205 invariants remaining
Found 205 invariants in 13.702ms
Calculate SCCs...
- Number of SCCs: 2531
- The problem is acyclic
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.11 ms
Computed PDT. Extracting leafs ... 13 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 14 of 14
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.606 ms
Computed PDT. Extracting leafs ... 39 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 677 of 677
Leaf Primitive Pruning: 221 of 221
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 15.3 ms
Computed PDT. Extracting leafs ... 78 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 12454
Pruning: 0 of 12910
Leaf Primitive Pruning: 0 of 12454
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 24742 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 27 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 2.14ms SM: 0 M: 0 I: 0 SI: 205
[34mFormula: [m176557 decomposition 92371 state 5535 mutex
Formula has 29159 vars and 274463 clauses.
Formula time: 89.239ms
Starting solver
Solver time: 49.892ms
Solver state: [32mSAT[m
==>
0 __method_precondition_m1_serve_base_base[child13,sandw15]
1 make_sandwich_no_gluten[sandw15,bread5,content11]
2 put_on_tray[sandw15,tray2]
3 move_tray[tray2,kitchen,table3]
4 serve_sandwich_no_gluten[sandw15,child1,tray2,table3]
5 move_tray[tray2,table3,kitchen]
6 __method_precondition_m1_serve_base_base[child13,sandw16]
7 make_sandwich_no_gluten[sandw16,bread3,content12]
8 put_on_tray[sandw16,tray3]
9 move_tray[tray3,kitchen,table2]
10 serve_sandwich_no_gluten[sandw16,child2,tray3,table2]
11 move_tray[tray3,table2,kitchen]
12 __method_precondition_m1_serve_base_base[child13,sandw3]
13 make_sandwich_no_gluten[sandw3,bread11,content3]
14 put_on_tray[sandw3,tray3]
15 move_tray[tray3,kitchen,table2]
16 serve_sandwich_no_gluten[sandw3,child3,tray3,table2]
17 move_tray[tray3,table2,kitchen]
18 __method_precondition_m1_serve_base_base[child13,sandw8]
19 make_sandwich[sandw8,bread6,content2]
20 put_on_tray[sandw8,tray1]
21 move_tray[tray1,kitchen,table1]
22 serve_sandwich[sandw8,child4,tray1,table1]
23 move_tray[tray1,table1,kitchen]
24 __method_precondition_m1_serve_base_base[child13,sandw5]
25 make_sandwich[sandw5,bread7,content10]
26 put_on_tray[sandw5,tray3]
27 move_tray[tray3,kitchen,table2]
28 serve_sandwich[sandw5,child5,tray3,table2]
29 move_tray[tray3,table2,kitchen]
30 __method_precondition_m1_serve_base_base[child13,sandw14]
31 make_sandwich[sandw14,bread4,content13]
32 put_on_tray[sandw14,tray3]
33 move_tray[tray3,kitchen,table2]
34 serve_sandwich[sandw14,child6,tray3,table2]
35 move_tray[tray3,table2,kitchen]
36 __method_precondition_m1_serve_base_base[child13,sandw11]
37 make_sandwich[sandw11,bread9,content6]
38 put_on_tray[sandw11,tray1]
39 move_tray[tray1,kitchen,table1]
40 serve_sandwich[sandw11,child7,tray1,table1]
41 move_tray[tray1,table1,kitchen]
42 __method_precondition_m1_serve_base_base[child13,sandw4]
43 make_sandwich[sandw4,bread13,content5]
44 put_on_tray[sandw4,tray3]
45 move_tray[tray3,kitchen,table2]
46 serve_sandwich[sandw4,child8,tray3,table2]
47 move_tray[tray3,table2,kitchen]
48 __method_precondition_m1_serve_base_base[child13,sandw7]
49 make_sandwich[sandw7,bread2,content1]
50 put_on_tray[sandw7,tray1]
51 move_tray[tray1,kitchen,table1]
52 serve_sandwich[sandw7,child9,tray1,table1]
53 move_tray[tray1,table1,kitchen]
54 __method_precondition_m1_serve_base_base[child13,sandw6]
55 make_sandwich[sandw6,bread12,content8]
56 put_on_tray[sandw6,tray1]
57 move_tray[tray1,kitchen,table1]
58 serve_sandwich[sandw6,child10,tray1,table1]
59 move_tray[tray1,table1,kitchen]
60 __method_precondition_m1_serve_base_base[child13,sandw1]
61 make_sandwich_no_gluten[sandw1,bread8,content7]
62 put_on_tray[sandw1,tray3]
63 move_tray[tray3,kitchen,table3]
64 serve_sandwich_no_gluten[sandw1,child11,tray3,table3]
65 move_tray[tray3,table3,kitchen]
66 __method_precondition_m1_serve_base_base[child13,sandw17]
67 make_sandwich_no_gluten[sandw17,bread10,content9]
68 put_on_tray[sandw17,tray1]
69 move_tray[tray1,kitchen,table3]
70 serve_sandwich_no_gluten[sandw17,child12,tray1,table3]
71 move_tray[tray1,table3,kitchen]
72 __method_precondition_m1_serve_base_base[child13,sandw12]
73 make_sandwich[sandw12,bread1,content4]
74 put_on_tray[sandw12,tray1]
75 move_tray[tray1,kitchen,table2]
76 serve_sandwich[sandw12,child13,tray1,table2]
77 move_tray[tray1,table2,kitchen]
root 78
78 __top[] -> __top_method 79 82 85 88 91 94 97 100 103 106 109 112 115
79 serve[child1] -> m0_serve 0 80 81
80 m0_serve_splitted_1[sandw15] -> _splitting_method_m0_serve_splitted_1 1
81 m0_serve_splitted_5[sandw15,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw15,child1,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 2 3 4 5
82 serve[child2] -> m0_serve 6 83 84
83 m0_serve_splitted_1[sandw16] -> _splitting_method_m0_serve_splitted_1 7
84 m0_serve_splitted_5[sandw16,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw16,child2,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 8 9 10 11
85 serve[child3] -> m0_serve 12 86 87
86 m0_serve_splitted_1[sandw3] -> _splitting_method_m0_serve_splitted_1 13
87 m0_serve_splitted_5[sandw3,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw3,child3,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 14 15 16 17
88 serve[child4] -> m1_serve 18 89 90
89 m1_serve_splitted_2[sandw8] -> _splitting_method_m1_serve_splitted_2 19
90 m1_serve_splitted_6[sandw8,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw8,child4,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 20 21 22 23
91 serve[child5] -> m1_serve 24 92 93
92 m1_serve_splitted_2[sandw5] -> _splitting_method_m1_serve_splitted_2 25
93 m1_serve_splitted_6[sandw5,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw5,child5,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 26 27 28 29
94 serve[child6] -> m1_serve 30 95 96
95 m1_serve_splitted_2[sandw14] -> _splitting_method_m1_serve_splitted_2 31
96 m1_serve_splitted_6[sandw14,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw14,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 32 33 34 35
97 serve[child7] -> m1_serve 36 98 99
98 m1_serve_splitted_2[sandw11] -> _splitting_method_m1_serve_splitted_2 37
99 m1_serve_splitted_6[sandw11,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw11,child7,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 38 39 40 41
100 serve[child8] -> m1_serve 42 101 102
101 m1_serve_splitted_2[sandw4] -> _splitting_method_m1_serve_splitted_2 43
102 m1_serve_splitted_6[sandw4,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw4,child8,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 44 45 46 47
103 serve[child9] -> m1_serve 48 104 105
104 m1_serve_splitted_2[sandw7] -> _splitting_method_m1_serve_splitted_2 49
105 m1_serve_splitted_6[sandw7,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw7,child9,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 50 51 52 53
106 serve[child10] -> m1_serve 54 107 108
107 m1_serve_splitted_2[sandw6] -> _splitting_method_m1_serve_splitted_2 55
108 m1_serve_splitted_6[sandw6,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw6,child10,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 56 57 58 59
109 serve[child11] -> m0_serve 60 110 111
110 m0_serve_splitted_1[sandw1] -> _splitting_method_m0_serve_splitted_1 61
111 m0_serve_splitted_5[sandw1,kitchen,kitchen,child11,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw1,child11,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 62 63 64 65
112 serve[child12] -> m0_serve 66 113 114
113 m0_serve_splitted_1[sandw17] -> _splitting_method_m0_serve_splitted_1 67
114 m0_serve_splitted_5[sandw17,kitchen,kitchen,child12,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray1,kitchen,sandw17,child12,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 68 69 70 71
115 serve[child13] -> m1_serve 72 116 117
116 m1_serve_splitted_2[sandw12] -> _splitting_method_m1_serve_splitted_2 73
117 m1_serve_splitted_6[sandw12,kitchen,kitchen,child13,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw12,child13,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 74 75 76 77
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.748047 MEMPEAK_KBS 924

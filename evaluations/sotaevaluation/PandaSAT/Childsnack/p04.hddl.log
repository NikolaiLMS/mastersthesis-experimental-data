pandaPIparser is configured as follows
  Colors in output: true
  Mode: parsing mode
  Parameter splitting: true
  Conditional effects: exponential encoding
  Disjunctive preconditions as HTN: false
  Replace goal with action: false
  Output: pandaPI format
General Options
  Print timings: false
  Quiet mode: false
Inference Options
  H2 mutexes: false
  FAM groups: false
Transformation Options
  Add zero-cost no-op to empty methods: true
  Remove duplicate actions: true
  Remove useless literals: true
  Expand abstract tasks with one method: true
  Remove empty method preconditions: true
  Two regularisation: false
  Compile negative SAS variables: false
Runtime Optimisations
  Hierarchy Typing: true
  Future Caching: false
  Static Precondition Checking: false
Output Options
  Panda planner format: true
  HDDL: false
  SAS for Fast Downward (without hierarchy): false
Output Formatting Options
  Output only SAS+ variables: false
  SAS+ delete mode: as input
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/374/374.parsed.
Writing output to /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/374/374.sas.
Writing output to standard output.
Parsing done.
Conditional Effects expanded
done.
Starting Hierarchy Typing
Total 1.382ms
Contains 0.196ms
Restrict 0.172ms
MPrep 0.171ms
Finished Hierarchy Typing
Running PG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (make_sandwich)
 ---> Disabling potentially consistent extension checking for action:           0 (make_sandwich_no_gluten)
 ---> Disabling potentially consistent extension checking for action:           15 (__method_precondition_m1_serve_base_base)
Returning from runGpg().
PG done. Postprocessing
PG postprocessing done.
Calculated [3501] grounded tasks and [192] reachable facts.
Running TDG.
Process actions without preconditions
Done.
 ---> Disabling potentially consistent extension checking for action:           1 (_splitting_method_m0_serve_splitted_1)
 ---> Disabling potentially consistent extension checking for action:           5 (_splitting_method_m1_serve_splitted_2)
 ---> Disabling potentially consistent extension checking for action:           2 (_splitting_method_m0_serve_splitted_3)
 ---> Disabling potentially consistent extension checking for action:           6 (_splitting_method_m1_serve_splitted_4)
 ---> Disabling potentially consistent extension checking for action:           8 (m1_serve)
Returning from runGpg().
TDG done.
Calculated [4314] grounded tasks and [2625] grounded decomposition methods.
Performing DFS.
DFS done.
After DFS: 3019 tasks, 2625 methods.
Grounded PG:
Input was [2206, 3019], output was [2206, 192].
Simplifying instance.
Removing useless facts/literals
Removing method precondition actions whose precondition is empty
Expanding abstract tasks with only one method
Starting duplicate elimination.
Data structure build.
176 duplicates found.
Duplicates replaced in methods.
Further Mutex Groups: 0 strict 0 non strict
Writing instance to output.
Final Statistics: F 144 S 0 SC 0 SM 0 NSM 0 I 0 P 1922 S 16 A 237 M 2049
Exiting.
Random seed: 42
Time limit: 1800 seconds
Reading input from /home/schnell/lilotane/sotaevaluation//PandaSAT_runwatchtime_timeout1800_2021-11-16_15:47:18/runwatch_log/374/374.sas.
- State has 144 bits divided into 144 mutex groups.
- Domain contains 1938 actions.
- Domain contains 2175 tasks.
- Domain contains 2049 methods.
- The initial state contains 43 set bits.
- The initial task is "__top[]".
- State-based goal contains 12 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 2175
- The problem is acyclic

Extracting invariants from parsed model
Extracted 0 invariants.
Starting resolution.
After resolution we have 0 invariants, taking 0.007ms.

Computing invariants [Rintanen]
Initial candidates build (30888)
Round 1: 30888 invariants remaining
Round 2: 15472 invariants remaining
Round 3: 1662 invariants remaining
Round 4: 194 invariants remaining
Found 194 invariants in 10.513ms
Calculate SCCs...
- Number of SCCs: 2175
- The problem is acyclic
Hallo


Instance is totally ordered: yes
[33mStarting SAT-based planner[m
Using SAT solver: cryptominisat-5.8.0
Encode Mutexes:    yes
Block Compression: yes
Pruning:           ff




[33mGenerating formula for depth 1[m
Computing PDT took: 0.073 ms
Computed PDT. Extracting leafs ... 12 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 13 of 13
Leaf Primitive Pruning: 0 of 0
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 2[m
Computing PDT took: 0.54 ms
Computed PDT. Extracting leafs ... 36 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 0
Pruning: 589 of 589
Leaf Primitive Pruning: 192 of 192
Initial abstract task is pruned: [31mUNSAT[m


[33mGenerating formula for depth 3[m
Computing PDT took: 13.1 ms
Computed PDT. Extracting leafs ... 72 leafs
Clear pruning tables ... done.
[34mPruning round [m1 Phase: 1
FF Pruning: removed 0 of 10632
Pruning: 0 of 11029
Leaf Primitive Pruning: 0 of 10632
Pruning gave 0 new invariants
Assigning variable IDs for PDT ... done. 21123 new variables.
Decomposition Clauses generated.
Pruned clauses.
Block compression leads to 25 timesteps.
Decomp formula generated
State atoms
State formula
Matching
Invar time: 1.93ms SM: 0 M: 0 I: 0 SI: 194
[34mFormula: [m141991 decomposition 78101 state 4850 mutex
Formula has 24979 vars and 224942 clauses.
Formula time: 77.909ms
Starting solver
Solver time: 19.376ms
Solver state: [32mSAT[m
==>
0 __method_precondition_m0_serve_base_base[child12,sandw7]
1 make_sandwich_no_gluten[sandw7,bread3,content2]
2 put_on_tray[sandw7,tray3]
3 move_tray[tray3,kitchen,table2]
4 serve_sandwich_no_gluten[sandw7,child1,tray3,table2]
5 move_tray[tray3,table2,kitchen]
6 __method_precondition_m0_serve_base_base[child12,sandw2]
7 make_sandwich[sandw2,bread7,content11]
8 put_on_tray[sandw2,tray1]
9 move_tray[tray1,kitchen,table1]
10 serve_sandwich[sandw2,child2,tray1,table1]
11 move_tray[tray1,table1,kitchen]
12 __method_precondition_m0_serve_base_base[child12,sandw4]
13 make_sandwich_no_gluten[sandw4,bread4,content9]
14 put_on_tray[sandw4,tray2]
15 move_tray[tray2,kitchen,table1]
16 serve_sandwich_no_gluten[sandw4,child3,tray2,table1]
17 move_tray[tray2,table1,kitchen]
18 __method_precondition_m0_serve_base_base[child12,sandw13]
19 make_sandwich[sandw13,bread12,content8]
20 put_on_tray[sandw13,tray2]
21 move_tray[tray2,kitchen,table2]
22 serve_sandwich[sandw13,child4,tray2,table2]
23 move_tray[tray2,table2,kitchen]
24 __method_precondition_m0_serve_base_base[child12,sandw1]
25 make_sandwich_no_gluten[sandw1,bread11,content12]
26 put_on_tray[sandw1,tray3]
27 move_tray[tray3,kitchen,table3]
28 serve_sandwich_no_gluten[sandw1,child5,tray3,table3]
29 move_tray[tray3,table3,kitchen]
30 __method_precondition_m0_serve_base_base[child12,sandw10]
31 make_sandwich[sandw10,bread8,content4]
32 put_on_tray[sandw10,tray1]
33 move_tray[tray1,kitchen,table3]
34 serve_sandwich[sandw10,child6,tray1,table3]
35 move_tray[tray1,table3,kitchen]
36 __method_precondition_m0_serve_base_base[child12,sandw8]
37 make_sandwich[sandw8,bread10,content1]
38 put_on_tray[sandw8,tray1]
39 move_tray[tray1,kitchen,table3]
40 serve_sandwich[sandw8,child7,tray1,table3]
41 move_tray[tray1,table3,kitchen]
42 __method_precondition_m0_serve_base_base[child12,sandw3]
43 make_sandwich[sandw3,bread1,content10]
44 put_on_tray[sandw3,tray3]
45 move_tray[tray3,kitchen,table2]
46 serve_sandwich[sandw3,child8,tray3,table2]
47 move_tray[tray3,table2,kitchen]
48 __method_precondition_m0_serve_base_base[child12,sandw9]
49 make_sandwich[sandw9,bread6,content3]
50 put_on_tray[sandw9,tray1]
51 move_tray[tray1,kitchen,table1]
52 serve_sandwich[sandw9,child9,tray1,table1]
53 move_tray[tray1,table1,kitchen]
54 __method_precondition_m0_serve_base_base[child12,sandw5]
55 make_sandwich[sandw5,bread2,content6]
56 put_on_tray[sandw5,tray1]
57 move_tray[tray1,kitchen,table3]
58 serve_sandwich[sandw5,child10,tray1,table3]
59 move_tray[tray1,table3,kitchen]
60 __method_precondition_m0_serve_base_base[child12,sandw6]
61 make_sandwich[sandw6,bread9,content7]
62 put_on_tray[sandw6,tray3]
63 move_tray[tray3,kitchen,table1]
64 serve_sandwich[sandw6,child11,tray3,table1]
65 move_tray[tray3,table1,kitchen]
66 __method_precondition_m0_serve_base_base[child12,sandw16]
67 make_sandwich_no_gluten[sandw16,bread5,content5]
68 put_on_tray[sandw16,tray3]
69 move_tray[tray3,kitchen,table1]
70 serve_sandwich_no_gluten[sandw16,child12,tray3,table1]
71 move_tray[tray3,table1,kitchen]
root 72
72 __top[] -> __top_method 73 76 79 82 85 88 91 94 97 100 103 106
73 serve[child1] -> m0_serve 0 74 75
74 m0_serve_splitted_1[sandw7] -> _splitting_method_m0_serve_splitted_1 1
75 m0_serve_splitted_5[sandw7,kitchen,kitchen,child1,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw7,child1,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 2 3 4 5
76 serve[child2] -> m1_serve 6 77 78
77 m1_serve_splitted_2[sandw2] -> _splitting_method_m1_serve_splitted_2 7
78 m1_serve_splitted_6[sandw2,kitchen,kitchen,child2,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw2,child2,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 8 9 10 11
79 serve[child3] -> m0_serve 12 80 81
80 m0_serve_splitted_1[sandw4] -> _splitting_method_m0_serve_splitted_1 13
81 m0_serve_splitted_5[sandw4,kitchen,kitchen,child3,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray2,kitchen,sandw4,child3,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 14 15 16 17
82 serve[child4] -> m1_serve 18 83 84
83 m1_serve_splitted_2[sandw13] -> _splitting_method_m1_serve_splitted_2 19
84 m1_serve_splitted_6[sandw13,kitchen,kitchen,child4,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray2,kitchen,sandw13,child4,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 20 21 22 23
85 serve[child5] -> m0_serve 24 86 87
86 m0_serve_splitted_1[sandw1] -> _splitting_method_m0_serve_splitted_1 25
87 m0_serve_splitted_5[sandw1,kitchen,kitchen,child5,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw1,child5,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 26 27 28 29
88 serve[child6] -> m1_serve 30 89 90
89 m1_serve_splitted_2[sandw10] -> _splitting_method_m1_serve_splitted_2 31
90 m1_serve_splitted_6[sandw10,kitchen,kitchen,child6,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw10,child6,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 32 33 34 35
91 serve[child7] -> m1_serve 36 92 93
92 m1_serve_splitted_2[sandw8] -> _splitting_method_m1_serve_splitted_2 37
93 m1_serve_splitted_6[sandw8,kitchen,kitchen,child7,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw8,child7,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 38 39 40 41
94 serve[child8] -> m1_serve 42 95 96
95 m1_serve_splitted_2[sandw3] -> _splitting_method_m1_serve_splitted_2 43
96 m1_serve_splitted_6[sandw3,kitchen,kitchen,child8,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw3,child8,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 44 45 46 47
97 serve[child9] -> m1_serve 48 98 99
98 m1_serve_splitted_2[sandw9] -> _splitting_method_m1_serve_splitted_2 49
99 m1_serve_splitted_6[sandw9,kitchen,kitchen,child9,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw9,child9,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 50 51 52 53
100 serve[child10] -> m1_serve 54 101 102
101 m1_serve_splitted_2[sandw5] -> _splitting_method_m1_serve_splitted_2 55
102 m1_serve_splitted_6[sandw5,kitchen,kitchen,child10,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray1,kitchen,sandw5,child10,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 56 57 58 59
103 serve[child11] -> m1_serve 60 104 105
104 m1_serve_splitted_2[sandw6] -> _splitting_method_m1_serve_splitted_2 61
105 m1_serve_splitted_6[sandw6,kitchen,kitchen,child11,kitchen] -> <_splitting_method_m1_serve_splitted_6;m1_serve_splitted_4[tray3,kitchen,sandw6,child11,kitchen];_splitting_method_m1_serve_splitted_4;1;0,-1,-2,-3> 62 63 64 65
106 serve[child12] -> m0_serve 66 107 108
107 m0_serve_splitted_1[sandw16] -> _splitting_method_m0_serve_splitted_1 67
108 m0_serve_splitted_5[sandw16,kitchen,kitchen,child12,kitchen] -> <_splitting_method_m0_serve_splitted_5;m0_serve_splitted_3[tray3,kitchen,sandw16,child12,kitchen];_splitting_method_m0_serve_splitted_3;1;0,-1,-2,-3> 68 69 70 71
<==

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 0.297363 MEMPEAK_KBS 924
